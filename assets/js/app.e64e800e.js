(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var t,i,l=e[0],s=e[1],c=e[2],d=0,p=[];d<l.length;d++)i=l[d],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&p.push(a[i][0]),a[i]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n[t]=s[t]);for(u&&u(e);p.length;)p.shift()();return o.push.apply(o,c||[]),r()}function r(){for(var n,e=0;e<o.length;e++){for(var r=o[e],t=!0,l=1;l<r.length;l++){var s=r[l];0!==a[s]&&(t=!1)}t&&(o.splice(e--,1),n=i(i.s=r[0]))}return n}var t={},a={14:0},o=[];function i(e){if(t[e])return t[e].exports;var r=t[e]={i:e,l:!1,exports:{}};return n[e].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.e=function(n){var e=[],r=a[n];if(0!==r)if(r)e.push(r[2]);else{var t=new Promise((function(e,t){r=a[n]=[e,t]}));e.push(r[2]=t);var o,l=document.createElement("script");l.charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.src=function(n){return i.p+"assets/js/"+({15:"vendors~docsearch"}[n]||n)+"."+{1:"1fab06f1",2:"0b42d6b1",3:"3a087945",4:"e529de53",5:"5c0a5f2e",6:"7ba62bdb",7:"71d5dbb0",8:"b28a8a23",9:"734bb4e3",10:"1cf4f0de",11:"2be57f8d",12:"9960d5ec",13:"3e35c207",15:"72345fee",16:"76684b4f",17:"6398d3cb",18:"ee144904",19:"565e858e",20:"63febe62",21:"0e9469f5",22:"b71b485f",23:"1bafcacf",24:"4b68a2ea",25:"9b4dc130",26:"a9d89ed5",27:"71372fc8",28:"5d635f50",29:"adfc7916",30:"9cbd3821",31:"58bc835a",32:"9f7b5c1e",33:"cb111af9",34:"0622ccbb",35:"5677b87a",36:"8e74cb22",37:"112dc29a",38:"7659a55f",39:"5196624e",40:"e63e915e",41:"5a848f61",42:"1eaaf47b",43:"bcdcf891",44:"09f1804b",45:"afb7e8a1",46:"7944d78b",47:"de49c75f",48:"afe1a137",49:"bf984ead",50:"30b3532e",51:"b1ccbc6f",52:"3f04ce0f",53:"7a99a4b5",54:"3a3472be",55:"6c8c6473",56:"d01f6440",57:"0ae0b8e4",58:"4976c7ec",59:"1937bec9",60:"e443dcbb",61:"f20abbd2",62:"407a9500",63:"770e3baf",64:"09faeb1a",65:"5481b4d2",66:"1a262a6f",67:"2be0966b",68:"90b6b779",69:"ad3a4922",70:"f47b30e1",71:"dcb54476",72:"d3b0cc4b",73:"95d923aa",74:"d4ea4bb3",75:"9cae64d2",76:"1dd26e2c",77:"aec43245",78:"08279270",79:"60c17df0",80:"7ba4252a",81:"574308d3",82:"f7c6224b",83:"08299646",84:"3e83f029",85:"85c5b65d",86:"0ae68397",87:"97b6c16e",88:"ccaff9f4",89:"99394780",90:"9f217712",91:"36772cbc",92:"79242484",93:"d8a34df9",94:"15802529",95:"cdf343ab",96:"0f04f817",97:"df30decc",98:"15c8ba78",99:"ad55d28f",100:"b7345e8b",101:"746a00a6",102:"7c7229b7",103:"e422e7c4",104:"8561a3eb",105:"2c08e1a6",106:"729c9434",107:"cece88ad",108:"6b168a9f",109:"facc34e8",110:"c6f81a9d",111:"e7607520",112:"f6455620",113:"c246b4a4",114:"e51f96cb",115:"9450b930",116:"0544d012",117:"c1a548ee",118:"9a05a7de",119:"9c8f7146",120:"84010852",121:"9af3f709",122:"163476ff",123:"d9087224",124:"f9b5de73",125:"b34b0ecc",126:"91b97871",127:"bf90f0c7",128:"fbd3655e",129:"5a061f94",130:"9725d164",131:"5b22d294",132:"12247fc7",133:"87f54eba",134:"4a28c358",135:"c5c0b2a5",136:"2a19a684",137:"2719d398",138:"4cac8dd2",139:"7ccf2056",140:"d5597bd4",141:"633dfb0a",142:"d2523cd4",143:"db00d8f3",144:"81b86093",145:"e358fb4a",146:"a2ff5092",147:"844220a5",148:"998aa475",149:"43ddc0a8",150:"10d5ed11",151:"1f117eed",152:"ed061bc1",153:"5b28ecec",154:"c5fb87ca",155:"50b3d555",156:"70ea4d81",157:"d2116c43",158:"972514c5",159:"1063dd73",160:"faed449a",161:"74d26e71",162:"fc817bd8",163:"8b3513a6",164:"e24fd511",165:"85e39823",166:"334b8f24",167:"95da1eb8",168:"2fc5f820",169:"8adbb7c0",170:"b8b781cc",171:"142b91e7",172:"d0be897d",173:"88132720",174:"1328799d",175:"afdc09c7",176:"cece4390",177:"a0589142",178:"89e91eb1",179:"998482c3",180:"587ef2ca",181:"2f436b97",182:"e0a226d3",183:"ae14b864",184:"bac70d56",185:"130776ca",186:"debab62f",187:"ceb56214",188:"8c4c92ca",189:"49e332b4",190:"81835961",191:"4bb5238f",192:"4924bb75",193:"27a5ee7a",194:"47106852",195:"6c7f406a",196:"ef7aa000",197:"e9247046",198:"b1fbfaa3",199:"694f20f0",200:"2c80e378",201:"008f85bd",202:"65a5a836",203:"f07d7572",204:"4c696616"}[n]+".js"}(n);var s=new Error;o=function(e){l.onerror=l.onload=null,clearTimeout(c);var r=a[n];if(0!==r){if(r){var t=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;s.message="Loading chunk "+n+" failed.\n("+t+": "+o+")",s.name="ChunkLoadError",s.type=t,s.request=o,r[1](s)}a[n]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:l})}),12e4);l.onerror=l.onload=o,document.head.appendChild(l)}return Promise.all(e)},i.m=n,i.c=t,i.d=function(n,e,r){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var t in n)i.d(r,t,function(e){return n[e]}.bind(null,t));return r},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/vue-super-crud/",i.oe=function(n){throw console.error(n),n};var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=e,l=l.slice();for(var c=0;c<l.length;c++)e(l[c]);var u=s;o.push([149,0]),r()}([function(n,e,r){"use strict";r.r(e),r.d(e,"EffectScope",(function(){return ye})),r.d(e,"computed",(function(){return se})),r.d(e,"customRef",(function(){return ee})),r.d(e,"default",(function(){return Zt})),r.d(e,"defineAsyncComponent",(function(){return jr})),r.d(e,"defineComponent",(function(){return Wr})),r.d(e,"del",(function(){return Pn})),r.d(e,"effectScope",(function(){return xe})),r.d(e,"getCurrentInstance",(function(){return mn})),r.d(e,"getCurrentScope",(function(){return we})),r.d(e,"h",(function(){return mr})),r.d(e,"inject",(function(){return De})),r.d(e,"isProxy",(function(){return Vn})),r.d(e,"isReactive",(function(){return Nn})),r.d(e,"isReadonly",(function(){return qn})),r.d(e,"isRef",(function(){return Gn})),r.d(e,"isShallow",(function(){return Un})),r.d(e,"markRaw",(function(){return Wn})),r.d(e,"mergeDefaults",(function(){return sr})),r.d(e,"nextTick",(function(){return $r})),r.d(e,"onActivated",(function(){return Lr})),r.d(e,"onBeforeMount",(function(){return zr})),r.d(e,"onBeforeUnmount",(function(){return Pr})),r.d(e,"onBeforeUpdate",(function(){return Fr})),r.d(e,"onDeactivated",(function(){return Rr})),r.d(e,"onErrorCaptured",(function(){return Vr})),r.d(e,"onMounted",(function(){return Ir})),r.d(e,"onRenderTracked",(function(){return Nr})),r.d(e,"onRenderTriggered",(function(){return Ur})),r.d(e,"onScopeDispose",(function(){return ke})),r.d(e,"onServerPrefetch",(function(){return Br})),r.d(e,"onUnmounted",(function(){return Mr})),r.d(e,"onUpdated",(function(){return Or})),r.d(e,"provide",(function(){return Ce})),r.d(e,"proxyRefs",(function(){return Xn})),r.d(e,"reactive",(function(){return Ln})),r.d(e,"readonly",(function(){return ae})),r.d(e,"ref",(function(){return Qn})),r.d(e,"set",(function(){return On})),r.d(e,"shallowReactive",(function(){return Rn})),r.d(e,"shallowReadonly",(function(){return le})),r.d(e,"shallowRef",(function(){return Kn})),r.d(e,"toRaw",(function(){return Hn})),r.d(e,"toRef",(function(){return te})),r.d(e,"toRefs",(function(){return re})),r.d(e,"triggerRef",(function(){return Jn})),r.d(e,"unref",(function(){return Zn})),r.d(e,"useAttrs",(function(){return or})),r.d(e,"useCssModule",(function(){return Ar})),r.d(e,"useCssVars",(function(){return Tr})),r.d(e,"useListeners",(function(){return ir})),r.d(e,"useSlots",(function(){return ar})),r.d(e,"version",(function(){return Hr})),r.d(e,"watch",(function(){return ve})),r.d(e,"watchEffect",(function(){return pe})),r.d(e,"watchPostEffect",(function(){return me})),r.d(e,"watchSyncEffect",(function(){return he}));
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var t=Object.freeze({}),a=Array.isArray;function o(n){return null==n}function i(n){return null!=n}function l(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function u(n){return null!==n&&"object"==typeof n}var d=Object.prototype.toString;function p(n){return"[object Object]"===d.call(n)}function m(n){return"[object RegExp]"===d.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function f(n){return i(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function g(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===d?JSON.stringify(n,v,2):String(n)}function v(n,e){return e&&e.__v_isRef?e.value:e}function b(n){var e=parseFloat(n);return isNaN(e)?n:e}function y(n,e){for(var r=Object.create(null),t=n.split(","),a=0;a<t.length;a++)r[t[a]]=!0;return e?function(n){return r[n.toLowerCase()]}:function(n){return r[n]}}y("slot,component",!0);var x=y("key,ref,slot,slot-scope,is");function w(n,e){var r=n.length;if(r){if(e===n[r-1])return void(n.length=r-1);var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var k=Object.prototype.hasOwnProperty;function C(n,e){return k.call(n,e)}function _(n){var e=Object.create(null);return function(r){return e[r]||(e[r]=n(r))}}var D=/-(\w)/g,S=_((function(n){return n.replace(D,(function(n,e){return e?e.toUpperCase():""}))})),$=_((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),A=/\B([A-Z])/g,T=_((function(n){return n.replace(A,"-$1").toLowerCase()}));var j=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function r(r){var t=arguments.length;return t?t>1?n.apply(e,arguments):n.call(e,r):n.call(e)}return r._length=n.length,r};function E(n,e){e=e||0;for(var r=n.length-e,t=new Array(r);r--;)t[r]=n[r+e];return t}function z(n,e){for(var r in e)n[r]=e[r];return n}function I(n){for(var e={},r=0;r<n.length;r++)n[r]&&z(e,n[r]);return e}function F(n,e,r){}var O=function(n,e,r){return!1},P=function(n){return n};function M(n,e){if(n===e)return!0;var r=u(n),t=u(e);if(!r||!t)return!r&&!t&&String(n)===String(e);try{var a=Array.isArray(n),o=Array.isArray(e);if(a&&o)return n.length===e.length&&n.every((function(n,r){return M(n,e[r])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||o)return!1;var i=Object.keys(n),l=Object.keys(e);return i.length===l.length&&i.every((function(r){return M(n[r],e[r])}))}catch(n){return!1}}function L(n,e){for(var r=0;r<n.length;r++)if(M(n[r],e))return r;return-1}function R(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function B(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var N=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:F,parsePlatformTagName:P,mustUseProp:O,async:!0,_lifecycleHooks:U},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function H(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function W(n,e,r,t){Object.defineProperty(n,e,{value:r,enumerable:!!t,writable:!0,configurable:!0})}var G=new RegExp("[^".concat(V.source,".$_\\d]"));var Q="__proto__"in{},K="undefined"!=typeof window,Y=K&&window.navigator.userAgent.toLowerCase(),J=Y&&/msie|trident/.test(Y),Z=Y&&Y.indexOf("msie 9.0")>0,X=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var nn=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var en,rn=Y&&Y.match(/firefox\/(\d+)/),tn={}.watch,an=!1;if(K)try{var on={};Object.defineProperty(on,"passive",{get:function(){an=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var ln=function(){return void 0===en&&(en=!K&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},sn=K&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var un,dn="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);un="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var pn=null;function mn(){return pn&&{proxy:pn}}function hn(n){void 0===n&&(n=null),n||pn&&pn._scope.off(),pn=n,n&&n._scope.on()}var fn=function(){function n(n,e,r,t,a,o,i,l){this.tag=n,this.data=e,this.children=r,this.text=t,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=l,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),gn=function(n){void 0===n&&(n="");var e=new fn;return e.text=n,e.isComment=!0,e};function vn(n){return new fn(void 0,void 0,void 0,String(n))}function bn(n){var e=new fn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var yn=0,xn=[],wn=function(){function n(){this._pending=!1,this.id=yn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,xn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var r=0,t=e.length;r<t;r++){0,e[r].update()}},n}();wn.target=null;var kn=[];function Cn(n){kn.push(n),wn.target=n}function _n(){kn.pop(),wn.target=kn[kn.length-1]}var Dn=Array.prototype,Sn=Object.create(Dn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=Dn[n];W(Sn,n,(function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];var a,o=e.apply(this,r),i=this.__ob__;switch(n){case"push":case"unshift":a=r;break;case"splice":a=r.slice(2)}return a&&i.observeArray(a),i.dep.notify(),o}))}));var $n=Object.getOwnPropertyNames(Sn),An={},Tn=!0;function jn(n){Tn=n}var En={notify:F,depend:F,addSub:F,removeSub:F},zn=function(){function n(n,e,r){if(void 0===e&&(e=!1),void 0===r&&(r=!1),this.value=n,this.shallow=e,this.mock=r,this.dep=r?En:new wn,this.vmCount=0,W(n,"__ob__",this),a(n)){if(!r)if(Q)n.__proto__=Sn;else for(var t=0,o=$n.length;t<o;t++){W(n,l=$n[t],Sn[l])}e||this.observeArray(n)}else{var i=Object.keys(n);for(t=0;t<i.length;t++){var l;Fn(n,l=i[t],An,void 0,e,r)}}}return n.prototype.observeArray=function(n){for(var e=0,r=n.length;e<r;e++)In(n[e],!1,this.mock)},n}();function In(n,e,r){return n&&C(n,"__ob__")&&n.__ob__ instanceof zn?n.__ob__:!Tn||!r&&ln()||!a(n)&&!p(n)||!Object.isExtensible(n)||n.__v_skip||Gn(n)||n instanceof fn?void 0:new zn(n,e,r)}function Fn(n,e,r,t,o,i,l){void 0===l&&(l=!1);var s=new wn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var u=c&&c.get,d=c&&c.set;u&&!d||r!==An&&2!==arguments.length||(r=n[e]);var p=o?r&&r.__ob__:In(r,!1,i);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=u?u.call(n):r;return wn.target&&(s.depend(),p&&(p.dep.depend(),a(e)&&Mn(e))),Gn(e)&&!o?e.value:e},set:function(e){var t=u?u.call(n):r;if(B(t,e)){if(d)d.call(n,e);else{if(u)return;if(!o&&Gn(t)&&!Gn(e))return void(t.value=e);r=e}p=o?e&&e.__ob__:In(e,!1,i),s.notify()}}}),s}}function On(n,e,r){if(!qn(n)){var t=n.__ob__;return a(n)&&h(e)?(n.length=Math.max(n.length,e),n.splice(e,1,r),t&&!t.shallow&&t.mock&&In(r,!1,!0),r):e in n&&!(e in Object.prototype)?(n[e]=r,r):n._isVue||t&&t.vmCount?r:t?(Fn(t.value,e,r,void 0,t.shallow,t.mock),t.dep.notify(),r):(n[e]=r,r)}}function Pn(n,e){if(a(n)&&h(e))n.splice(e,1);else{var r=n.__ob__;n._isVue||r&&r.vmCount||qn(n)||C(n,e)&&(delete n[e],r&&r.dep.notify())}}function Mn(n){for(var e=void 0,r=0,t=n.length;r<t;r++)(e=n[r])&&e.__ob__&&e.__ob__.dep.depend(),a(e)&&Mn(e)}function Ln(n){return Bn(n,!1),n}function Rn(n){return Bn(n,!0),W(n,"__v_isShallow",!0),n}function Bn(n,e){if(!qn(n)){In(n,e,ln());0}}function Nn(n){return qn(n)?Nn(n.__v_raw):!(!n||!n.__ob__)}function Un(n){return!(!n||!n.__v_isShallow)}function qn(n){return!(!n||!n.__v_isReadonly)}function Vn(n){return Nn(n)||qn(n)}function Hn(n){var e=n&&n.__v_raw;return e?Hn(e):n}function Wn(n){return Object.isExtensible(n)&&W(n,"__v_skip",!0),n}function Gn(n){return!(!n||!0!==n.__v_isRef)}function Qn(n){return Yn(n,!1)}function Kn(n){return Yn(n,!0)}function Yn(n,e){if(Gn(n))return n;var r={};return W(r,"__v_isRef",!0),W(r,"__v_isShallow",e),W(r,"dep",Fn(r,"value",n,null,e,ln())),r}function Jn(n){n.dep&&n.dep.notify()}function Zn(n){return Gn(n)?n.value:n}function Xn(n){if(Nn(n))return n;for(var e={},r=Object.keys(n),t=0;t<r.length;t++)ne(e,n,r[t]);return e}function ne(n,e,r){Object.defineProperty(n,r,{enumerable:!0,configurable:!0,get:function(){var n=e[r];if(Gn(n))return n.value;var t=n&&n.__ob__;return t&&t.dep.depend(),n},set:function(n){var t=e[r];Gn(t)&&!Gn(n)?t.value=n:e[r]=n}})}function ee(n){var e=new wn,r=n((function(){e.depend()}),(function(){e.notify()})),t=r.get,a=r.set,o={get value(){return t()},set value(n){a(n)}};return W(o,"__v_isRef",!0),o}function re(n){var e=a(n)?new Array(n.length):{};for(var r in n)e[r]=te(n,r);return e}function te(n,e,r){var t=n[e];if(Gn(t))return t;var a={get value(){var t=n[e];return void 0===t?r:t},set value(r){n[e]=r}};return W(a,"__v_isRef",!0),a}function ae(n){return oe(n,!1)}function oe(n,e){if(!p(n))return n;if(qn(n))return n;var r=e?"__v_rawToShallowReadonly":"__v_rawToReadonly",t=n[r];if(t)return t;var a=Object.create(Object.getPrototypeOf(n));W(n,r,a),W(a,"__v_isReadonly",!0),W(a,"__v_raw",n),Gn(n)&&W(a,"__v_isRef",!0),(e||Un(n))&&W(a,"__v_isShallow",!0);for(var o=Object.keys(n),i=0;i<o.length;i++)ie(a,n,o[i],e);return a}function ie(n,e,r,t){Object.defineProperty(n,r,{enumerable:!0,configurable:!0,get:function(){var n=e[r];return t||!p(n)?n:ae(n)},set:function(){}})}function le(n){return oe(n,!0)}function se(n,e){var r,t,a=c(n);a?(r=n,t=F):(r=n.get,t=n.set);var o=ln()?null:new Jr(pn,r,F,{lazy:!0});var i={effect:o,get value(){return o?(o.dirty&&o.evaluate(),wn.target&&o.depend(),o.value):r()},set value(n){t(n)}};return W(i,"__v_isRef",!0),W(i,"__v_isReadonly",a),i}var ce="".concat("watcher"," callback"),ue="".concat("watcher"," getter"),de="".concat("watcher"," cleanup");function pe(n,e){return be(n,null,e)}function me(n,e){return be(n,null,{flush:"post"})}function he(n,e){return be(n,null,{flush:"sync"})}var fe,ge={};function ve(n,e,r){return be(n,e,r)}function be(n,e,r){var o=void 0===r?t:r,i=o.immediate,l=o.deep,s=o.flush,u=void 0===s?"pre":s;o.onTrack,o.onTrigger;var d,p,m=pn,h=function(n,e,r){void 0===r&&(r=null);var t=fr(n,null,r,m,e);return l&&t&&t.__ob__&&t.__ob__.dep.depend(),t},f=!1,g=!1;if(Gn(n)?(d=function(){return n.value},f=Un(n)):Nn(n)?(d=function(){return n.__ob__.dep.depend(),n},l=!0):a(n)?(g=!0,f=n.some((function(n){return Nn(n)||Un(n)})),d=function(){return n.map((function(n){return Gn(n)?n.value:Nn(n)?(n.__ob__.dep.depend(),Qr(n)):c(n)?h(n,ue):void 0}))}):d=c(n)?e?function(){return h(n,ue)}:function(){if(!m||!m._isDestroyed)return p&&p(),h(n,"watcher",[b])}:F,e&&l){var v=d;d=function(){return Qr(v())}}var b=function(n){p=y.onStop=function(){h(n,de)}};if(ln())return b=F,e?i&&h(e,ce,[d(),g?[]:void 0,b]):d(),F;var y=new Jr(pn,d,F,{lazy:!0});y.noRecurse=!e;var x=g?[]:ge;return y.run=function(){if(y.active)if(e){var n=y.get();(l||f||(g?n.some((function(n,e){return B(n,x[e])})):B(n,x)))&&(p&&p(),h(e,ce,[n,x===ge?void 0:x,b]),x=n)}else y.get()},"sync"===u?y.update=y.run:"post"===u?(y.post=!0,y.update=function(){return bt(y)}):y.update=function(){if(m&&m===pn&&!m._isMounted){var n=m._preWatchers||(m._preWatchers=[]);n.indexOf(y)<0&&n.push(y)}else bt(y)},e?i?y.run():x=y.get():"post"===u&&m?m.$once("hook:mounted",(function(){return y.get()})):y.get(),function(){y.teardown()}}var ye=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=fe,!n&&fe&&(this.index=(fe.scopes||(fe.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=fe;try{return fe=this,n()}finally{fe=e}}else 0},n.prototype.on=function(){fe=this},n.prototype.off=function(){fe=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,r=void 0;for(e=0,r=this.effects.length;e<r;e++)this.effects[e].teardown();for(e=0,r=this.cleanups.length;e<r;e++)this.cleanups[e]();if(this.scopes)for(e=0,r=this.scopes.length;e<r;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.parent=void 0,this.active=!1}},n}();function xe(n){return new ye(n)}function we(){return fe}function ke(n){fe&&fe.cleanups.push(n)}function Ce(n,e){pn&&(_e(pn)[n]=e)}function _e(n){var e=n._provided,r=n.$parent&&n.$parent._provided;return r===e?n._provided=Object.create(r):e}function De(n,e,r){void 0===r&&(r=!1);var t=pn;if(t){var a=t.$parent&&t.$parent._provided;if(a&&n in a)return a[n];if(arguments.length>1)return r&&c(e)?e.call(t):e}else 0}var Se=_((function(n){var e="&"===n.charAt(0),r="~"===(n=e?n.slice(1):n).charAt(0),t="!"===(n=r?n.slice(1):n).charAt(0);return{name:n=t?n.slice(1):n,once:r,capture:t,passive:e}}));function $e(n,e){function r(){var n=r.fns;if(!a(n))return fr(n,null,arguments,e,"v-on handler");for(var t=n.slice(),o=0;o<t.length;o++)fr(t[o],null,arguments,e,"v-on handler")}return r.fns=n,r}function Ae(n,e,r,t,a,i){var s,c,u,d;for(s in n)c=n[s],u=e[s],d=Se(s),o(c)||(o(u)?(o(c.fns)&&(c=n[s]=$e(c,i)),l(d.once)&&(c=n[s]=a(d.name,c,d.capture)),r(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,n[s]=u));for(s in e)o(n[s])&&t((d=Se(s)).name,e[s],d.capture)}function Te(n,e,r){var t;n instanceof fn&&(n=n.data.hook||(n.data.hook={}));var a=n[e];function s(){r.apply(this,arguments),w(t.fns,s)}o(a)?t=$e([s]):i(a.fns)&&l(a.merged)?(t=a).fns.push(s):t=$e([a,s]),t.merged=!0,n[e]=t}function je(n,e,r,t,a){if(i(e)){if(C(e,r))return n[r]=e[r],a||delete e[r],!0;if(C(e,t))return n[r]=e[t],a||delete e[t],!0}return!1}function Ee(n){return s(n)?[vn(n)]:a(n)?function n(e,r){var t,c,u,d,p=[];for(t=0;t<e.length;t++)o(c=e[t])||"boolean"==typeof c||(u=p.length-1,d=p[u],a(c)?c.length>0&&(ze((c=n(c,"".concat(r||"","_").concat(t)))[0])&&ze(d)&&(p[u]=vn(d.text+c[0].text),c.shift()),p.push.apply(p,c)):s(c)?ze(d)?p[u]=vn(d.text+c):""!==c&&p.push(vn(c)):ze(c)&&ze(d)?p[u]=vn(d.text+c.text):(l(e._isVList)&&i(c.tag)&&o(c.key)&&i(r)&&(c.key="__vlist".concat(r,"_").concat(t,"__")),p.push(c)));return p}(n):void 0}function ze(n){return i(n)&&i(n.text)&&!1===n.isComment}function Ie(n,e){var r,t,o,l,s=null;if(a(n)||"string"==typeof n)for(s=new Array(n.length),r=0,t=n.length;r<t;r++)s[r]=e(n[r],r);else if("number"==typeof n)for(s=new Array(n),r=0;r<n;r++)s[r]=e(r+1,r);else if(u(n))if(dn&&n[Symbol.iterator]){s=[];for(var c=n[Symbol.iterator](),d=c.next();!d.done;)s.push(e(d.value,s.length)),d=c.next()}else for(o=Object.keys(n),s=new Array(o.length),r=0,t=o.length;r<t;r++)l=o[r],s[r]=e(n[l],l,r);return i(s)||(s=[]),s._isVList=!0,s}function Fe(n,e,r,t){var a,o=this.$scopedSlots[n];o?(r=r||{},t&&(r=z(z({},t),r)),a=o(r)||(c(e)?e():e)):a=this.$slots[n]||(c(e)?e():e);var i=r&&r.slot;return i?this.$createElement("template",{slot:i},a):a}function Oe(n){return Pt(this.$options,"filters",n,!0)||P}function Pe(n,e){return a(n)?-1===n.indexOf(e):n!==e}function Me(n,e,r,t,a){var o=q.keyCodes[e]||r;return a&&t&&!q.keyCodes[e]?Pe(a,t):o?Pe(o,n):t?T(t)!==e:void 0===n}function Le(n,e,r,t,o){if(r)if(u(r)){a(r)&&(r=I(r));var i=void 0,l=function(a){if("class"===a||"style"===a||x(a))i=n;else{var l=n.attrs&&n.attrs.type;i=t||q.mustUseProp(e,l,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var s=S(a),c=T(a);s in i||c in i||(i[a]=r[a],o&&((n.on||(n.on={}))["update:".concat(a)]=function(n){r[a]=n}))};for(var s in r)l(s)}else;return n}function Re(n,e){var r=this._staticTrees||(this._staticTrees=[]),t=r[n];return t&&!e||Ne(t=r[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),t}function Be(n,e,r){return Ne(n,"__once__".concat(e).concat(r?"_".concat(r):""),!0),n}function Ne(n,e,r){if(a(n))for(var t=0;t<n.length;t++)n[t]&&"string"!=typeof n[t]&&Ue(n[t],"".concat(e,"_").concat(t),r);else Ue(n,e,r)}function Ue(n,e,r){n.isStatic=!0,n.key=e,n.isOnce=r}function qe(n,e){if(e)if(p(e)){var r=n.on=n.on?z({},n.on):{};for(var t in e){var a=r[t],o=e[t];r[t]=a?[].concat(a,o):o}}else;return n}function Ve(n,e,r,t){e=e||{$stable:!r};for(var o=0;o<n.length;o++){var i=n[o];a(i)?Ve(i,e,r):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return t&&(e.$key=t),e}function He(n,e){for(var r=0;r<e.length;r+=2){var t=e[r];"string"==typeof t&&t&&(n[e[r]]=e[r+1])}return n}function We(n,e){return"string"==typeof n?e+n:n}function Ge(n){n._o=Be,n._n=b,n._s=g,n._l=Ie,n._t=Fe,n._q=M,n._i=L,n._m=Re,n._f=Oe,n._k=Me,n._b=Le,n._v=vn,n._e=gn,n._u=Ve,n._g=qe,n._d=He,n._p=We}function Qe(n,e){if(!n||!n.length)return{};for(var r={},t=0,a=n.length;t<a;t++){var o=n[t],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==e&&o.fnContext!==e||!i||null==i.slot)(r.default||(r.default=[])).push(o);else{var l=i.slot,s=r[l]||(r[l]=[]);"template"===o.tag?s.push.apply(s,o.children||[]):s.push(o)}}for(var c in r)r[c].every(Ke)&&delete r[c];return r}function Ke(n){return n.isComment&&!n.asyncFactory||" "===n.text}function Ye(n){return n.isComment&&n.asyncFactory}function Je(n,e,r,a){var o,i=Object.keys(r).length>0,l=e?!!e.$stable:!i,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(l&&a&&a!==t&&s===a.$key&&!i&&!a.$hasNormal)return a;for(var c in o={},e)e[c]&&"$"!==c[0]&&(o[c]=Ze(n,r,c,e[c]))}else o={};for(var u in r)u in o||(o[u]=Xe(r,u));return e&&Object.isExtensible(e)&&(e._normalized=o),W(o,"$stable",l),W(o,"$key",s),W(o,"$hasNormal",i),o}function Ze(n,e,r,t){var o=function(){var e=pn;hn(n);var r=arguments.length?t.apply(null,arguments):t({}),o=(r=r&&"object"==typeof r&&!a(r)?[r]:Ee(r))&&r[0];return hn(e),r&&(!o||1===r.length&&o.isComment&&!Ye(o))?void 0:r};return t.proxy&&Object.defineProperty(e,r,{get:o,enumerable:!0,configurable:!0}),o}function Xe(n,e){return function(){return n[e]}}function nr(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};W(e,"_v_attr_proxy",!0),er(e,n.$attrs,t,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||er(n._listenersProxy={},n.$listeners,t,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||tr(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:j(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(r){return ne(n,e,r)}))}}}function er(n,e,r,t,a){var o=!1;for(var i in e)i in n?e[i]!==r[i]&&(o=!0):(o=!0,rr(n,i,t,a));for(var i in n)i in e||(o=!0,delete n[i]);return o}function rr(n,e,r,t){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return r[t][e]}})}function tr(n,e){for(var r in e)n[r]=e[r];for(var r in n)r in e||delete n[r]}function ar(){return lr().slots}function or(){return lr().attrs}function ir(){return lr().listeners}function lr(){var n=pn;return n._setupContext||(n._setupContext=nr(n))}function sr(n,e){var r=a(n)?n.reduce((function(n,e){return n[e]={},n}),{}):n;for(var t in e){var o=r[t];o?a(o)||c(o)?r[t]={type:o,default:e[t]}:o.default=e[t]:null===o&&(r[t]={default:e[t]})}return r}var cr=null;function ur(n,e){return(n.__esModule||dn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),u(n)?e.extend(n):n}function dr(n){if(a(n))for(var e=0;e<n.length;e++){var r=n[e];if(i(r)&&(i(r.componentOptions)||Ye(r)))return r}}function pr(n,e,r,t,d,p){return(a(r)||s(r))&&(d=t,t=r,r=void 0),l(p)&&(d=2),function(n,e,r,t,s){if(i(r)&&i(r.__ob__))return gn();i(r)&&i(r.is)&&(e=r.is);if(!e)return gn();0;a(t)&&c(t[0])&&((r=r||{}).scopedSlots={default:t[0]},t.length=0);2===s?t=Ee(t):1===s&&(t=function(n){for(var e=0;e<n.length;e++)if(a(n[e]))return Array.prototype.concat.apply([],n);return n}(t));var d,p;if("string"==typeof e){var m=void 0;p=n.$vnode&&n.$vnode.ns||q.getTagNamespace(e),d=q.isReservedTag(e)?new fn(q.parsePlatformTagName(e),r,t,void 0,void 0,n):r&&r.pre||!i(m=Pt(n.$options,"components",e))?new fn(e,r,t,void 0,void 0,n):St(m,r,n,t,e)}else d=St(e,r,n,t);return a(d)?d:i(d)?(i(p)&&function n(e,r,t){e.ns=r,"foreignObject"===e.tag&&(r=void 0,t=!0);if(i(e.children))for(var a=0,s=e.children.length;a<s;a++){var c=e.children[a];i(c.tag)&&(o(c.ns)||l(t)&&"svg"!==c.tag)&&n(c,r,t)}}(d,p),i(r)&&function(n){u(n.style)&&Qr(n.style);u(n.class)&&Qr(n.class)}(r),d):gn()}(n,e,r,t,d)}function mr(n,e,r){return pr(pn,n,e,r,2,!0)}function hr(n,e,r){Cn();try{if(e)for(var t=e;t=t.$parent;){var a=t.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(t,n,e,r))return}catch(n){gr(n,t,"errorCaptured hook")}}gr(n,e,r)}finally{_n()}}function fr(n,e,r,t,a){var o;try{(o=r?n.apply(e,r):n.call(e))&&!o._isVue&&f(o)&&!o._handled&&(o.catch((function(n){return hr(n,t,a+" (Promise/async)")})),o._handled=!0)}catch(n){hr(n,t,a)}return o}function gr(n,e,r){if(q.errorHandler)try{return q.errorHandler.call(null,n,e,r)}catch(e){e!==n&&vr(e,null,"config.errorHandler")}vr(n,e,r)}function vr(n,e,r){if(!K||"undefined"==typeof console)throw n;console.error(n)}var br,yr=!1,xr=[],wr=!1;function kr(){wr=!1;var n=xr.slice(0);xr.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var Cr=Promise.resolve();br=function(){Cr.then(kr),nn&&setTimeout(F)},yr=!0}else if(J||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())br="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(kr)}:function(){setTimeout(kr,0)};else{var _r=1,Dr=new MutationObserver(kr),Sr=document.createTextNode(String(_r));Dr.observe(Sr,{characterData:!0}),br=function(){_r=(_r+1)%2,Sr.data=String(_r)},yr=!0}function $r(n,e){var r;if(xr.push((function(){if(n)try{n.call(e)}catch(n){hr(n,e,"nextTick")}else r&&r(e)})),wr||(wr=!0,br()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){r=n}))}function Ar(n){if(void 0===n&&(n="$style"),!pn)return t;var e=pn[n];return e||t}function Tr(n){if(K){var e=pn;e&&me((function(){var r=e.$el,t=n(e,e._setupProxy);if(r&&1===r.nodeType){var a=r.style;for(var o in t)a.setProperty("--".concat(o),t[o])}}))}}function jr(n){c(n)&&(n={loader:n});var e=n.loader,r=n.loadingComponent,t=n.errorComponent,a=n.delay,o=void 0===a?200:a,i=n.timeout,l=(n.suspensible,n.onError);var s=null,u=0,d=function(){var n;return s||(n=s=e().catch((function(n){if(n=n instanceof Error?n:new Error(String(n)),l)return new Promise((function(e,r){l(n,(function(){return e((u++,s=null,d()))}),(function(){return r(n)}),u+1)}));throw n})).then((function(e){return n!==s&&s?s:(e&&(e.__esModule||"Module"===e[Symbol.toStringTag])&&(e=e.default),e)})))};return function(){return{component:d(),delay:o,timeout:i,error:t,loading:r}}}function Er(n){return function(e,r){if(void 0===r&&(r=pn),r)return function(n,e,r){var t=n.$options;t[e]=zt(t[e],r)}(r,n,e)}}var zr=Er("beforeMount"),Ir=Er("mounted"),Fr=Er("beforeUpdate"),Or=Er("updated"),Pr=Er("beforeDestroy"),Mr=Er("destroyed"),Lr=Er("activated"),Rr=Er("deactivated"),Br=Er("serverPrefetch"),Nr=Er("renderTracked"),Ur=Er("renderTriggered"),qr=Er("errorCaptured");function Vr(n,e){void 0===e&&(e=pn),qr(n,e)}var Hr="2.7.16";function Wr(n){return n}var Gr=new un;function Qr(n){return function n(e,r){var t,o,i=a(e);if(!i&&!u(e)||e.__v_skip||Object.isFrozen(e)||e instanceof fn)return;if(e.__ob__){var l=e.__ob__.dep.id;if(r.has(l))return;r.add(l)}if(i)for(t=e.length;t--;)n(e[t],r);else if(Gn(e))n(e.value,r);else for(o=Object.keys(e),t=o.length;t--;)n(e[o[t]],r)}(n,Gr),Gr.clear(),n}var Kr,Yr=0,Jr=function(){function n(n,e,r,t,a){var o,i;o=this,void 0===(i=fe&&!fe._vm?fe:n?n._scope:void 0)&&(i=fe),i&&i.active&&i.effects.push(o),(this.vm=n)&&a&&(n._watcher=this),t?(this.deep=!!t.deep,this.user=!!t.user,this.lazy=!!t.lazy,this.sync=!!t.sync,this.before=t.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=r,this.id=++Yr,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new un,this.newDepIds=new un,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!G.test(n)){var e=n.split(".");return function(n){for(var r=0;r<e.length;r++){if(!n)return;n=n[e[r]]}return n}}}(e),this.getter||(this.getter=F)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;Cn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;hr(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Qr(n),_n(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var r=this.depIds;this.depIds=this.newDepIds,this.newDepIds=r,this.newDepIds.clear(),r=this.deps,this.deps=this.newDeps,this.newDeps=r,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():bt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||u(n)||this.deep){var e=this.value;if(this.value=n,this.user){var r='callback for watcher "'.concat(this.expression,'"');fr(this.cb,this.vm,[n,e],this.vm,r)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Zr(n,e){Kr.$on(n,e)}function Xr(n,e){Kr.$off(n,e)}function nt(n,e){var r=Kr;return function t(){var a=e.apply(null,arguments);null!==a&&r.$off(n,t)}}function et(n,e,r){Kr=n,Ae(e,r||{},Zr,Xr,nt,n),Kr=void 0}var rt=null;function tt(n){var e=rt;return rt=n,function(){rt=e}}function at(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function ot(n,e){if(e){if(n._directInactive=!1,at(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var r=0;r<n.$children.length;r++)ot(n.$children[r]);it(n,"activated")}}function it(n,e,r,t){void 0===t&&(t=!0),Cn();var a=pn,o=we();t&&hn(n);var i=n.$options[e],l="".concat(e," hook");if(i)for(var s=0,c=i.length;s<c;s++)fr(i[s],n,r||null,n,l);n._hasHookEvent&&n.$emit("hook:"+e),t&&(hn(a),o&&o.on()),_n()}var lt=[],st=[],ct={},ut=!1,dt=!1,pt=0;var mt=0,ht=Date.now;if(K&&!J){var ft=window.performance;ft&&"function"==typeof ft.now&&ht()>document.createEvent("Event").timeStamp&&(ht=function(){return ft.now()})}var gt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function vt(){var n,e;for(mt=ht(),dt=!0,lt.sort(gt),pt=0;pt<lt.length;pt++)(n=lt[pt]).before&&n.before(),e=n.id,ct[e]=null,n.run();var r=st.slice(),t=lt.slice();pt=lt.length=st.length=0,ct={},ut=dt=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,ot(n[e],!0)}(r),function(n){var e=n.length;for(;e--;){var r=n[e],t=r.vm;t&&t._watcher===r&&t._isMounted&&!t._isDestroyed&&it(t,"updated")}}(t),function(){for(var n=0;n<xn.length;n++){var e=xn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}xn.length=0}(),sn&&q.devtools&&sn.emit("flush")}function bt(n){var e=n.id;if(null==ct[e]&&(n!==wn.target||!n.noRecurse)){if(ct[e]=!0,dt){for(var r=lt.length-1;r>pt&&lt[r].id>n.id;)r--;lt.splice(r+1,0,n)}else lt.push(n);ut||(ut=!0,$r(vt))}}function yt(n,e){if(n){for(var r=Object.create(null),t=dn?Reflect.ownKeys(n):Object.keys(n),a=0;a<t.length;a++){var o=t[a];if("__ob__"!==o){var i=n[o].from;if(i in e._provided)r[o]=e._provided[i];else if("default"in n[o]){var l=n[o].default;r[o]=c(l)?l.call(e):l}else 0}}return r}}function xt(n,e,r,o,i){var s,c=this,u=i.options;C(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var d=l(u._compiled),p=!d;this.data=n,this.props=e,this.children=r,this.parent=o,this.listeners=n.on||t,this.injections=yt(u.inject,o),this.slots=function(){return c.$slots||Je(o,n.scopedSlots,c.$slots=Qe(r,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return Je(o,n.scopedSlots,this.slots())}}),d&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=Je(o,n.scopedSlots,this.$slots)),u._scopeId?this._c=function(n,e,r,t){var i=pr(s,n,e,r,t,p);return i&&!a(i)&&(i.fnScopeId=u._scopeId,i.fnContext=o),i}:this._c=function(n,e,r,t){return pr(s,n,e,r,t,p)}}function wt(n,e,r,t,a){var o=bn(n);return o.fnContext=r,o.fnOptions=t,e.slot&&((o.data||(o.data={})).slot=e.slot),o}function kt(n,e){for(var r in e)n[S(r)]=e[r]}function Ct(n){return n.name||n.__name||n._componentTag}Ge(xt.prototype);var _t={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var r=n;_t.prepatch(r,r)}else{(n.componentInstance=function(n,e){var r={_isComponent:!0,_parentVnode:n,parent:e},t=n.data.inlineTemplate;i(t)&&(r.render=t.render,r.staticRenderFns=t.staticRenderFns);return new n.componentOptions.Ctor(r)}(n,rt)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var r=e.componentOptions;!function(n,e,r,a,o){var i=a.data.scopedSlots,l=n.$scopedSlots,s=!!(i&&!i.$stable||l!==t&&!l.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(o||n.$options._renderChildren||s),u=n.$vnode;n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a),n.$options._renderChildren=o;var d=a.data.attrs||t;n._attrsProxy&&er(n._attrsProxy,d,u.data&&u.data.attrs||t,n,"$attrs")&&(c=!0),n.$attrs=d,r=r||t;var p=n.$options._parentListeners;if(n._listenersProxy&&er(n._listenersProxy,r,p||t,n,"$listeners"),n.$listeners=n.$options._parentListeners=r,et(n,r,p),e&&n.$options.props){jn(!1);for(var m=n._props,h=n.$options._propKeys||[],f=0;f<h.length;f++){var g=h[f],v=n.$options.props;m[g]=Mt(g,v,e,n)}jn(!0),n.$options.propsData=e}c&&(n.$slots=Qe(o,a.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,r.propsData,r.listeners,e,r.children)},insert:function(n){var e,r=n.context,t=n.componentInstance;t._isMounted||(t._isMounted=!0,it(t,"mounted")),n.data.keepAlive&&(r._isMounted?((e=t)._inactive=!1,st.push(e)):ot(t,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,r){if(!(r&&(e._directInactive=!0,at(e))||e._inactive)){e._inactive=!0;for(var t=0;t<e.$children.length;t++)n(e.$children[t]);it(e,"deactivated")}}(e,!0):e.$destroy())}},Dt=Object.keys(_t);function St(n,e,r,s,c){if(!o(n)){var d=r.$options._base;if(u(n)&&(n=d.extend(n)),"function"==typeof n){var p;if(o(n.cid)&&void 0===(n=function(n,e){if(l(n.error)&&i(n.errorComp))return n.errorComp;if(i(n.resolved))return n.resolved;var r=cr;if(r&&i(n.owners)&&-1===n.owners.indexOf(r)&&n.owners.push(r),l(n.loading)&&i(n.loadingComp))return n.loadingComp;if(r&&!i(n.owners)){var t=n.owners=[r],a=!0,s=null,c=null;r.$on("hook:destroyed",(function(){return w(t,r)}));var d=function(n){for(var e=0,r=t.length;e<r;e++)t[e].$forceUpdate();n&&(t.length=0,null!==s&&(clearTimeout(s),s=null),null!==c&&(clearTimeout(c),c=null))},p=R((function(r){n.resolved=ur(r,e),a?t.length=0:d(!0)})),m=R((function(e){i(n.errorComp)&&(n.error=!0,d(!0))})),h=n(p,m);return u(h)&&(f(h)?o(n.resolved)&&h.then(p,m):f(h.component)&&(h.component.then(p,m),i(h.error)&&(n.errorComp=ur(h.error,e)),i(h.loading)&&(n.loadingComp=ur(h.loading,e),0===h.delay?n.loading=!0:s=setTimeout((function(){s=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,d(!1))}),h.delay||200)),i(h.timeout)&&(c=setTimeout((function(){c=null,o(n.resolved)&&m(null)}),h.timeout)))),a=!1,n.loading?n.loadingComp:n.resolved}}(p=n,d)))return function(n,e,r,t,a){var o=gn();return o.asyncFactory=n,o.asyncMeta={data:e,context:r,children:t,tag:a},o}(p,e,r,s,c);e=e||{},Jt(n),i(e.model)&&function(n,e){var r=n.model&&n.model.prop||"value",t=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[r]=e.model.value;var o=e.on||(e.on={}),l=o[t],s=e.model.callback;i(l)?(a(l)?-1===l.indexOf(s):l!==s)&&(o[t]=[s].concat(l)):o[t]=s}(n.options,e);var m=function(n,e,r){var t=e.options.props;if(!o(t)){var a={},l=n.attrs,s=n.props;if(i(l)||i(s))for(var c in t){var u=T(c);je(a,s,c,u,!0)||je(a,l,c,u,!1)}return a}}(e,n);if(l(n.options.functional))return function(n,e,r,o,l){var s=n.options,c={},u=s.props;if(i(u))for(var d in u)c[d]=Mt(d,u,e||t);else i(r.attrs)&&kt(c,r.attrs),i(r.props)&&kt(c,r.props);var p=new xt(r,c,l,o,n),m=s.render.call(null,p._c,p);if(m instanceof fn)return wt(m,r,p.parent,s,p);if(a(m)){for(var h=Ee(m)||[],f=new Array(h.length),g=0;g<h.length;g++)f[g]=wt(h[g],r,p.parent,s,p);return f}}(n,m,e,r,s);var h=e.on;if(e.on=e.nativeOn,l(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),r=0;r<Dt.length;r++){var t=Dt[r],a=e[t],o=_t[t];a===o||a&&a._merged||(e[t]=a?$t(o,a):o)}}(e);var v=Ct(n.options)||c;return new fn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,r,{Ctor:n,propsData:m,listeners:h,tag:c,children:s},p)}}}function $t(n,e){var r=function(r,t){n(r,t),e(r,t)};return r._merged=!0,r}var At=F,Tt=q.optionMergeStrategies;function jt(n,e,r){if(void 0===r&&(r=!0),!e)return n;for(var t,a,o,i=dn?Reflect.ownKeys(e):Object.keys(e),l=0;l<i.length;l++)"__ob__"!==(t=i[l])&&(a=n[t],o=e[t],r&&C(n,t)?a!==o&&p(a)&&p(o)&&jt(a,o):On(n,t,o));return n}function Et(n,e,r){return r?function(){var t=c(e)?e.call(r,r):e,a=c(n)?n.call(r,r):n;return t?jt(t,a):a}:e?n?function(){return jt(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function zt(n,e){var r=e?n?n.concat(e):a(e)?e:[e]:n;return r?function(n){for(var e=[],r=0;r<n.length;r++)-1===e.indexOf(n[r])&&e.push(n[r]);return e}(r):r}function It(n,e,r,t){var a=Object.create(n||null);return e?z(a,e):a}Tt.data=function(n,e,r){return r?Et(n,e,r):e&&"function"!=typeof e?n:Et(n,e)},U.forEach((function(n){Tt[n]=zt})),N.forEach((function(n){Tt[n+"s"]=It})),Tt.watch=function(n,e,r,t){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var i in z(o,n),e){var l=o[i],s=e[i];l&&!a(l)&&(l=[l]),o[i]=l?l.concat(s):a(s)?s:[s]}return o},Tt.props=Tt.methods=Tt.inject=Tt.computed=function(n,e,r,t){if(!n)return e;var a=Object.create(null);return z(a,n),e&&z(a,e),a},Tt.provide=function(n,e){return n?function(){var r=Object.create(null);return jt(r,c(n)?n.call(this):n),e&&jt(r,c(e)?e.call(this):e,!1),r}:e};var Ft=function(n,e){return void 0===e?n:e};function Ot(n,e,r){if(c(e)&&(e=e.options),function(n,e){var r=n.props;if(r){var t,o,i={};if(a(r))for(t=r.length;t--;)"string"==typeof(o=r[t])&&(i[S(o)]={type:null});else if(p(r))for(var l in r)o=r[l],i[S(l)]=p(o)?o:{type:o};else 0;n.props=i}}(e),function(n,e){var r=n.inject;if(r){var t=n.inject={};if(a(r))for(var o=0;o<r.length;o++)t[r[o]]={from:r[o]};else if(p(r))for(var i in r){var l=r[i];t[i]=p(l)?z({from:i},l):{from:l}}else 0}}(e),function(n){var e=n.directives;if(e)for(var r in e){var t=e[r];c(t)&&(e[r]={bind:t,update:t})}}(e),!e._base&&(e.extends&&(n=Ot(n,e.extends,r)),e.mixins))for(var t=0,o=e.mixins.length;t<o;t++)n=Ot(n,e.mixins[t],r);var i,l={};for(i in n)s(i);for(i in e)C(n,i)||s(i);function s(t){var a=Tt[t]||Ft;l[t]=a(n[t],e[t],r,t)}return l}function Pt(n,e,r,t){if("string"==typeof r){var a=n[e];if(C(a,r))return a[r];var o=S(r);if(C(a,o))return a[o];var i=$(o);return C(a,i)?a[i]:a[r]||a[o]||a[i]}}function Mt(n,e,r,t){var a=e[n],o=!C(r,n),i=r[n],l=Nt(Boolean,a.type);if(l>-1)if(o&&!C(a,"default"))i=!1;else if(""===i||i===T(n)){var s=Nt(String,a.type);(s<0||l<s)&&(i=!0)}if(void 0===i){i=function(n,e,r){if(!C(e,"default"))return;var t=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[r]&&void 0!==n._props[r])return n._props[r];return c(t)&&"Function"!==Rt(e.type)?t.call(n):t}(t,a,n);var u=Tn;jn(!0),In(i),jn(u)}return i}var Lt=/^\s*function (\w+)/;function Rt(n){var e=n&&n.toString().match(Lt);return e?e[1]:""}function Bt(n,e){return Rt(n)===Rt(e)}function Nt(n,e){if(!a(e))return Bt(e,n)?0:-1;for(var r=0,t=e.length;r<t;r++)if(Bt(e[r],n))return r;return-1}var Ut={enumerable:!0,configurable:!0,get:F,set:F};function qt(n,e,r){Ut.get=function(){return this[e][r]},Ut.set=function(n){this[e][r]=n},Object.defineProperty(n,r,Ut)}function Vt(n){var e=n.$options;if(e.props&&function(n,e){var r=n.$options.propsData||{},t=n._props=Rn({}),a=n.$options._propKeys=[];n.$parent&&jn(!1);var o=function(o){a.push(o);var i=Mt(o,e,r,n);Fn(t,o,i,void 0,!0),o in n||qt(n,"_props",o)};for(var i in e)o(i);jn(!0)}(n,e.props),function(n){var e=n.$options,r=e.setup;if(r){var t=n._setupContext=nr(n);hn(n),Cn();var a=fr(r,null,[n._props||Rn({}),t],n,"setup");if(_n(),hn(),c(a))e.render=a;else if(u(a))if(n._setupState=a,a.__sfc){var o=n._setupProxy={};for(var i in a)"__sfc"!==i&&ne(o,a,i)}else for(var i in a)H(i)||ne(n,a,i);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var r in e)n[r]="function"!=typeof e[r]?F:j(e[r],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;p(e=n._data=c(e)?function(n,e){Cn();try{return n.call(e,e)}catch(n){return hr(n,e,"data()"),{}}finally{_n()}}(e,n):e||{})||(e={});var r=Object.keys(e),t=n.$options.props,a=(n.$options.methods,r.length);for(;a--;){var o=r[a];0,t&&C(t,o)||H(o)||qt(n,"_data",o)}var i=In(e);i&&i.vmCount++}(n);else{var r=In(n._data={});r&&r.vmCount++}e.computed&&function(n,e){var r=n._computedWatchers=Object.create(null),t=ln();for(var a in e){var o=e[a],i=c(o)?o:o.get;0,t||(r[a]=new Jr(n,i||F,F,Ht)),a in n||Wt(n,a,o)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var r in e){var t=e[r];if(a(t))for(var o=0;o<t.length;o++)Kt(n,r,t[o]);else Kt(n,r,t)}}(n,e.watch)}var Ht={lazy:!0};function Wt(n,e,r){var t=!ln();c(r)?(Ut.get=t?Gt(e):Qt(r),Ut.set=F):(Ut.get=r.get?t&&!1!==r.cache?Gt(e):Qt(r.get):F,Ut.set=r.set||F),Object.defineProperty(n,e,Ut)}function Gt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),wn.target&&e.depend(),e.value}}function Qt(n){return function(){return n.call(this,this)}}function Kt(n,e,r,t){return p(r)&&(t=r,r=r.handler),"string"==typeof r&&(r=n[r]),n.$watch(e,r,t)}var Yt=0;function Jt(n){var e=n.options;if(n.super){var r=Jt(n.super);if(r!==n.superOptions){n.superOptions=r;var t=function(n){var e,r=n.options,t=n.sealedOptions;for(var a in r)r[a]!==t[a]&&(e||(e={}),e[a]=r[a]);return e}(n);t&&z(n.extendOptions,t),(e=n.options=Ot(r,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Zt(n){this._init(n)}function Xt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var r=this,t=r.cid,a=n._Ctor||(n._Ctor={});if(a[t])return a[t];var o=Ct(n)||Ct(r.options);var i=function(n){this._init(n)};return(i.prototype=Object.create(r.prototype)).constructor=i,i.cid=e++,i.options=Ot(r.options,n),i.super=r,i.options.props&&function(n){var e=n.options.props;for(var r in e)qt(n.prototype,"_props",r)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var r in e)Wt(n.prototype,r,e[r])}(i),i.extend=r.extend,i.mixin=r.mixin,i.use=r.use,N.forEach((function(n){i[n]=r[n]})),o&&(i.options.components[o]=i),i.superOptions=r.options,i.extendOptions=n,i.sealedOptions=z({},i.options),a[t]=i,i}}function na(n){return n&&(Ct(n.Ctor.options)||n.tag)}function ea(n,e){return a(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function ra(n,e){var r=n.cache,t=n.keys,a=n._vnode,o=n.$vnode;for(var i in r){var l=r[i];if(l){var s=l.name;s&&!e(s)&&ta(r,i,t,a)}}o.componentOptions.children=void 0}function ta(n,e,r,t){var a=n[e];!a||t&&a.tag===t.tag||a.componentInstance.$destroy(),n[e]=null,w(r,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Yt++,e._isVue=!0,e.__v_skip=!0,e._scope=new ye(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var r=n.$options=Object.create(n.constructor.options),t=e._parentVnode;r.parent=e.parent,r._parentVnode=t;var a=t.componentOptions;r.propsData=a.propsData,r._parentListeners=a.listeners,r._renderChildren=a.children,r._componentTag=a.tag,e.render&&(r.render=e.render,r.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Ot(Jt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,r=e.parent;if(r&&!e.abstract){for(;r.$options.abstract&&r.$parent;)r=r.$parent;r.$children.push(n)}n.$parent=r,n.$root=r?r.$root:n,n.$children=[],n.$refs={},n._provided=r?r._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&et(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,r=n.$vnode=e._parentVnode,a=r&&r.context;n.$slots=Qe(e._renderChildren,a),n.$scopedSlots=r?Je(n.$parent,r.data.scopedSlots,n.$slots):t,n._c=function(e,r,t,a){return pr(n,e,r,t,a,!1)},n.$createElement=function(e,r,t,a){return pr(n,e,r,t,a,!0)};var o=r&&r.data;Fn(n,"$attrs",o&&o.attrs||t,null,!0),Fn(n,"$listeners",e._parentListeners||t,null,!0)}(e),it(e,"beforeCreate",void 0,!1),function(n){var e=yt(n.$options.inject,n);e&&(jn(!1),Object.keys(e).forEach((function(r){Fn(n,r,e[r])})),jn(!0))}(e),Vt(e),function(n){var e=n.$options.provide;if(e){var r=c(e)?e.call(n):e;if(!u(r))return;for(var t=_e(n),a=dn?Reflect.ownKeys(r):Object.keys(r),o=0;o<a.length;o++){var i=a[o];Object.defineProperty(t,i,Object.getOwnPropertyDescriptor(r,i))}}}(e),it(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Zt),function(n){var e={get:function(){return this._data}},r={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",r),n.prototype.$set=On,n.prototype.$delete=Pn,n.prototype.$watch=function(n,e,r){if(p(e))return Kt(this,n,e,r);(r=r||{}).user=!0;var t=new Jr(this,n,e,r);if(r.immediate){var a='callback for immediate watcher "'.concat(t.expression,'"');Cn(),fr(e,this,[t.value],this,a),_n()}return function(){t.teardown()}}}(Zt),function(n){var e=/^hook:/;n.prototype.$on=function(n,r){var t=this;if(a(n))for(var o=0,i=n.length;o<i;o++)t.$on(n[o],r);else(t._events[n]||(t._events[n]=[])).push(r),e.test(n)&&(t._hasHookEvent=!0);return t},n.prototype.$once=function(n,e){var r=this;function t(){r.$off(n,t),e.apply(r,arguments)}return t.fn=e,r.$on(n,t),r},n.prototype.$off=function(n,e){var r=this;if(!arguments.length)return r._events=Object.create(null),r;if(a(n)){for(var t=0,o=n.length;t<o;t++)r.$off(n[t],e);return r}var i,l=r._events[n];if(!l)return r;if(!e)return r._events[n]=null,r;for(var s=l.length;s--;)if((i=l[s])===e||i.fn===e){l.splice(s,1);break}return r},n.prototype.$emit=function(n){var e=this,r=e._events[n];if(r){r=r.length>1?E(r):r;for(var t=E(arguments,1),a='event handler for "'.concat(n,'"'),o=0,i=r.length;o<i;o++)fr(r[o],e,t,e,a)}return e}}(Zt),function(n){n.prototype._update=function(n,e){var r=this,t=r.$el,a=r._vnode,o=tt(r);r._vnode=n,r.$el=a?r.__patch__(a,n):r.__patch__(r.$el,n,e,!1),o(),t&&(t.__vue__=null),r.$el&&(r.$el.__vue__=r);for(var i=r;i&&i.$vnode&&i.$parent&&i.$vnode===i.$parent._vnode;)i.$parent.$el=i.$el,i=i.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){it(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||w(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),it(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Zt),function(n){Ge(n.prototype),n.prototype.$nextTick=function(n){return $r(n,this)},n.prototype._render=function(){var n=this,e=n.$options,r=e.render,t=e._parentVnode;t&&n._isMounted&&(n.$scopedSlots=Je(n.$parent,t.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&tr(n._slotsProxy,n.$scopedSlots)),n.$vnode=t;var o,i=pn,l=cr;try{hn(n),cr=n,o=r.call(n._renderProxy,n.$createElement)}catch(e){hr(e,n,"render"),o=n._vnode}finally{cr=l,hn(i)}return a(o)&&1===o.length&&(o=o[0]),o instanceof fn||(o=gn()),o.parent=t,o}}(Zt);var aa=[String,RegExp,Array],oa={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:aa,exclude:aa,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,r=this.vnodeToCache,t=this.keyToCache;if(r){var a=r.tag,o=r.componentInstance,i=r.componentOptions;n[t]={name:na(i),tag:a,componentInstance:o},e.push(t),this.max&&e.length>parseInt(this.max)&&ta(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)ta(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){ra(n,(function(n){return ea(e,n)}))})),this.$watch("exclude",(function(e){ra(n,(function(n){return!ea(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=dr(n),r=e&&e.componentOptions;if(r){var t=na(r),a=this.include,o=this.exclude;if(a&&(!t||!ea(a,t))||o&&t&&ea(o,t))return e;var i=this.cache,l=this.keys,s=null==e.key?r.Ctor.cid+(r.tag?"::".concat(r.tag):""):e.key;i[s]?(e.componentInstance=i[s].componentInstance,w(l,s),l.push(s)):(this.vnodeToCache=e,this.keyToCache=s),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return q}};Object.defineProperty(n,"config",e),n.util={warn:At,extend:z,mergeOptions:Ot,defineReactive:Fn},n.set=On,n.delete=Pn,n.nextTick=$r,n.observable=function(n){return In(n),n},n.options=Object.create(null),N.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,z(n.options.components,oa),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var r=E(arguments,1);return r.unshift(this),c(n.install)?n.install.apply(n,r):c(n)&&n.apply(null,r),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Ot(this.options,n),this}}(n),Xt(n),function(n){N.forEach((function(e){n[e]=function(n,r){return r?("component"===e&&p(r)&&(r.name=r.name||n,r=this.options._base.extend(r)),"directive"===e&&c(r)&&(r={bind:r,update:r}),this.options[e+"s"][n]=r,r):this.options[e+"s"][n]}}))}(n)}(Zt),Object.defineProperty(Zt.prototype,"$isServer",{get:ln}),Object.defineProperty(Zt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Zt,"FunctionalRenderContext",{value:xt}),Zt.version=Hr;var ia=y("style,class"),la=y("input,textarea,option,select,progress"),sa=y("contenteditable,draggable,spellcheck"),ca=y("events,caret,typing,plaintext-only"),ua=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),da="http://www.w3.org/1999/xlink",pa=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},ma=function(n){return pa(n)?n.slice(6,n.length):""},ha=function(n){return null==n||!1===n};function fa(n){for(var e=n.data,r=n,t=n;i(t.componentInstance);)(t=t.componentInstance._vnode)&&t.data&&(e=ga(t.data,e));for(;i(r=r.parent);)r&&r.data&&(e=ga(e,r.data));return function(n,e){if(i(n)||i(e))return va(n,ba(e));return""}(e.staticClass,e.class)}function ga(n,e){return{staticClass:va(n.staticClass,e.staticClass),class:i(n.class)?[n.class,e.class]:e.class}}function va(n,e){return n?e?n+" "+e:n:e||""}function ba(n){return Array.isArray(n)?function(n){for(var e,r="",t=0,a=n.length;t<a;t++)i(e=ba(n[t]))&&""!==e&&(r&&(r+=" "),r+=e);return r}(n):u(n)?function(n){var e="";for(var r in n)n[r]&&(e&&(e+=" "),e+=r);return e}(n):"string"==typeof n?n:""}var ya={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},xa=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),wa=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ka=function(n){return xa(n)||wa(n)};var Ca=Object.create(null);var _a=y("text,number,password,search,email,tel,url");var Da=Object.freeze({__proto__:null,createElement:function(n,e){var r=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&r.setAttribute("multiple","multiple"),r},createElementNS:function(n,e){return document.createElementNS(ya[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,r){n.insertBefore(e,r)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Sa={create:function(n,e){$a(e)},update:function(n,e){n.data.ref!==e.data.ref&&($a(n,!0),$a(e))},destroy:function(n){$a(n,!0)}};function $a(n,e){var r=n.data.ref;if(i(r)){var t=n.context,o=n.componentInstance||n.elm,l=e?null:o,s=e?void 0:o;if(c(r))fr(r,t,[l],t,"template ref function");else{var u=n.data.refInFor,d="string"==typeof r||"number"==typeof r,p=Gn(r),m=t.$refs;if(d||p)if(u){var h=d?m[r]:r.value;e?a(h)&&w(h,o):a(h)?h.includes(o)||h.push(o):d?(m[r]=[o],Aa(t,r,m[r])):r.value=[o]}else if(d){if(e&&m[r]!==o)return;m[r]=s,Aa(t,r,l)}else if(p){if(e&&r.value!==o)return;r.value=l}else 0}}}function Aa(n,e,r){var t=n._setupState;t&&C(t,e)&&(Gn(t[e])?t[e].value=r:t[e]=r)}var Ta=new fn("",{},[]),ja=["create","activate","update","remove","destroy"];function Ea(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&i(n.data)===i(e.data)&&function(n,e){if("input"!==n.tag)return!0;var r,t=i(r=n.data)&&i(r=r.attrs)&&r.type,a=i(r=e.data)&&i(r=r.attrs)&&r.type;return t===a||_a(t)&&_a(a)}(n,e)||l(n.isAsyncPlaceholder)&&o(e.asyncFactory.error))}function za(n,e,r){var t,a,o={};for(t=e;t<=r;++t)i(a=n[t].key)&&(o[a]=t);return o}var Ia={create:Fa,update:Fa,destroy:function(n){Fa(n,Ta)}};function Fa(n,e){(n.data.directives||e.data.directives)&&function(n,e){var r,t,a,o=n===Ta,i=e===Ta,l=Pa(n.data.directives,n.context),s=Pa(e.data.directives,e.context),c=[],u=[];for(r in s)t=l[r],a=s[r],t?(a.oldValue=t.value,a.oldArg=t.arg,La(a,"update",e,n),a.def&&a.def.componentUpdated&&u.push(a)):(La(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var d=function(){for(var r=0;r<c.length;r++)La(c[r],"inserted",e,n)};o?Te(e,"insert",d):d()}u.length&&Te(e,"postpatch",(function(){for(var r=0;r<u.length;r++)La(u[r],"componentUpdated",e,n)}));if(!o)for(r in l)s[r]||La(l[r],"unbind",n,n,i)}(n,e)}var Oa=Object.create(null);function Pa(n,e){var r,t,a=Object.create(null);if(!n)return a;for(r=0;r<n.length;r++){if((t=n[r]).modifiers||(t.modifiers=Oa),a[Ma(t)]=t,e._setupState&&e._setupState.__sfc){var o=t.def||Pt(e,"_setupState","v-"+t.name);t.def="function"==typeof o?{bind:o,update:o}:o}t.def=t.def||Pt(e.$options,"directives",t.name)}return a}function Ma(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function La(n,e,r,t,a){var o=n.def&&n.def[e];if(o)try{o(r.elm,n,r,t,a)}catch(t){hr(t,r.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Ra=[Sa,Ia];function Ba(n,e){var r=e.componentOptions;if(!(i(r)&&!1===r.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var t,a,s=e.elm,c=n.data.attrs||{},u=e.data.attrs||{};for(t in(i(u.__ob__)||l(u._v_attr_proxy))&&(u=e.data.attrs=z({},u)),u)a=u[t],c[t]!==a&&Na(s,t,a,e.data.pre);for(t in(J||X)&&u.value!==c.value&&Na(s,"value",u.value),c)o(u[t])&&(pa(t)?s.removeAttributeNS(da,ma(t)):sa(t)||s.removeAttribute(t))}}function Na(n,e,r,t){t||n.tagName.indexOf("-")>-1?Ua(n,e,r):ua(e)?ha(r)?n.removeAttribute(e):(r="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,r)):sa(e)?n.setAttribute(e,function(n,e){return ha(e)||"false"===e?"false":"contenteditable"===n&&ca(e)?e:"true"}(e,r)):pa(e)?ha(r)?n.removeAttributeNS(da,ma(e)):n.setAttributeNS(da,e,r):Ua(n,e,r)}function Ua(n,e,r){if(ha(r))n.removeAttribute(e);else{if(J&&!Z&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==r&&!n.__ieph){var t=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",t)};n.addEventListener("input",t),n.__ieph=!0}n.setAttribute(e,r)}}var qa={create:Ba,update:Ba};function Va(n,e){var r=e.elm,t=e.data,a=n.data;if(!(o(t.staticClass)&&o(t.class)&&(o(a)||o(a.staticClass)&&o(a.class)))){var l=fa(e),s=r._transitionClasses;i(s)&&(l=va(l,ba(s))),l!==r._prevClass&&(r.setAttribute("class",l),r._prevClass=l)}}var Ha,Wa={create:Va,update:Va};function Ga(n,e,r){var t=Ha;return function a(){var o=e.apply(null,arguments);null!==o&&Ya(n,a,r,t)}}var Qa=yr&&!(rn&&Number(rn[1])<=53);function Ka(n,e,r,t){if(Qa){var a=mt,o=e;e=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}Ha.addEventListener(n,e,an?{capture:r,passive:t}:r)}function Ya(n,e,r,t){(t||Ha).removeEventListener(n,e._wrapper||e,r)}function Ja(n,e){if(!o(n.data.on)||!o(e.data.on)){var r=e.data.on||{},t=n.data.on||{};Ha=e.elm||n.elm,function(n){if(i(n.__r)){var e=J?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}i(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(r),Ae(r,t,Ka,Ya,Ga,e.context),Ha=void 0}}var Za,Xa={create:Ja,update:Ja,destroy:function(n){return Ja(n,Ta)}};function no(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var r,t,a=e.elm,s=n.data.domProps||{},c=e.data.domProps||{};for(r in(i(c.__ob__)||l(c._v_attr_proxy))&&(c=e.data.domProps=z({},c)),s)r in c||(a[r]="");for(r in c){if(t=c[r],"textContent"===r||"innerHTML"===r){if(e.children&&(e.children.length=0),t===s[r])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===r&&"PROGRESS"!==a.tagName){a._value=t;var u=o(t)?"":String(t);eo(a,u)&&(a.value=u)}else if("innerHTML"===r&&wa(a.tagName)&&o(a.innerHTML)){(Za=Za||document.createElement("div")).innerHTML="<svg>".concat(t,"</svg>");for(var d=Za.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;d.firstChild;)a.appendChild(d.firstChild)}else if(t!==s[r])try{a[r]=t}catch(n){}}}}function eo(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var r=!0;try{r=document.activeElement!==n}catch(n){}return r&&n.value!==e}(n,e)||function(n,e){var r=n.value,t=n._vModifiers;if(i(t)){if(t.number)return b(r)!==b(e);if(t.trim)return r.trim()!==e.trim()}return r!==e}(n,e))}var ro={create:no,update:no},to=_((function(n){var e={},r=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var t=n.split(r);t.length>1&&(e[t[0].trim()]=t[1].trim())}})),e}));function ao(n){var e=oo(n.style);return n.staticStyle?z(n.staticStyle,e):e}function oo(n){return Array.isArray(n)?I(n):"string"==typeof n?to(n):n}var io,lo=/^--/,so=/\s*!important$/,co=function(n,e,r){if(lo.test(e))n.style.setProperty(e,r);else if(so.test(r))n.style.setProperty(T(e),r.replace(so,""),"important");else{var t=po(e);if(Array.isArray(r))for(var a=0,o=r.length;a<o;a++)n.style[t]=r[a];else n.style[t]=r}},uo=["Webkit","Moz","ms"],po=_((function(n){if(io=io||document.createElement("div").style,"filter"!==(n=S(n))&&n in io)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),r=0;r<uo.length;r++){var t=uo[r]+e;if(t in io)return t}}));function mo(n,e){var r=e.data,t=n.data;if(!(o(r.staticStyle)&&o(r.style)&&o(t.staticStyle)&&o(t.style))){var a,l,s=e.elm,c=t.staticStyle,u=t.normalizedStyle||t.style||{},d=c||u,p=oo(e.data.style)||{};e.data.normalizedStyle=i(p.__ob__)?z({},p):p;var m=function(n,e){var r,t={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(r=ao(a.data))&&z(t,r);(r=ao(n.data))&&z(t,r);for(var o=n;o=o.parent;)o.data&&(r=ao(o.data))&&z(t,r);return t}(e,!0);for(l in d)o(m[l])&&co(s,l,"");for(l in m)a=m[l],co(s,l,null==a?"":a)}}var ho={create:mo,update:mo},fo=/\s+/;function go(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(fo).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var r=" ".concat(n.getAttribute("class")||""," ");r.indexOf(" "+e+" ")<0&&n.setAttribute("class",(r+e).trim())}}function vo(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(fo).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var r=" ".concat(n.getAttribute("class")||""," "),t=" "+e+" ";r.indexOf(t)>=0;)r=r.replace(t," ");(r=r.trim())?n.setAttribute("class",r):n.removeAttribute("class")}}function bo(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&z(e,yo(n.name||"v")),z(e,n),e}return"string"==typeof n?yo(n):void 0}}var yo=_((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),xo=K&&!Z,wo="transition",ko="transitionend",Co="animation",_o="animationend";xo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(wo="WebkitTransition",ko="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Co="WebkitAnimation",_o="webkitAnimationEnd"));var Do=K?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function So(n){Do((function(){Do(n)}))}function $o(n,e){var r=n._transitionClasses||(n._transitionClasses=[]);r.indexOf(e)<0&&(r.push(e),go(n,e))}function Ao(n,e){n._transitionClasses&&w(n._transitionClasses,e),vo(n,e)}function To(n,e,r){var t=Eo(n,e),a=t.type,o=t.timeout,i=t.propCount;if(!a)return r();var l="transition"===a?ko:_o,s=0,c=function(){n.removeEventListener(l,u),r()},u=function(e){e.target===n&&++s>=i&&c()};setTimeout((function(){s<i&&c()}),o+1),n.addEventListener(l,u)}var jo=/\b(transform|all)(,|$)/;function Eo(n,e){var r,t=window.getComputedStyle(n),a=(t[wo+"Delay"]||"").split(", "),o=(t[wo+"Duration"]||"").split(", "),i=zo(a,o),l=(t[Co+"Delay"]||"").split(", "),s=(t[Co+"Duration"]||"").split(", "),c=zo(l,s),u=0,d=0;return"transition"===e?i>0&&(r="transition",u=i,d=o.length):"animation"===e?c>0&&(r="animation",u=c,d=s.length):d=(r=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===r?o.length:s.length:0,{type:r,timeout:u,propCount:d,hasTransform:"transition"===r&&jo.test(t[wo+"Property"])}}function zo(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,r){return Io(e)+Io(n[r])})))}function Io(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Fo(n,e){var r=n.elm;i(r._leaveCb)&&(r._leaveCb.cancelled=!0,r._leaveCb());var t=bo(n.data.transition);if(!o(t)&&!i(r._enterCb)&&1===r.nodeType){for(var a=t.css,l=t.type,s=t.enterClass,d=t.enterToClass,p=t.enterActiveClass,m=t.appearClass,h=t.appearToClass,f=t.appearActiveClass,g=t.beforeEnter,v=t.enter,y=t.afterEnter,x=t.enterCancelled,w=t.beforeAppear,k=t.appear,C=t.afterAppear,_=t.appearCancelled,D=t.duration,S=rt,$=rt.$vnode;$&&$.parent;)S=$.context,$=$.parent;var A=!S._isMounted||!n.isRootInsert;if(!A||k||""===k){var T=A&&m?m:s,j=A&&f?f:p,E=A&&h?h:d,z=A&&w||g,I=A&&c(k)?k:v,F=A&&C||y,O=A&&_||x,P=b(u(D)?D.enter:D);0;var M=!1!==a&&!Z,L=Mo(I),B=r._enterCb=R((function(){M&&(Ao(r,E),Ao(r,j)),B.cancelled?(M&&Ao(r,T),O&&O(r)):F&&F(r),r._enterCb=null}));n.data.show||Te(n,"insert",(function(){var e=r.parentNode,t=e&&e._pending&&e._pending[n.key];t&&t.tag===n.tag&&t.elm._leaveCb&&t.elm._leaveCb(),I&&I(r,B)})),z&&z(r),M&&($o(r,T),$o(r,j),So((function(){Ao(r,T),B.cancelled||($o(r,E),L||(Po(P)?setTimeout(B,P):To(r,l,B)))}))),n.data.show&&(e&&e(),I&&I(r,B)),M||L||B()}}}function Oo(n,e){var r=n.elm;i(r._enterCb)&&(r._enterCb.cancelled=!0,r._enterCb());var t=bo(n.data.transition);if(o(t)||1!==r.nodeType)return e();if(!i(r._leaveCb)){var a=t.css,l=t.type,s=t.leaveClass,c=t.leaveToClass,d=t.leaveActiveClass,p=t.beforeLeave,m=t.leave,h=t.afterLeave,f=t.leaveCancelled,g=t.delayLeave,v=t.duration,y=!1!==a&&!Z,x=Mo(m),w=b(u(v)?v.leave:v);0;var k=r._leaveCb=R((function(){r.parentNode&&r.parentNode._pending&&(r.parentNode._pending[n.key]=null),y&&(Ao(r,c),Ao(r,d)),k.cancelled?(y&&Ao(r,s),f&&f(r)):(e(),h&&h(r)),r._leaveCb=null}));g?g(C):C()}function C(){k.cancelled||(!n.data.show&&r.parentNode&&((r.parentNode._pending||(r.parentNode._pending={}))[n.key]=n),p&&p(r),y&&($o(r,s),$o(r,d),So((function(){Ao(r,s),k.cancelled||($o(r,c),x||(Po(w)?setTimeout(k,w):To(r,l,k)))}))),m&&m(r,k),y||x||k())}}function Po(n){return"number"==typeof n&&!isNaN(n)}function Mo(n){if(o(n))return!1;var e=n.fns;return i(e)?Mo(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Lo(n,e){!0!==e.data.show&&Fo(e)}var Ro=function(n){var e,r,t={},c=n.modules,u=n.nodeOps;for(e=0;e<ja.length;++e)for(t[ja[e]]=[],r=0;r<c.length;++r)i(c[r][ja[e]])&&t[ja[e]].push(c[r][ja[e]]);function d(n){var e=u.parentNode(n);i(e)&&u.removeChild(e,n)}function p(n,e,r,a,o,s,c){if(i(n.elm)&&i(s)&&(n=s[c]=bn(n)),n.isRootInsert=!o,!function(n,e,r,a){var o=n.data;if(i(o)){var s=i(n.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(n,!1),i(n.componentInstance))return m(n,e),h(r,n.elm,a),l(s)&&function(n,e,r,a){var o,l=n;for(;l.componentInstance;)if(l=l.componentInstance._vnode,i(o=l.data)&&i(o=o.transition)){for(o=0;o<t.activate.length;++o)t.activate[o](Ta,l);e.push(l);break}h(r,n.elm,a)}(n,e,r,a),!0}}(n,e,r,a)){var d=n.data,p=n.children,g=n.tag;i(g)?(n.elm=n.ns?u.createElementNS(n.ns,g):u.createElement(g,n),b(n),f(n,p,e),i(d)&&v(n,e),h(r,n.elm,a)):l(n.isComment)?(n.elm=u.createComment(n.text),h(r,n.elm,a)):(n.elm=u.createTextNode(n.text),h(r,n.elm,a))}}function m(n,e){i(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(v(n,e),b(n)):($a(n),e.push(n))}function h(n,e,r){i(n)&&(i(r)?u.parentNode(r)===n&&u.insertBefore(n,e,r):u.appendChild(n,e))}function f(n,e,r){if(a(e)){0;for(var t=0;t<e.length;++t)p(e[t],r,n.elm,null,!0,e,t)}else s(n.text)&&u.appendChild(n.elm,u.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return i(n.tag)}function v(n,r){for(var a=0;a<t.create.length;++a)t.create[a](Ta,n);i(e=n.data.hook)&&(i(e.create)&&e.create(Ta,n),i(e.insert)&&r.push(n))}function b(n){var e;if(i(e=n.fnScopeId))u.setStyleScope(n.elm,e);else for(var r=n;r;)i(e=r.context)&&i(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e),r=r.parent;i(e=rt)&&e!==n.context&&e!==n.fnContext&&i(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e)}function x(n,e,r,t,a,o){for(;t<=a;++t)p(r[t],o,n,e,!1,r,t)}function w(n){var e,r,a=n.data;if(i(a))for(i(e=a.hook)&&i(e=e.destroy)&&e(n),e=0;e<t.destroy.length;++e)t.destroy[e](n);if(i(e=n.children))for(r=0;r<n.children.length;++r)w(n.children[r])}function k(n,e,r){for(;e<=r;++e){var t=n[e];i(t)&&(i(t.tag)?(C(t),w(t)):d(t.elm))}}function C(n,e){if(i(e)||i(n.data)){var r,a=t.remove.length+1;for(i(e)?e.listeners+=a:e=function(n,e){function r(){0==--r.listeners&&d(n)}return r.listeners=e,r}(n.elm,a),i(r=n.componentInstance)&&i(r=r._vnode)&&i(r.data)&&C(r,e),r=0;r<t.remove.length;++r)t.remove[r](n,e);i(r=n.data.hook)&&i(r=r.remove)?r(n,e):e()}else d(n.elm)}function _(n,e,r,t){for(var a=r;a<t;a++){var o=e[a];if(i(o)&&Ea(n,o))return a}}function D(n,e,r,a,s,c){if(n!==e){i(e.elm)&&i(a)&&(e=a[s]=bn(e));var d=e.elm=n.elm;if(l(n.isAsyncPlaceholder))i(e.asyncFactory.resolved)?A(n.elm,e,r):e.isAsyncPlaceholder=!0;else if(l(e.isStatic)&&l(n.isStatic)&&e.key===n.key&&(l(e.isCloned)||l(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;i(h)&&i(m=h.hook)&&i(m=m.prepatch)&&m(n,e);var f=n.children,v=e.children;if(i(h)&&g(e)){for(m=0;m<t.update.length;++m)t.update[m](n,e);i(m=h.hook)&&i(m=m.update)&&m(n,e)}o(e.text)?i(f)&&i(v)?f!==v&&function(n,e,r,t,a){var l,s,c,d=0,m=0,h=e.length-1,f=e[0],g=e[h],v=r.length-1,b=r[0],y=r[v],w=!a;for(0;d<=h&&m<=v;)o(f)?f=e[++d]:o(g)?g=e[--h]:Ea(f,b)?(D(f,b,t,r,m),f=e[++d],b=r[++m]):Ea(g,y)?(D(g,y,t,r,v),g=e[--h],y=r[--v]):Ea(f,y)?(D(f,y,t,r,v),w&&u.insertBefore(n,f.elm,u.nextSibling(g.elm)),f=e[++d],y=r[--v]):Ea(g,b)?(D(g,b,t,r,m),w&&u.insertBefore(n,g.elm,f.elm),g=e[--h],b=r[++m]):(o(l)&&(l=za(e,d,h)),o(s=i(b.key)?l[b.key]:_(b,e,d,h))?p(b,t,n,f.elm,!1,r,m):Ea(c=e[s],b)?(D(c,b,t,r,m),e[s]=void 0,w&&u.insertBefore(n,c.elm,f.elm)):p(b,t,n,f.elm,!1,r,m),b=r[++m]);d>h?x(n,o(r[v+1])?null:r[v+1].elm,r,m,v,t):m>v&&k(e,d,h)}(d,f,v,r,c):i(v)?(i(n.text)&&u.setTextContent(d,""),x(d,null,v,0,v.length-1,r)):i(f)?k(f,0,f.length-1):i(n.text)&&u.setTextContent(d,""):n.text!==e.text&&u.setTextContent(d,e.text),i(h)&&i(m=h.hook)&&i(m=m.postpatch)&&m(n,e)}}}function S(n,e,r){if(l(r)&&i(n.parent))n.parent.data.pendingInsert=e;else for(var t=0;t<e.length;++t)e[t].data.hook.insert(e[t])}var $=y("attrs,class,staticClass,staticStyle,key");function A(n,e,r,t){var a,o=e.tag,s=e.data,c=e.children;if(t=t||s&&s.pre,e.elm=n,l(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(s)&&(i(a=s.hook)&&i(a=a.init)&&a(e,!0),i(a=e.componentInstance)))return m(e,r),!0;if(i(o)){if(i(c))if(n.hasChildNodes())if(i(a=s)&&i(a=a.domProps)&&i(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var u=!0,d=n.firstChild,p=0;p<c.length;p++){if(!d||!A(d,c[p],r,t)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else f(e,c,r);if(i(s)){var h=!1;for(var g in s)if(!$(g)){h=!0,v(e,r);break}!h&&s.class&&Qr(s.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,r,a){if(!o(e)){var s,c=!1,d=[];if(o(n))c=!0,p(e,d);else{var m=i(n.nodeType);if(!m&&Ea(n,e))D(n,e,d,null,null,a);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),r=!0),l(r)&&A(n,e,d))return S(e,d,!0),n;s=n,n=new fn(u.tagName(s).toLowerCase(),{},[],void 0,s)}var h=n.elm,f=u.parentNode(h);if(p(e,d,h._leaveCb?null:f,u.nextSibling(h)),i(e.parent))for(var v=e.parent,b=g(e);v;){for(var y=0;y<t.destroy.length;++y)t.destroy[y](v);if(v.elm=e.elm,b){for(var x=0;x<t.create.length;++x)t.create[x](Ta,v);var C=v.data.hook.insert;if(C.merged)for(var _=C.fns.slice(1),$=0;$<_.length;$++)_[$]()}else $a(v);v=v.parent}i(f)?k([n],0,0):i(n.tag)&&w(n)}}return S(e,d,c),e.elm}i(n)&&w(n)}}({nodeOps:Da,modules:[qa,Wa,Xa,ro,ho,K?{create:Lo,activate:Lo,remove:function(n,e){!0!==n.data.show?Oo(n,e):e()}}:{}].concat(Ra)});Z&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Go(n,"input")}));var Bo={inserted:function(n,e,r,t){"select"===r.tag?(t.elm&&!t.elm._vOptions?Te(r,"postpatch",(function(){Bo.componentUpdated(n,e,r)})):No(n,e,r.context),n._vOptions=[].map.call(n.options,Vo)):("textarea"===r.tag||_a(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Ho),n.addEventListener("compositionend",Wo),n.addEventListener("change",Wo),Z&&(n.vmodel=!0)))},componentUpdated:function(n,e,r){if("select"===r.tag){No(n,e,r.context);var t=n._vOptions,a=n._vOptions=[].map.call(n.options,Vo);if(a.some((function(n,e){return!M(n,t[e])})))(n.multiple?e.value.some((function(n){return qo(n,a)})):e.value!==e.oldValue&&qo(e.value,a))&&Go(n,"change")}}};function No(n,e,r){Uo(n,e,r),(J||X)&&setTimeout((function(){Uo(n,e,r)}),0)}function Uo(n,e,r){var t=e.value,a=n.multiple;if(!a||Array.isArray(t)){for(var o,i,l=0,s=n.options.length;l<s;l++)if(i=n.options[l],a)o=L(t,Vo(i))>-1,i.selected!==o&&(i.selected=o);else if(M(Vo(i),t))return void(n.selectedIndex!==l&&(n.selectedIndex=l));a||(n.selectedIndex=-1)}}function qo(n,e){return e.every((function(e){return!M(e,n)}))}function Vo(n){return"_value"in n?n._value:n.value}function Ho(n){n.target.composing=!0}function Wo(n){n.target.composing&&(n.target.composing=!1,Go(n.target,"input"))}function Go(n,e){var r=document.createEvent("HTMLEvents");r.initEvent(e,!0,!0),n.dispatchEvent(r)}function Qo(n){return!n.componentInstance||n.data&&n.data.transition?n:Qo(n.componentInstance._vnode)}var Ko={model:Bo,show:{bind:function(n,e,r){var t=e.value,a=(r=Qo(r)).data&&r.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;t&&a?(r.data.show=!0,Fo(r,(function(){n.style.display=o}))):n.style.display=t?o:"none"},update:function(n,e,r){var t=e.value;!t!=!e.oldValue&&((r=Qo(r)).data&&r.data.transition?(r.data.show=!0,t?Fo(r,(function(){n.style.display=n.__vOriginalDisplay})):Oo(r,(function(){n.style.display="none"}))):n.style.display=t?n.__vOriginalDisplay:"none")},unbind:function(n,e,r,t,a){a||(n.style.display=n.__vOriginalDisplay)}}},Yo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Jo(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Jo(dr(e.children)):n}function Zo(n){var e={},r=n.$options;for(var t in r.propsData)e[t]=n[t];var a=r._parentListeners;for(var t in a)e[S(t)]=a[t];return e}function Xo(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var ni=function(n){return n.tag||Ye(n)},ei=function(n){return"show"===n.name},ri={name:"transition",props:Yo,abstract:!0,render:function(n){var e=this,r=this.$slots.default;if(r&&(r=r.filter(ni)).length){0;var t=this.mode;0;var a=r[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var o=Jo(a);if(!o)return a;if(this._leaving)return Xo(n,a);var i="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?i+"comment":i+o.tag:s(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var l=(o.data||(o.data={})).transition=Zo(this),c=this._vnode,u=Jo(c);if(o.data.directives&&o.data.directives.some(ei)&&(o.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(o,u)&&!Ye(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=z({},l);if("out-in"===t)return this._leaving=!0,Te(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Xo(n,a);if("in-out"===t){if(Ye(o))return c;var p,m=function(){p()};Te(l,"afterEnter",m),Te(l,"enterCancelled",m),Te(d,"delayLeave",(function(n){p=n}))}}return a}}},ti=z({tag:String,moveClass:String},Yo);function ai(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function oi(n){n.data.newPos=n.elm.getBoundingClientRect()}function ii(n){var e=n.data.pos,r=n.data.newPos,t=e.left-r.left,a=e.top-r.top;if(t||a){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate(".concat(t,"px,").concat(a,"px)"),o.transitionDuration="0s"}}delete ti.mode;var li={Transition:ri,TransitionGroup:{props:ti,beforeMount:function(){var n=this,e=this._update;this._update=function(r,t){var a=tt(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,r,t)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",r=Object.create(null),t=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],i=Zo(this),l=0;l<a.length;l++){if((u=a[l]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))o.push(u),r[u.key]=u,(u.data||(u.data={})).transition=i;else;}if(t){var s=[],c=[];for(l=0;l<t.length;l++){var u;(u=t[l]).data.transition=i,u.data.pos=u.elm.getBoundingClientRect(),r[u.key]?s.push(u):c.push(u)}this.kept=n(e,null,s),this.removed=c}return n(e,null,o)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(ai),n.forEach(oi),n.forEach(ii),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var r=n.elm,t=r.style;$o(r,e),t.transform=t.WebkitTransform=t.transitionDuration="",r.addEventListener(ko,r._moveCb=function n(t){t&&t.target!==r||t&&!/transform$/.test(t.propertyName)||(r.removeEventListener(ko,n),r._moveCb=null,Ao(r,e))})}})))},methods:{hasMove:function(n,e){if(!xo)return!1;if(this._hasMove)return this._hasMove;var r=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){vo(r,n)})),go(r,e),r.style.display="none",this.$el.appendChild(r);var t=Eo(r);return this.$el.removeChild(r),this._hasMove=t.hasTransform}}}};Zt.config.mustUseProp=function(n,e,r){return"value"===r&&la(n)&&"button"!==e||"selected"===r&&"option"===n||"checked"===r&&"input"===n||"muted"===r&&"video"===n},Zt.config.isReservedTag=ka,Zt.config.isReservedAttr=ia,Zt.config.getTagNamespace=function(n){return wa(n)?"svg":"math"===n?"math":void 0},Zt.config.isUnknownElement=function(n){if(!K)return!0;if(ka(n))return!1;if(n=n.toLowerCase(),null!=Ca[n])return Ca[n];var e=document.createElement(n);return n.indexOf("-")>-1?Ca[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Ca[n]=/HTMLUnknownElement/.test(e.toString())},z(Zt.options.directives,Ko),z(Zt.options.components,li),Zt.prototype.__patch__=K?Ro:F,Zt.prototype.$mount=function(n,e){return function(n,e,r){var t;n.$el=e,n.$options.render||(n.$options.render=gn),it(n,"beforeMount"),t=function(){n._update(n._render(),r)},new Jr(n,t,F,{before:function(){n._isMounted&&!n._isDestroyed&&it(n,"beforeUpdate")}},!0),r=!1;var a=n._preWatchers;if(a)for(var o=0;o<a.length;o++)a[o].run();return null==n.$vnode&&(n._isMounted=!0,it(n,"mounted")),n}(this,n=n&&K?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},K&&setTimeout((function(){q.devtools&&sn&&sn.emit("init",Zt)}),0)},function(n,e,r){"use strict";r.d(e,"a",(function(){return d}));var t=r(0);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */function a(n){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function o(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function i(n){return function(n){if(Array.isArray(n)){for(var e=0,r=new Array(n.length);e<n.length;e++)r[e]=n[e];return r}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function l(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function s(n,e){c(n,e),Object.getOwnPropertyNames(e.prototype).forEach((function(r){c(n.prototype,e.prototype,r)})),Object.getOwnPropertyNames(e).forEach((function(r){c(n,e,r)}))}function c(n,e,r){(r?Reflect.getOwnMetadataKeys(e,r):Reflect.getOwnMetadataKeys(e)).forEach((function(t){var a=r?Reflect.getOwnMetadata(t,e,r):Reflect.getOwnMetadata(t,e);r?Reflect.defineMetadata(t,a,n,r):Reflect.defineMetadata(t,a,n)}))}var u={__proto__:[]}instanceof Array;function d(n){return function(e,r,t){var a="function"==typeof e?e:e.constructor;a.__decorators__||(a.__decorators__=[]),"number"!=typeof t&&(t=void 0),a.__decorators__.push((function(e){return n(e,r,t)}))}}function p(n,e){var r=e.prototype._init;e.prototype._init=function(){var e=this,r=Object.getOwnPropertyNames(n);if(n.$options.props)for(var t in n.$options.props)n.hasOwnProperty(t)||r.push(t);r.forEach((function(r){Object.defineProperty(e,r,{get:function(){return n[r]},set:function(e){n[r]=e},configurable:!0})}))};var t=new e;e.prototype._init=r;var a={};return Object.keys(t).forEach((function(n){void 0!==t[n]&&(a[n]=t[n])})),a}var m=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function h(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.name=e.name||n._componentTag||n.name;var r=n.prototype;Object.getOwnPropertyNames(r).forEach((function(n){if("constructor"!==n)if(m.indexOf(n)>-1)e[n]=r[n];else{var t=Object.getOwnPropertyDescriptor(r,n);void 0!==t.value?"function"==typeof t.value?(e.methods||(e.methods={}))[n]=t.value:(e.mixins||(e.mixins=[])).push({data:function(){return o({},n,t.value)}}):(t.get||t.set)&&((e.computed||(e.computed={}))[n]={get:t.get,set:t.set})}})),(e.mixins||(e.mixins=[])).push({data:function(){return p(this,n)}});var a=n.__decorators__;a&&(a.forEach((function(n){return n(e)})),delete n.__decorators__);var i=Object.getPrototypeOf(n.prototype),c=i instanceof t.default?i.constructor:t.default,u=c.extend(e);return g(u,n,c),l()&&s(u,n),u}var f={prototype:!0,arguments:!0,callee:!0,caller:!0};function g(n,e,r){Object.getOwnPropertyNames(e).forEach((function(t){if(!f[t]){var o=Object.getOwnPropertyDescriptor(n,t);if(!o||o.configurable){var i,l,s=Object.getOwnPropertyDescriptor(e,t);if(!u){if("cid"===t)return;var c=Object.getOwnPropertyDescriptor(r,t);if(i=s.value,l=a(i),null!=i&&("object"===l||"function"===l)&&c&&c.value===s.value)return}0,Object.defineProperty(n,t,s)}}}))}function v(n){return"function"==typeof n?h(n):function(e){return h(e,n)}}v.registerHooks=function(n){m.push.apply(m,i(n))},e.b=v},function(n,e,r){"use strict";function t(n,e,r,t,a,o,i,l){var s,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=r,c._compiled=!0),t&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(s=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=s):a&&(s=l?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),s)if(c.functional){c._injectStyles=s;var u=c.render;c.render=function(n,e){return s.call(e),u(n,e)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,s):[s]}return{exports:n,options:c}}r.d(e,"a",(function(){return t}))},function(n,e,r){"use strict";var t=r(111),a=Object.prototype.toString;function o(n){return"[object Array]"===a.call(n)}function i(n){return void 0===n}function l(n){return null!==n&&"object"==typeof n}function s(n){if("[object Object]"!==a.call(n))return!1;var e=Object.getPrototypeOf(n);return null===e||e===Object.prototype}function c(n){return"[object Function]"===a.call(n)}function u(n,e){if(null!=n)if("object"!=typeof n&&(n=[n]),o(n))for(var r=0,t=n.length;r<t;r++)e.call(null,n[r],r,n);else for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&e.call(null,n[a],a,n)}n.exports={isArray:o,isArrayBuffer:function(n){return"[object ArrayBuffer]"===a.call(n)},isBuffer:function(n){return null!==n&&!i(n)&&null!==n.constructor&&!i(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){return"undefined"!=typeof FormData&&n instanceof FormData},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&n.buffer instanceof ArrayBuffer},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:l,isPlainObject:s,isUndefined:i,isDate:function(n){return"[object Date]"===a.call(n)},isFile:function(n){return"[object File]"===a.call(n)},isBlob:function(n){return"[object Blob]"===a.call(n)},isFunction:c,isStream:function(n){return l(n)&&c(n.pipe)},isURLSearchParams:function(n){return"undefined"!=typeof URLSearchParams&&n instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function n(){var e={};function r(r,t){s(e[t])&&s(r)?e[t]=n(e[t],r):s(r)?e[t]=n({},r):o(r)?e[t]=r.slice():e[t]=r}for(var t=0,a=arguments.length;t<a;t++)u(arguments[t],r);return e},extend:function(n,e,r){return u(e,(function(e,a){n[a]=r&&"function"==typeof e?t(e,r):e})),n},trim:function(n){return n.trim?n.trim():n.replace(/^\s+|\s+$/g,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n}}},function(n,e,r){"use strict";var t=function(n){return n&&n.Math===Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||t("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,r){"use strict";var t=r(45),a=Function.prototype,o=a.call,i=t&&a.bind.bind(o,o);n.exports=t?i:function(n){return function(){return o.apply(n,arguments)}}},function(n,e,r){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,r){"use strict";var t="object"==typeof document&&document.all;n.exports=void 0===t&&void 0!==t?function(n){return"function"==typeof n||n===t}:function(n){return"function"==typeof n}},function(n,e,r){"use strict";var t=r(6);n.exports=!t((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,r){n.exports=r(298)},function(n,e,r){"use strict";var t=r(7);n.exports=function(n){return"object"==typeof n?null!==n:t(n)}},function(n,e,r){var t=r(84),a="object"==typeof self&&self&&self.Object===Object&&self,o=t||a||Function("return this")();n.exports=o},function(n,e){var r=Array.isArray;n.exports=r},function(n,e,r){"use strict";var t=r(5),a=r(28),o=t({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return o(a(n),e)}},function(n,e,r){var t=r(192),a=r(195);n.exports=function(n,e){var r=a(n,e);return t(r)?r:void 0}},function(n,e,r){var t=r(286),a=r(109),o=/[T ]/,i=/:/,l=/^(\d{2})$/,s=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],c=/^(\d{4})/,u=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],d=/^-(\d{2})$/,p=/^-?(\d{3})$/,m=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,f=/^-?W(\d{2})-?(\d{1})$/,g=/^(\d{2}([.,]\d*)?)$/,v=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/([Z+-].*)$/,x=/^(Z)$/,w=/^([+-])(\d{2})$/,k=/^([+-])(\d{2}):?(\d{2})$/;function C(n,e,r){e=e||0,r=r||0;var t=new Date(0);t.setUTCFullYear(n,0,4);var a=7*e+r+1-(t.getUTCDay()||7);return t.setUTCDate(t.getUTCDate()+a),t}n.exports=function(n,e){if(a(n))return new Date(n.getTime());if("string"!=typeof n)return new Date(n);var r=(e||{}).additionalDigits;r=null==r?2:Number(r);var _=function(n){var e,r={},t=n.split(o);i.test(t[0])?(r.date=null,e=t[0]):(r.date=t[0],e=t[1]);if(e){var a=y.exec(e);a?(r.time=e.replace(a[1],""),r.timezone=a[1]):r.time=e}return r}(n),D=function(n,e){var r,t=s[e],a=u[e];if(r=c.exec(n)||a.exec(n)){var o=r[1];return{year:parseInt(o,10),restDateString:n.slice(o.length)}}if(r=l.exec(n)||t.exec(n)){var i=r[1];return{year:100*parseInt(i,10),restDateString:n.slice(i.length)}}return{year:null}}(_.date,r),S=D.year,$=function(n,e){if(null===e)return null;var r,t,a,o;if(0===n.length)return(t=new Date(0)).setUTCFullYear(e),t;if(r=d.exec(n))return t=new Date(0),a=parseInt(r[1],10)-1,t.setUTCFullYear(e,a),t;if(r=p.exec(n)){t=new Date(0);var i=parseInt(r[1],10);return t.setUTCFullYear(e,0,i),t}if(r=m.exec(n)){t=new Date(0),a=parseInt(r[1],10)-1;var l=parseInt(r[2],10);return t.setUTCFullYear(e,a,l),t}if(r=h.exec(n))return o=parseInt(r[1],10)-1,C(e,o);if(r=f.exec(n)){o=parseInt(r[1],10)-1;var s=parseInt(r[2],10)-1;return C(e,o,s)}return null}(D.restDateString,S);if($){var A,T=$.getTime(),j=0;if(_.time&&(j=function(n){var e,r,t;if(e=g.exec(n))return(r=parseFloat(e[1].replace(",",".")))%24*36e5;if(e=v.exec(n))return r=parseInt(e[1],10),t=parseFloat(e[2].replace(",",".")),r%24*36e5+6e4*t;if(e=b.exec(n)){r=parseInt(e[1],10),t=parseInt(e[2],10);var a=parseFloat(e[3].replace(",","."));return r%24*36e5+6e4*t+1e3*a}return null}(_.time)),_.timezone)A=6e4*function(n){var e,r;if(e=x.exec(n))return 0;if(e=w.exec(n))return r=60*parseInt(e[2],10),"+"===e[1]?-r:r;if(e=k.exec(n))return r=60*parseInt(e[2],10)+parseInt(e[3],10),"+"===e[1]?-r:r;return 0}(_.timezone);else{var E=T+j,z=new Date(E);A=t(z);var I=new Date(E);I.setDate(z.getDate()+1);var F=t(I)-t(z);F>0&&(A+=F)}return new Date(T+j+A)}return new Date(n)}},function(n,e,r){"use strict";var t=r(21),a=r(28),o=r(32),i=r(173),l=r(147);t({target:"Array",proto:!0,arity:1,forced:r(6)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=a(this),r=o(e),t=arguments.length;l(r+t);for(var s=0;s<t;s++)e[r]=arguments[s],r++;return i(e,r),r}})},function(n,e,r){"use strict";var t=r(8),a=r(80),o=r(81),i=r(30),l=r(73),s=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;e.f=t?o?function(n,e,r){if(i(n),e=l(e),i(r),"function"==typeof n&&"prototype"===e&&"value"in r&&"writable"in r&&!r.writable){var t=u(n,e);t&&t.writable&&(n[e]=r.value,r={configurable:"configurable"in r?r.configurable:t.configurable,enumerable:"enumerable"in r?r.enumerable:t.enumerable,writable:!1})}return c(n,e,r)}:c:function(n,e,r){if(i(n),e=l(e),i(r),a)try{return c(n,e,r)}catch(n){}if("get"in r||"set"in r)throw new s("Accessors not supported");return"value"in r&&(n[e]=r.value),n}},function(n,e,r){"use strict";r.d(e,"c",(function(){return o})),r.d(e,"i",(function(){return i})),r.d(e,"f",(function(){return s})),r.d(e,"g",(function(){return c})),r.d(e,"h",(function(){return u})),r.d(e,"d",(function(){return d})),r.d(e,"e",(function(){return p})),r.d(e,"k",(function(){return m})),r.d(e,"l",(function(){return h})),r.d(e,"j",(function(){return f})),r.d(e,"b",(function(){return v})),r.d(e,"a",(function(){return b}));r(16);const t=/#.*$/,a=/\.(md|html)$/,o=/\/$/,i=/^(https?:|mailto:|tel:)/;function l(n){return decodeURI(n).replace(t,"").replace(a,"")}function s(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function u(n){return/^tel:/.test(n)}function d(n){if(s(n))return n;const e=n.match(t),r=e?e[0]:"",a=l(n);return o.test(a)?n:a+".html"+r}function p(n,e){const r=n.hash,a=function(n){const e=n.match(t);if(e)return e[0]}(e);if(a&&r!==a)return!1;return l(n.path)===l(e)}function m(n,e,r){r&&(e=function(n,e,r){const t=n.charAt(0);if("/"===t)return n;if("?"===t||"#"===t)return e+n;const a=e.split("/");r&&a[a.length-1]||a.pop();const o=n.replace(/^\//,"").split("/");for(let n=0;n<o.length;n++){const e=o[n];".."===e?a.pop():"."!==e&&a.push(e)}""!==a[0]&&a.unshift("");return a.join("/")}(e,r));const t=l(e);for(let e=0;e<n.length;e++)if(l(n[e].regularPath)===t)return Object.assign({},n[e],{type:"page",path:d(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function h(n,e,r,t){const{pages:a,themeConfig:o}=r,i=(t&&o.locales&&o.locales[t]||o).sidebar||o.sidebar,{base:l,config:s}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const t in e)if(0===(r=n,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var r;return{}}(e,i);return s?s.map(n=>function n(e,r,t,a=1){if("string"==typeof e)return m(r,e,t);if(Array.isArray(e))return Object.assign(m(r,e[0],t),{title:e[1]});{a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const o=e.children||[];return 0===o.length&&e.path?Object.assign(m(r,e.path,t),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,children:o.map(e=>n(e,r,t,a+1)),collapsable:!1!==e.collapsable}}}(n,a,l)):[]}function f(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function g(n){return n?new Date(n).getTime():0}function v(n,e){const r=g(n.frontmatter.date),t=g(e.frontmatter.date);return 0===r||0===t?0:t-r}function b(n){const e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.append(e)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,r){"use strict";var t=r(283),a=r(284),o=r(108);n.exports={formats:o,parse:a,stringify:t}},function(n,e,r){"use strict";var t=r(4),a=r(66).f,o=r(22),i=r(129),l=r(48),s=r(76),c=r(159);n.exports=function(n,e){var r,u,d,p,m,h=n.target,f=n.global,g=n.stat;if(r=f?t:g?t[h]||l(h,{}):t[h]&&t[h].prototype)for(u in e){if(p=e[u],d=n.dontCallGetSet?(m=a(r,u))&&m.value:r[u],!c(f?u:h+(g?".":"#")+u,n.forced)&&void 0!==d){if(typeof p==typeof d)continue;s(p,d)}(n.sham||d&&d.sham)&&o(p,"sham",!0),i(r,u,p,n)}}},function(n,e,r){"use strict";var t=r(8),a=r(17),o=r(43);n.exports=t?function(n,e,r){return a.f(n,e,o(1,r))}:function(n,e,r){return n[e]=r,n}},function(n,e,r){var t=r(11).Symbol;n.exports=t},function(n,e,r){var t=r(23),a=r(177),o=r(178),i=t?t.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?a(n):o(n)}},function(n,e,r){"use strict";r.d(e,"a",(function(){return a})),r.d(e,"c",(function(){return o})),r.d(e,"b",(function(){return i}));var t=r(18);function a(n,e){return n=n.filter((r,t)=>{const{title:a,frontmatter:{home:o,date:i,publish:l}}=r;if(n.indexOf(r)!==t)return!1;{const n=!0===o||null==a||!1===l;return!0===e?!(n||void 0===i):!n}})}function o(n){n.sort((n,e)=>{const r=n.frontmatter.sticky,a=e.frontmatter.sticky;return r&&a?r==a?Object(t.b)(n,e):r-a:r&&!a?-1:!r&&a?1:Object(t.b)(n,e)})}function i(n){n.sort((n,e)=>Object(t.b)(n,e))}},function(n,e,r){"use strict";var t=r(4),a=r(64),o=r(13),i=r(74),l=r(63),s=r(79),c=t.Symbol,u=a("wks"),d=s?c.for||c:c&&c.withoutSetter||i;n.exports=function(n){return o(u,n)||(u[n]=l&&o(c,n)?c[n]:d("Symbol."+n)),u[n]}},function(n,e,r){"use strict";var t=r(4),a=r(7),o=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?o(t[n]):t[n]&&t[n][e]}},function(n,e,r){"use strict";var t=r(34),a=Object;n.exports=function(n){return a(t(n))}},function(n,e,r){"use strict";var t=r(5),a=t({}.toString),o=t("".slice);n.exports=function(n){return o(a(n),8,-1)}},function(n,e,r){"use strict";var t=r(10),a=String,o=TypeError;n.exports=function(n){if(t(n))return n;throw new o(a(n)+" is not an object")}},function(n,e,r){"use strict";var t=r(67),a=r(34);n.exports=function(n){return t(a(n))}},function(n,e,r){"use strict";var t=r(158);n.exports=function(n){return t(n.length)}},function(n,e,r){"use strict";var t=r(157);n.exports=function(n){var e=+n;return e!=e||0===e?0:t(e)}},function(n,e,r){"use strict";var t=r(78),a=TypeError;n.exports=function(n){if(t(n))throw new a("Can't call method on "+n);return n}},function(n,e,r){var t=r(182),a=r(183),o=r(184),i=r(185),l=r(186);function s(n){var e=-1,r=null==n?0:n.length;for(this.clear();++e<r;){var t=n[e];this.set(t[0],t[1])}}s.prototype.clear=t,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,n.exports=s},function(n,e,r){var t=r(86);n.exports=function(n,e){for(var r=n.length;r--;)if(t(n[r][0],e))return r;return-1}},function(n,e,r){var t=r(14)(Object,"create");n.exports=t},function(n,e,r){var t=r(204);n.exports=function(n,e){var r=n.__data__;return t(e)?r["string"==typeof e?"string":"hash"]:r.map}},function(n,e,r){var t=r(57);n.exports=function(n){if("string"==typeof n||t(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,r){var t,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(t=function(){var n,e,r={version:"0.2.0"},t=r.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,r){return n<e?e:n>r?r:n}function o(n){return 100*(-1+n)}r.configure=function(n){var e,r;for(e in n)void 0!==(r=n[e])&&n.hasOwnProperty(e)&&(t[e]=r);return this},r.status=null,r.set=function(n){var e=r.isStarted();n=a(n,t.minimum,1),r.status=1===n?null:n;var s=r.render(!e),c=s.querySelector(t.barSelector),u=t.speed,d=t.easing;return s.offsetWidth,i((function(e){""===t.positionUsing&&(t.positionUsing=r.getPositioningCSS()),l(c,function(n,e,r){var a;return(a="translate3d"===t.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===t.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+e+"ms "+r,a}(n,u,d)),1===n?(l(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){l(s,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){r.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},r.isStarted=function(){return"number"==typeof r.status},r.start=function(){r.status||r.set(0);var n=function(){setTimeout((function(){r.status&&(r.trickle(),n())}),t.trickleSpeed)};return t.trickle&&n(),this},r.done=function(n){return n||r.status?r.inc(.3+.5*Math.random()).set(1):this},r.inc=function(n){var e=r.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),r.set(e)):r.start()},r.trickle=function(){return r.inc(Math.random()*t.trickleRate)},n=0,e=0,r.promise=function(t){return t&&"resolved"!==t.state()?(0===e&&r.start(),n++,e++,t.always((function(){0==--e?(n=0,r.done()):r.set((n-e)/n)})),this):this},r.render=function(n){if(r.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=t.template;var a,i=e.querySelector(t.barSelector),s=n?"-100":o(r.status||0),u=document.querySelector(t.parent);return l(i,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),t.showSpinner||(a=e.querySelector(t.spinnerSelector))&&p(a),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},r.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(t.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},r.isRendered=function(){return!!document.getElementById("nprogress")},r.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var r=n.shift();r&&r(e)}return function(r){n.push(r),1==n.length&&e()}}(),l=function(){var n=["Webkit","O","Moz","ms"],e={};function r(r){return r=r.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[r]||(e[r]=function(e){var r=document.body.style;if(e in r)return e;for(var t,a=n.length,o=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((t=n[a]+o)in r)return t;return e}(r))}function t(n,e,t){e=r(e),n.style[e]=t}return function(n,e){var r,a,o=arguments;if(2==o.length)for(r in e)void 0!==(a=e[r])&&e.hasOwnProperty(r)&&t(n,r,a);else t(n,o[1],o[2])}}();function s(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function c(n,e){var r=d(n),t=r+e;s(r,e)||(n.className=t.substring(1))}function u(n,e){var r,t=d(n);s(n,e)&&(r=t.replace(" "+e+" "," "),n.className=r.substring(1,r.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return r})?t.call(e,r,e,n):t)||(n.exports=a)},function(n,e,r){"use strict";r.d(e,"b",(function(){return t})),r.d(e,"c",(function(){return a})),r.d(e,"a",(function(){return o}));r(16),r(18);function t(){const n=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return n[Math.floor(Math.random()*n.length)]}function a(n){const e=n.__proto__.push;n.__proto__.push=function(n){return e.call(this,n).catch(n=>n)}}function o(n){const e=n.getRoutes();n.beforeEach((n,r,t)=>{const a=e.find(e=>e.regex.test(n.path));return/\.html$/.test(n.path)||a&&"*"!==a.path&&!a.redirect?t():decodeURIComponent(n.path)!==n.path?t(Object.assign({},n,{path:decodeURIComponent(n.path),fullPath:decodeURIComponent(n.fullPath)})):void t()})}},function(n,e,r){"use strict";var t=r(45),a=Function.prototype.call;n.exports=t?a.bind(a):function(){return a.apply(a,arguments)}},function(n,e,r){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,r){"use strict";var t=r(7),a=r(142),o=TypeError;n.exports=function(n){if(t(n))return n;throw new o(a(n)+" is not a function")}},function(n,e,r){"use strict";var t=r(6);n.exports=!t((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,r){"use strict";n.exports={}},function(n,e,r){"use strict";var t=r(65),a=r(4),o=r(48),i=n.exports=a["__core-js_shared__"]||o("__core-js_shared__",{});(i.versions||(i.versions=[])).push({version:"3.37.0",mode:t?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.37.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,r){"use strict";var t=r(4),a=Object.defineProperty;n.exports=function(n,e){try{a(t,n,{value:e,configurable:!0,writable:!0})}catch(r){t[n]=e}return e}},function(n,e,r){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,r){var t=r(176),a=r(19),o=Object.prototype,i=o.hasOwnProperty,l=o.propertyIsEnumerable,s=t(function(){return arguments}())?t:function(n){return a(n)&&i.call(n,"callee")&&!l.call(n,"callee")};n.exports=s},function(n,e,r){var t=r(14)(r(11),"Map");n.exports=t},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,r){var t=r(196),a=r(203),o=r(205),i=r(206),l=r(207);function s(n){var e=-1,r=null==n?0:n.length;for(this.clear();++e<r;){var t=n[e];this.set(t[0],t[1])}}s.prototype.clear=t,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,n.exports=s},function(n,e){n.exports=function(n){var e=-1,r=Array(n.size);return n.forEach((function(n){r[++e]=n})),r}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,r){var t=r(12),a=r(57),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(t(n))return!1;var r=typeof n;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=n&&!a(n))||(i.test(n)||!o.test(n)||null!=e&&n in Object(e))}},function(n,e,r){var t=r(24),a=r(19);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==t(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,r){var t=r(291);n.exports=function(n){return t(n,{weekStartsOn:1})}},function(n,e,r){"use strict";var t=r(3),a=r(303),o=r(113),i={"Content-Type":"application/x-www-form-urlencoded"};function l(n,e){!t.isUndefined(n)&&t.isUndefined(n["Content-Type"])&&(n["Content-Type"]=e)}var s,c={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(s=r(114)),s),transformRequest:[function(n,e){return a(e,"Accept"),a(e,"Content-Type"),t.isFormData(n)||t.isArrayBuffer(n)||t.isBuffer(n)||t.isStream(n)||t.isFile(n)||t.isBlob(n)?n:t.isArrayBufferView(n)?n.buffer:t.isURLSearchParams(n)?(l(e,"application/x-www-form-urlencoded;charset=utf-8"),n.toString()):t.isObject(n)||e&&"application/json"===e["Content-Type"]?(l(e,"application/json"),function(n,e,r){if(t.isString(n))try{return(e||JSON.parse)(n),t.trim(n)}catch(n){if("SyntaxError"!==n.name)throw n}return(r||JSON.stringify)(n)}(n)):n}],transformResponse:[function(n){var e=this.transitional,r=e&&e.silentJSONParsing,a=e&&e.forcedJSONParsing,i=!r&&"json"===this.responseType;if(i||a&&t.isString(n)&&n.length)try{return JSON.parse(n)}catch(n){if(i){if("SyntaxError"===n.name)throw o(n,this,"E_JSON_PARSE");throw n}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(n){return n>=200&&n<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},t.forEach(["delete","get","head"],(function(n){c.headers[n]={}})),t.forEach(["post","put","patch"],(function(n){c.headers[n]=t.merge(i)})),n.exports=c},function(n,e,r){"use strict";var t=r(21),a=r(160).left,o=r(161),i=r(70);t({target:"Array",proto:!0,forced:!r(162)&&i>79&&i<83||!o("reduce")},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,r){"use strict";var t=r(137),a=String;n.exports=function(n){if("Symbol"===t(n))throw new TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,r){"use strict";var t=r(70),a=r(6),o=r(4).String;n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol("symbol detection");return!o(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&t&&t<41}))},function(n,e,r){"use strict";var t=r(47);n.exports=function(n,e){return t[n]||(t[n]=e||{})}},function(n,e,r){"use strict";n.exports=!1},function(n,e,r){"use strict";var t=r(8),a=r(42),o=r(135),i=r(43),l=r(31),s=r(73),c=r(13),u=r(80),d=Object.getOwnPropertyDescriptor;e.f=t?d:function(n,e){if(n=l(n),e=s(e),u)try{return d(n,e)}catch(n){}if(c(n,e))return i(!a(o.f,n,e),n[e])}},function(n,e,r){"use strict";var t=r(5),a=r(6),o=r(29),i=Object,l=t("".split);n.exports=a((function(){return!i("z").propertyIsEnumerable(0)}))?function(n){return"String"===o(n)?l(n,""):i(n)}:i},function(n,e,r){"use strict";var t=r(27),a=r(7),o=r(69),i=r(79),l=Object;n.exports=i?function(n){return"symbol"==typeof n}:function(n){var e=t("Symbol");return a(e)&&o(e.prototype,l(n))}},function(n,e,r){"use strict";var t=r(5);n.exports=t({}.isPrototypeOf)},function(n,e,r){"use strict";var t,a,o=r(4),i=r(151),l=o.process,s=o.Deno,c=l&&l.versions||s&&s.version,u=c&&c.v8;u&&(a=(t=u.split("."))[0]>0&&t[0]<4?1:+(t[0]+t[1])),!a&&i&&(!(t=i.match(/Edge\/(\d+)/))||t[1]>=74)&&(t=i.match(/Chrome\/(\d+)/))&&(a=+t[1]),n.exports=a},function(n,e,r){"use strict";var t=r(64),a=r(74),o=t("keys");n.exports=function(n){return o[n]||(o[n]=a(n))}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,r){"use strict";var t=r(150),a=r(68);n.exports=function(n){var e=t(n,"string");return a(e)?e:e+""}},function(n,e,r){"use strict";var t=r(5),a=0,o=Math.random(),i=t(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++a+o,36)}},function(n,e,r){"use strict";var t=r(4),a=r(10),o=t.document,i=a(o)&&a(o.createElement);n.exports=function(n){return i?o.createElement(n):{}}},function(n,e,r){"use strict";var t=r(13),a=r(154),o=r(66),i=r(17);n.exports=function(n,e,r){for(var l=a(e),s=i.f,c=o.f,u=0;u<l.length;u++){var d=l[u];t(n,d)||r&&t(r,d)||s(n,d,c(e,d))}}},function(n,e,r){"use strict";var t=r(146),a=r(10),o=r(34),i=r(164);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,r={};try{(n=t(Object.prototype,"__proto__","set"))(r,[]),e=r instanceof Array}catch(n){}return function(r,t){return o(r),i(t),a(r)?(e?n(r,t):r.__proto__=t,r):r}}():void 0)},function(n,e,r){"use strict";n.exports=function(n){return null==n}},function(n,e,r){"use strict";var t=r(63);n.exports=t&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,r){"use strict";var t=r(8),a=r(6),o=r(75);n.exports=!t&&!a((function(){return 7!==Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(n,e,r){"use strict";var t=r(8),a=r(6);n.exports=t&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,r){"use strict";var t=r(5),a=r(13),o=r(31),i=r(155).indexOf,l=r(46),s=t([].push);n.exports=function(n,e){var r,t=o(n),c=0,u=[];for(r in t)!a(l,r)&&a(t,r)&&s(u,r);for(;e.length>c;)a(t,r=e[c++])&&(~i(u,r)||s(u,r));return u}},function(n,e){n.exports=function(n,e){for(var r=-1,t=e.length,a=n.length;++r<t;)n[a+r]=e[r];return n}},function(n,e){var r="object"==typeof global&&global&&global.Object===Object&&global;n.exports=r},function(n,e,r){var t=r(35),a=r(187),o=r(188),i=r(189),l=r(190),s=r(191);function c(n){var e=this.__data__=new t(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=l,c.prototype.set=s,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,r){var t=r(24),a=r(52);n.exports=function(n){if(!a(n))return!1;var e=t(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var r=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return r.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,r){var t=r(208),a=r(19);n.exports=function n(e,r,o,i,l){return e===r||(null==e||null==r||!a(e)&&!a(r)?e!=e&&r!=r:t(e,r,o,i,n,l))}},function(n,e,r){var t=r(91),a=r(211),o=r(92);n.exports=function(n,e,r,i,l,s){var c=1&r,u=n.length,d=e.length;if(u!=d&&!(c&&d>u))return!1;var p=s.get(n),m=s.get(e);if(p&&m)return p==e&&m==n;var h=-1,f=!0,g=2&r?new t:void 0;for(s.set(n,e),s.set(e,n);++h<u;){var v=n[h],b=e[h];if(i)var y=c?i(b,v,h,e,n,s):i(v,b,h,n,e,s);if(void 0!==y){if(y)continue;f=!1;break}if(g){if(!a(e,(function(n,e){if(!o(g,e)&&(v===n||l(v,n,r,i,s)))return g.push(e)}))){f=!1;break}}else if(v!==b&&!l(v,b,r,i,s)){f=!1;break}}return s.delete(n),s.delete(e),f}},function(n,e,r){var t=r(53),a=r(209),o=r(210);function i(n){var e=-1,r=null==n?0:n.length;for(this.__data__=new t;++e<r;)this.add(n[e])}i.prototype.add=i.prototype.push=a,i.prototype.has=o,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,r){var t=r(221),a=r(227),o=r(97);n.exports=function(n){return o(n)?t(n):a(n)}},function(n,e,r){(function(n){var t=r(11),a=r(223),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,l=i&&i.exports===o?t.Buffer:void 0,s=(l?l.isBuffer:void 0)||a;n.exports=s}).call(this,r(72)(n))},function(n,e){var r=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var t=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==t||"symbol"!=t&&r.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,r){var t=r(224),a=r(225),o=r(226),i=o&&o.isTypedArray,l=i?a(i):t;n.exports=l},function(n,e,r){var t=r(87),a=r(55);n.exports=function(n){return null!=n&&a(n.length)&&!t(n)}},function(n,e,r){var t=r(14)(r(11),"Set");n.exports=t},function(n,e,r){var t=r(52);n.exports=function(n){return n==n&&!t(n)}},function(n,e){n.exports=function(n,e){return function(r){return null!=r&&(r[n]===e&&(void 0!==e||n in Object(r)))}}},function(n,e,r){var t=r(102),a=r(39);n.exports=function(n,e){for(var r=0,o=(e=t(e,n)).length;null!=n&&r<o;)n=n[a(e[r++])];return r&&r==o?n:void 0}},function(n,e,r){var t=r(12),a=r(56),o=r(238),i=r(241);n.exports=function(n,e){return t(n)?n:a(n,e)?[n]:o(i(n))}},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){"use strict";var t=Object.prototype.hasOwnProperty,a=function(){for(var n=[],e=0;e<256;++e)n.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return n}(),o=function(n,e){for(var r=e&&e.plainObjects?Object.create(null):{},t=0;t<n.length;++t)void 0!==n[t]&&(r[t]=n[t]);return r};n.exports={arrayToObject:o,assign:function(n,e){return Object.keys(e).reduce((function(n,r){return n[r]=e[r],n}),n)},compact:function(n){for(var e=[{obj:{o:n},prop:"o"}],r=[],t=0;t<e.length;++t)for(var a=e[t],o=a.obj[a.prop],i=Object.keys(o),l=0;l<i.length;++l){var s=i[l],c=o[s];"object"==typeof c&&null!==c&&-1===r.indexOf(c)&&(e.push({obj:o,prop:s}),r.push(c))}return function(n){for(var e;n.length;){var r=n.pop();if(e=r.obj[r.prop],Array.isArray(e)){for(var t=[],a=0;a<e.length;++a)void 0!==e[a]&&t.push(e[a]);r.obj[r.prop]=t}}return e}(e)},decode:function(n){try{return decodeURIComponent(n.replace(/\+/g," "))}catch(e){return n}},encode:function(n){if(0===n.length)return n;for(var e="string"==typeof n?n:String(n),r="",t=0;t<e.length;++t){var o=e.charCodeAt(t);45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122?r+=e.charAt(t):o<128?r+=a[o]:o<2048?r+=a[192|o>>6]+a[128|63&o]:o<55296||o>=57344?r+=a[224|o>>12]+a[128|o>>6&63]+a[128|63&o]:(t+=1,o=65536+((1023&o)<<10|1023&e.charCodeAt(t)),r+=a[240|o>>18]+a[128|o>>12&63]+a[128|o>>6&63]+a[128|63&o])}return r},isBuffer:function(n){return null!=n&&!!(n.constructor&&n.constructor.isBuffer&&n.constructor.isBuffer(n))},isRegExp:function(n){return"[object RegExp]"===Object.prototype.toString.call(n)},merge:function n(e,r,a){if(!r)return e;if("object"!=typeof r){if(Array.isArray(e))e.push(r);else{if(!e||"object"!=typeof e)return[e,r];(a&&(a.plainObjects||a.allowPrototypes)||!t.call(Object.prototype,r))&&(e[r]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(r);var i=e;return Array.isArray(e)&&!Array.isArray(r)&&(i=o(e,a)),Array.isArray(e)&&Array.isArray(r)?(r.forEach((function(r,o){if(t.call(e,o)){var i=e[o];i&&"object"==typeof i&&r&&"object"==typeof r?e[o]=n(i,r,a):e.push(r)}else e[o]=r})),e):Object.keys(r).reduce((function(e,o){var i=r[o];return t.call(e,o)?e[o]=n(e[o],i,a):e[o]=i,e}),i)}}},function(n,e,r){"use strict";var t=String.prototype.replace,a=/%20/g;n.exports={default:"RFC3986",formatters:{RFC1738:function(n){return t.call(n,a,"+")},RFC3986:function(n){return String(n)}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},function(n,e){n.exports=function(n){return n instanceof Date}},function(n,e,r){var t=r(15),a=r(59);n.exports=function(n){var e=t(n),r=e.getFullYear(),o=new Date(0);o.setFullYear(r+1,0,4),o.setHours(0,0,0,0);var i=a(o),l=new Date(0);l.setFullYear(r,0,4),l.setHours(0,0,0,0);var s=a(l);return e.getTime()>=i.getTime()?r+1:e.getTime()>=s.getTime()?r:r-1}},function(n,e,r){"use strict";n.exports=function(n,e){return function(){for(var r=new Array(arguments.length),t=0;t<r.length;t++)r[t]=arguments[t];return n.apply(e,r)}}},function(n,e,r){"use strict";var t=r(3);function a(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,e,r){if(!e)return n;var o;if(r)o=r(e);else if(t.isURLSearchParams(e))o=e.toString();else{var i=[];t.forEach(e,(function(n,e){null!=n&&(t.isArray(n)?e+="[]":n=[n],t.forEach(n,(function(n){t.isDate(n)?n=n.toISOString():t.isObject(n)&&(n=JSON.stringify(n)),i.push(a(e)+"="+a(n))})))})),o=i.join("&")}if(o){var l=n.indexOf("#");-1!==l&&(n=n.slice(0,l)),n+=(-1===n.indexOf("?")?"?":"&")+o}return n}},function(n,e,r){"use strict";n.exports=function(n,e,r,t,a){return n.config=e,r&&(n.code=r),n.request=t,n.response=a,n.isAxiosError=!0,n.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},n}},function(n,e,r){"use strict";var t=r(3),a=r(304),o=r(305),i=r(112),l=r(306),s=r(309),c=r(310),u=r(115);n.exports=function(n){return new Promise((function(e,r){var d=n.data,p=n.headers,m=n.responseType;t.isFormData(d)&&delete p["Content-Type"];var h=new XMLHttpRequest;if(n.auth){var f=n.auth.username||"",g=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";p.Authorization="Basic "+btoa(f+":"+g)}var v=l(n.baseURL,n.url);function b(){if(h){var t="getAllResponseHeaders"in h?s(h.getAllResponseHeaders()):null,o={data:m&&"text"!==m&&"json"!==m?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:t,config:n,request:h};a(e,r,o),h=null}}if(h.open(n.method.toUpperCase(),i(v,n.params,n.paramsSerializer),!0),h.timeout=n.timeout,"onloadend"in h?h.onloadend=b:h.onreadystatechange=function(){h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))&&setTimeout(b)},h.onabort=function(){h&&(r(u("Request aborted",n,"ECONNABORTED",h)),h=null)},h.onerror=function(){r(u("Network Error",n,null,h)),h=null},h.ontimeout=function(){var e="timeout of "+n.timeout+"ms exceeded";n.timeoutErrorMessage&&(e=n.timeoutErrorMessage),r(u(e,n,n.transitional&&n.transitional.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",h)),h=null},t.isStandardBrowserEnv()){var y=(n.withCredentials||c(v))&&n.xsrfCookieName?o.read(n.xsrfCookieName):void 0;y&&(p[n.xsrfHeaderName]=y)}"setRequestHeader"in h&&t.forEach(p,(function(n,e){void 0===d&&"content-type"===e.toLowerCase()?delete p[e]:h.setRequestHeader(e,n)})),t.isUndefined(n.withCredentials)||(h.withCredentials=!!n.withCredentials),m&&"json"!==m&&(h.responseType=n.responseType),"function"==typeof n.onDownloadProgress&&h.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&h.upload&&h.upload.addEventListener("progress",n.onUploadProgress),n.cancelToken&&n.cancelToken.promise.then((function(n){h&&(h.abort(),r(n),h=null)})),d||(d=null),h.send(d)}))}},function(n,e,r){"use strict";var t=r(113);n.exports=function(n,e,r,a,o){var i=new Error(n);return t(i,e,r,a,o)}},function(n,e,r){"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},function(n,e,r){"use strict";var t=r(3);n.exports=function(n,e){e=e||{};var r={},a=["url","method","data"],o=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],l=["validateStatus"];function s(n,e){return t.isPlainObject(n)&&t.isPlainObject(e)?t.merge(n,e):t.isPlainObject(e)?t.merge({},e):t.isArray(e)?e.slice():e}function c(a){t.isUndefined(e[a])?t.isUndefined(n[a])||(r[a]=s(void 0,n[a])):r[a]=s(n[a],e[a])}t.forEach(a,(function(n){t.isUndefined(e[n])||(r[n]=s(void 0,e[n]))})),t.forEach(o,c),t.forEach(i,(function(a){t.isUndefined(e[a])?t.isUndefined(n[a])||(r[a]=s(void 0,n[a])):r[a]=s(void 0,e[a])})),t.forEach(l,(function(t){t in e?r[t]=s(n[t],e[t]):t in n&&(r[t]=s(void 0,n[t]))}));var u=a.concat(o).concat(i).concat(l),d=Object.keys(n).concat(Object.keys(e)).filter((function(n){return-1===u.indexOf(n)}));return t.forEach(d,c),r}},function(n,e,r){"use strict";function t(n){this.message=n}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,n.exports=t},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){var t=r(174),a=r(179),o=r(250),i=r(258),l=r(267),s=r(268),c=o((function(n){var e=s(n);return l(e)&&(e=void 0),i(t(n,1,l,!0),a(e,2))}));n.exports=c},function(n,e,r){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var t=/["'&<>]/;n.exports=function(n){var e,r=""+n,a=t.exec(r);if(!a)return r;var o="",i=0,l=0;for(i=a.index;i<r.length;i++){switch(r.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}l!==i&&(o+=r.substring(l,i)),l=i+1,o+=e}return l!==i?o+r.substring(l,i):o}},function(n,e){var r=/^\s+|\s+$/g,t=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,l="object"==typeof global&&global&&global.Object===Object&&global,s="object"==typeof self&&self&&self.Object===Object&&self,c=l||s||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(r,"");var l=a.test(n);return l||o.test(n)?i(n.slice(2),l?2:8):t.test(n)?NaN:+n}n.exports=function(n,e,r){var t,a,o,i,l,s,c=0,u=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var r=t,o=a;return t=a=void 0,c=e,i=n.apply(o,r)}function y(n){return c=n,l=setTimeout(w,e),u?b(n):i}function x(n){var r=n-s;return void 0===s||r>=e||r<0||g&&n-c>=o}function w(){var n=m();if(x(n))return k(n);l=setTimeout(w,function(n){var r=e-(n-s);return g?p(r,o-(n-c)):r}(n))}function k(n){return l=void 0,v&&t?b(n):(t=a=void 0,i)}function C(){var n=m(),r=x(n);if(t=arguments,a=this,s=n,r){if(void 0===l)return y(s);if(g)return l=setTimeout(w,e),b(s)}return void 0===l&&(l=setTimeout(w,e)),i}return e=f(e)||0,h(r)&&(u=!!r.leading,o=(g="maxWait"in r)?d(f(r.maxWait)||0,e):o,v="trailing"in r?!!r.trailing:v),C.cancel=function(){void 0!==l&&clearTimeout(l),c=0,t=s=a=l=void 0},C.flush=function(){return void 0===l?i:k(m())},C}},function(n,e,r){!function(){"use strict";n.exports={polyfill:function(){var n=window,e=document;if(!("scrollBehavior"in e.documentElement.style)||!0===n.__forceSmoothScrollPolyfill__){var r,t=n.HTMLElement||n.Element,a={scroll:n.scroll||n.scrollTo,scrollBy:n.scrollBy,elementScroll:t.prototype.scroll||l,scrollIntoView:t.prototype.scrollIntoView},o=n.performance&&n.performance.now?n.performance.now.bind(n.performance):Date.now,i=(r=n.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(r)?1:0);n.scroll=n.scrollTo=function(){void 0!==arguments[0]&&(!0!==s(arguments[0])?h.call(n,e.body,void 0!==arguments[0].left?~~arguments[0].left:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:n.scrollY||n.pageYOffset):a.scroll.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:n.scrollY||n.pageYOffset))},n.scrollBy=function(){void 0!==arguments[0]&&(s(arguments[0])?a.scrollBy.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(n,e.body,~~arguments[0].left+(n.scrollX||n.pageXOffset),~~arguments[0].top+(n.scrollY||n.pageYOffset)))},t.prototype.scroll=t.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==s(arguments[0])){var n=arguments[0].left,e=arguments[0].top;h.call(this,this,void 0===n?this.scrollLeft:~~n,void 0===e?this.scrollTop:~~e)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},t.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==s(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},t.prototype.scrollIntoView=function(){if(!0!==s(arguments[0])){var r=p(this),t=r.getBoundingClientRect(),o=this.getBoundingClientRect();r!==e.body?(h.call(this,r,r.scrollLeft+o.left-t.left,r.scrollTop+o.top-t.top),"fixed"!==n.getComputedStyle(r).position&&n.scrollBy({left:t.left,top:t.top,behavior:"smooth"})):n.scrollBy({left:o.left,top:o.top,behavior:"smooth"})}else a.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function l(n,e){this.scrollLeft=n,this.scrollTop=e}function s(n){if(null===n||"object"!=typeof n||void 0===n.behavior||"auto"===n.behavior||"instant"===n.behavior)return!0;if("object"==typeof n&&"smooth"===n.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+n.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(n,e){return"Y"===e?n.clientHeight+i<n.scrollHeight:"X"===e?n.clientWidth+i<n.scrollWidth:void 0}function u(e,r){var t=n.getComputedStyle(e,null)["overflow"+r];return"auto"===t||"scroll"===t}function d(n){var e=c(n,"Y")&&u(n,"Y"),r=c(n,"X")&&u(n,"X");return e||r}function p(n){for(;n!==e.body&&!1===d(n);)n=n.parentNode||n.host;return n}function m(e){var r,t,a,i,l=(o()-e.startTime)/468;i=l=l>1?1:l,r=.5*(1-Math.cos(Math.PI*i)),t=e.startX+(e.x-e.startX)*r,a=e.startY+(e.y-e.startY)*r,e.method.call(e.scrollable,t,a),t===e.x&&a===e.y||n.requestAnimationFrame(m.bind(n,e))}function h(r,t,i){var s,c,u,d,p=o();r===e.body?(s=n,c=n.scrollX||n.pageXOffset,u=n.scrollY||n.pageYOffset,d=a.scroll):(s=r,c=r.scrollLeft,u=r.scrollTop,d=l),m({scrollable:s,method:d,startTime:p,startX:c,startY:u,x:t,y:i})}}}}()},function(n,e,r){var t=r(285),a=r(290),o=r(110),i=r(15),l=r(293),s=r(294);var c={M:function(n){return n.getMonth()+1},MM:function(n){return p(n.getMonth()+1,2)},Q:function(n){return Math.ceil((n.getMonth()+1)/3)},D:function(n){return n.getDate()},DD:function(n){return p(n.getDate(),2)},DDD:function(n){return t(n)},DDDD:function(n){return p(t(n),3)},d:function(n){return n.getDay()},E:function(n){return n.getDay()||7},W:function(n){return a(n)},WW:function(n){return p(a(n),2)},YY:function(n){return p(n.getFullYear(),4).substr(2)},YYYY:function(n){return p(n.getFullYear(),4)},GG:function(n){return String(o(n)).substr(2)},GGGG:function(n){return o(n)},H:function(n){return n.getHours()},HH:function(n){return p(n.getHours(),2)},h:function(n){var e=n.getHours();return 0===e?12:e>12?e%12:e},hh:function(n){return p(c.h(n),2)},m:function(n){return n.getMinutes()},mm:function(n){return p(n.getMinutes(),2)},s:function(n){return n.getSeconds()},ss:function(n){return p(n.getSeconds(),2)},S:function(n){return Math.floor(n.getMilliseconds()/100)},SS:function(n){return p(Math.floor(n.getMilliseconds()/10),2)},SSS:function(n){return p(n.getMilliseconds(),3)},Z:function(n){return d(n.getTimezoneOffset(),":")},ZZ:function(n){return d(n.getTimezoneOffset())},X:function(n){return Math.floor(n.getTime()/1e3)},x:function(n){return n.getTime()}};function u(n){return n.match(/\[[\s\S]/)?n.replace(/^\[|]$/g,""):n.replace(/\\/g,"")}function d(n,e){e=e||"";var r=n>0?"-":"+",t=Math.abs(n),a=t%60;return r+p(Math.floor(t/60),2)+e+p(a,2)}function p(n,e){for(var r=Math.abs(n).toString();r.length<e;)r="0"+r;return r}n.exports=function(n,e,r){var t=e?String(e):"YYYY-MM-DDTHH:mm:ss.SSSZ",a=(r||{}).locale,o=s.format.formatters,d=s.format.formattingTokensRegExp;a&&a.format&&a.format.formatters&&(o=a.format.formatters,a.format.formattingTokensRegExp&&(d=a.format.formattingTokensRegExp));var p=i(n);return l(p)?function(n,e,r){var t,a,o=n.match(r),i=o.length;for(t=0;t<i;t++)a=e[o[t]]||c[o[t]],o[t]=a||u(o[t]);return function(n){for(var e="",r=0;r<i;r++)o[r]instanceof Function?e+=o[r](n,c):e+=o[r];return e}}(t,o,d)(p):"Invalid Date"}},function(n,e,r){e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+n.exports.humanize(this.diff),!this.useColors)return;const r="color: "+this.color;e.splice(1,0,r,"color: inherit");let t=0,a=0;e[0].replace(/%[a-zA-Z%]/g,n=>{"%%"!==n&&(t++,"%c"===n&&(a=t))}),e.splice(a,0,r)},e.save=function(n){try{n?e.storage.setItem("debug",n):e.storage.removeItem("debug")}catch(n){}},e.load=function(){let n;try{n=e.storage.getItem("debug")}catch(n){}!n&&"undefined"!=typeof process&&"env"in process&&(n=process.env.DEBUG);return n},e.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},e.storage=function(){try{return localStorage}catch(n){}}(),e.destroy=(()=>{let n=!1;return()=>{n||(n=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.log=console.debug||console.log||(()=>{}),n.exports=r(319)(e);const{formatters:t}=n.exports;t.j=function(n){try{return JSON.stringify(n)}catch(n){return"[UnexpectedJSONParseError]: "+n.message}}},function(n,e,r){"use strict";var t=r(21),a=r(4),o=r(145),i=r(163),l=a.WebAssembly,s=7!==new Error("e",{cause:7}).cause,c=function(n,e){var r={};r[n]=i(n,e,s),t({global:!0,constructor:!0,arity:1,forced:s},r)},u=function(n,e){if(l&&l[n]){var r={};r[n]=i("WebAssembly."+n,e,s),t({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:s},r)}};c("Error",(function(n){return function(e){return o(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return o(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return o(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return o(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return o(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return o(n,this,arguments)}})),c("URIError",(function(n){return function(e){return o(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return o(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return o(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return o(n,this,arguments)}}))},function(n,e,r){"use strict";var t=r(7),a=r(17),o=r(130),i=r(48);n.exports=function(n,e,r,l){l||(l={});var s=l.enumerable,c=void 0!==l.name?l.name:e;if(t(r)&&o(r,c,l),l.global)s?n[e]=r:i(e,r);else{try{l.unsafe?n[e]&&(s=!0):delete n[e]}catch(n){}s?n[e]=r:a.f(n,e,{value:r,enumerable:!1,configurable:!l.nonConfigurable,writable:!l.nonWritable})}return n}},function(n,e,r){"use strict";var t=r(5),a=r(6),o=r(7),i=r(13),l=r(8),s=r(143).CONFIGURABLE,c=r(144),u=r(131),d=u.enforce,p=u.get,m=String,h=Object.defineProperty,f=t("".slice),g=t("".replace),v=t([].join),b=l&&!a((function(){return 8!==h((function(){}),"length",{value:8}).length})),y=String(String).split("String"),x=n.exports=function(n,e,r){"Symbol("===f(m(e),0,7)&&(e="["+g(m(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),r&&r.getter&&(e="get "+e),r&&r.setter&&(e="set "+e),(!i(n,"name")||s&&n.name!==e)&&(l?h(n,"name",{value:e,configurable:!0}):n.name=e),b&&r&&i(r,"arity")&&n.length!==r.arity&&h(n,"length",{value:r.arity});try{r&&i(r,"constructor")&&r.constructor?l&&h(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var t=d(n);return i(t,"source")||(t.source=v(y,"string"==typeof e?e:"")),n};Function.prototype.toString=x((function(){return o(this)&&p(this).source||c(this)}),"toString")},function(n,e,r){"use strict";var t,a,o,i=r(153),l=r(4),s=r(10),c=r(22),u=r(13),d=r(47),p=r(71),m=r(46),h=l.TypeError,f=l.WeakMap;if(i||d.state){var g=d.state||(d.state=new f);g.get=g.get,g.has=g.has,g.set=g.set,t=function(n,e){if(g.has(n))throw new h("Object already initialized");return e.facade=n,g.set(n,e),e},a=function(n){return g.get(n)||{}},o=function(n){return g.has(n)}}else{var v=p("state");m[v]=!0,t=function(n,e){if(u(n,v))throw new h("Object already initialized");return e.facade=n,c(n,v,e),e},a=function(n){return u(n,v)?n[v]:{}},o=function(n){return u(n,v)}}n.exports={set:t,get:a,has:o,enforce:function(n){return o(n)?a(n):t(n,{})},getterFor:function(n){return function(e){var r;if(!s(e)||(r=a(e)).type!==n)throw new h("Incompatible receiver, "+n+" required");return r}}}},function(n,e,r){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,r){"use strict";var t=r(29);n.exports=Array.isArray||function(n){return"Array"===t(n)}},function(n,e,r){"use strict";var t,a=r(30),o=r(148),i=r(49),l=r(46),s=r(278),c=r(75),u=r(71),d=u("IE_PROTO"),p=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},f=function(){try{t=new ActiveXObject("htmlfile")}catch(n){}var n,e;f="undefined"!=typeof document?document.domain&&t?h(t):((e=c("iframe")).style.display="none",s.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):h(t);for(var r=i.length;r--;)delete f.prototype[i[r]];return f()};l[d]=!0,n.exports=Object.create||function(n,e){var r;return null!==n?(p.prototype=a(n),r=new p,p.prototype=null,r[d]=n):r=f(),void 0===e?r:o.f(r,e)}},function(n,e,r){"use strict";var t={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!t.call({1:2},1);e.f=o?function(n){var e=a(this,n);return!!e&&e.enumerable}:t},function(n,e,r){"use strict";var t=r(82),a=r(49).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return t(n,a)}},function(n,e,r){"use strict";var t=r(138),a=r(7),o=r(29),i=r(26)("toStringTag"),l=Object,s="Arguments"===o(function(){return arguments}());n.exports=t?o:function(n){var e,r,t;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(r=function(n,e){try{return n[e]}catch(n){}}(e=l(n),i))?r:s?o(e):"Object"===(t=o(e))&&a(e.callee)?"Arguments":t}},function(n,e,r){"use strict";var t={};t[r(26)("toStringTag")]="z",n.exports="[object z]"===String(t)},function(n,e,r){"use strict";var t=r(26),a=r(134),o=r(17).f,i=t("unscopables"),l=Array.prototype;void 0===l[i]&&o(l,i,{configurable:!0,value:a(null)}),n.exports=function(n){l[i][n]=!0}},function(n,e,r){"use strict";var t=r(82),a=r(49);n.exports=Object.keys||function(n){return t(n,a)}},function(n,e,r){"use strict";var t=r(44),a=r(78);n.exports=function(n,e){var r=n[e];return a(r)?void 0:t(r)}},function(n,e,r){"use strict";var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,r){"use strict";var t=r(8),a=r(13),o=Function.prototype,i=t&&Object.getOwnPropertyDescriptor,l=a(o,"name"),s=l&&"something"===function(){}.name,c=l&&(!t||t&&i(o,"name").configurable);n.exports={EXISTS:l,PROPER:s,CONFIGURABLE:c}},function(n,e,r){"use strict";var t=r(5),a=r(7),o=r(47),i=t(Function.toString);a(o.inspectSource)||(o.inspectSource=function(n){return i(n)}),n.exports=o.inspectSource},function(n,e,r){"use strict";var t=r(45),a=Function.prototype,o=a.apply,i=a.call;n.exports="object"==typeof Reflect&&Reflect.apply||(t?i.bind(o):function(){return i.apply(o,arguments)})},function(n,e,r){"use strict";var t=r(5),a=r(44);n.exports=function(n,e,r){try{return t(a(Object.getOwnPropertyDescriptor(n,e)[r]))}catch(n){}}},function(n,e,r){"use strict";var t=TypeError;n.exports=function(n){if(n>9007199254740991)throw t("Maximum allowed index exceeded");return n}},function(n,e,r){"use strict";var t=r(8),a=r(81),o=r(17),i=r(30),l=r(31),s=r(140);e.f=t&&!a?Object.defineProperties:function(n,e){i(n);for(var r,t=l(e),a=s(e),c=a.length,u=0;c>u;)o.f(n,r=a[u++],t[r]);return n}},function(n,e,r){n.exports=r(324)},function(n,e,r){"use strict";var t=r(42),a=r(10),o=r(68),i=r(141),l=r(152),s=r(26),c=TypeError,u=s("toPrimitive");n.exports=function(n,e){if(!a(n)||o(n))return n;var r,s=i(n,u);if(s){if(void 0===e&&(e="default"),r=t(s,n,e),!a(r)||o(r))return r;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),l(n,e)}},function(n,e,r){"use strict";n.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(n,e,r){"use strict";var t=r(42),a=r(7),o=r(10),i=TypeError;n.exports=function(n,e){var r,l;if("string"===e&&a(r=n.toString)&&!o(l=t(r,n)))return l;if(a(r=n.valueOf)&&!o(l=t(r,n)))return l;if("string"!==e&&a(r=n.toString)&&!o(l=t(r,n)))return l;throw new i("Can't convert object to primitive value")}},function(n,e,r){"use strict";var t=r(4),a=r(7),o=t.WeakMap;n.exports=a(o)&&/native code/.test(String(o))},function(n,e,r){"use strict";var t=r(27),a=r(5),o=r(136),i=r(132),l=r(30),s=a([].concat);n.exports=t("Reflect","ownKeys")||function(n){var e=o.f(l(n)),r=i.f;return r?s(e,r(n)):e}},function(n,e,r){"use strict";var t=r(31),a=r(156),o=r(32),i=function(n){return function(e,r,i){var l=t(e),s=o(l);if(0===s)return!n&&-1;var c,u=a(i,s);if(n&&r!=r){for(;s>u;)if((c=l[u++])!=c)return!0}else for(;s>u;u++)if((n||u in l)&&l[u]===r)return n||u||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,r){"use strict";var t=r(33),a=Math.max,o=Math.min;n.exports=function(n,e){var r=t(n);return r<0?a(r+e,0):o(r,e)}},function(n,e,r){"use strict";var t=Math.ceil,a=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?a:t)(e)}},function(n,e,r){"use strict";var t=r(33),a=Math.min;n.exports=function(n){var e=t(n);return e>0?a(e,9007199254740991):0}},function(n,e,r){"use strict";var t=r(6),a=r(7),o=/#|\.prototype\./,i=function(n,e){var r=s[l(n)];return r===u||r!==c&&(a(e)?t(e):!!e)},l=i.normalize=function(n){return String(n).replace(o,".").toLowerCase()},s=i.data={},c=i.NATIVE="N",u=i.POLYFILL="P";n.exports=i},function(n,e,r){"use strict";var t=r(44),a=r(28),o=r(67),i=r(32),l=TypeError,s="Reduce of empty array with no initial value",c=function(n){return function(e,r,c,u){var d=a(e),p=o(d),m=i(d);if(t(r),0===m&&c<2)throw new l(s);var h=n?m-1:0,f=n?-1:1;if(c<2)for(;;){if(h in p){u=p[h],h+=f;break}if(h+=f,n?h<0:m<=h)throw new l(s)}for(;n?h>=0:m>h;h+=f)h in p&&(u=r(u,p[h],h,d));return u}};n.exports={left:c(!1),right:c(!0)}},function(n,e,r){"use strict";var t=r(6);n.exports=function(n,e){var r=[][n];return!!r&&t((function(){r.call(null,e||function(){return 1},1)}))}},function(n,e,r){"use strict";var t=r(4),a=r(29);n.exports="process"===a(t.process)},function(n,e,r){"use strict";var t=r(27),a=r(13),o=r(22),i=r(69),l=r(77),s=r(76),c=r(166),u=r(167),d=r(168),p=r(169),m=r(170),h=r(8),f=r(65);n.exports=function(n,e,r,g){var v=g?2:1,b=n.split("."),y=b[b.length-1],x=t.apply(null,b);if(x){var w=x.prototype;if(!f&&a(w,"cause")&&delete w.cause,!r)return x;var k=t("Error"),C=e((function(n,e){var r=d(g?e:n,void 0),t=g?new x(n):new x;return void 0!==r&&o(t,"message",r),m(t,C,t.stack,2),this&&i(w,this)&&u(t,this,C),arguments.length>v&&p(t,arguments[v]),t}));if(C.prototype=w,"Error"!==y?l?l(C,k):s(C,k,{name:!0}):h&&"stackTraceLimit"in x&&(c(C,x,"stackTraceLimit"),c(C,x,"prepareStackTrace")),s(C,x),!f)try{w.name!==y&&o(w,"name",y),w.constructor=C}catch(n){}return C}}},function(n,e,r){"use strict";var t=r(165),a=String,o=TypeError;n.exports=function(n){if(t(n))return n;throw new o("Can't set "+a(n)+" as a prototype")}},function(n,e,r){"use strict";var t=r(10);n.exports=function(n){return t(n)||null===n}},function(n,e,r){"use strict";var t=r(17).f;n.exports=function(n,e,r){r in n||t(n,r,{configurable:!0,get:function(){return e[r]},set:function(n){e[r]=n}})}},function(n,e,r){"use strict";var t=r(7),a=r(10),o=r(77);n.exports=function(n,e,r){var i,l;return o&&t(i=e.constructor)&&i!==r&&a(l=i.prototype)&&l!==r.prototype&&o(n,l),n}},function(n,e,r){"use strict";var t=r(62);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:t(n)}},function(n,e,r){"use strict";var t=r(10),a=r(22);n.exports=function(n,e){t(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,r){"use strict";var t=r(22),a=r(171),o=r(172),i=Error.captureStackTrace;n.exports=function(n,e,r,l){o&&(i?i(n,e):t(n,"stack",a(r,l)))}},function(n,e,r){"use strict";var t=r(5),a=Error,o=t("".replace),i=String(new a("zxcasd").stack),l=/\n\s*at [^:]*:[^\n]*/,s=l.test(i);n.exports=function(n,e){if(s&&"string"==typeof n&&!a.prepareStackTrace)for(;e--;)n=o(n,l,"");return n}},function(n,e,r){"use strict";var t=r(6),a=r(43);n.exports=!t((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,r){"use strict";var t=r(8),a=r(133),o=TypeError,i=Object.getOwnPropertyDescriptor,l=t&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=l?function(n,e){if(a(n)&&!i(n,"length").writable)throw new o("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,r){var t=r(83),a=r(175);n.exports=function n(e,r,o,i,l){var s=-1,c=e.length;for(o||(o=a),l||(l=[]);++s<c;){var u=e[s];r>0&&o(u)?r>1?n(u,r-1,o,i,l):t(l,u):i||(l[l.length]=u)}return l}},function(n,e,r){var t=r(23),a=r(50),o=r(12),i=t?t.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||a(n)||!!(i&&n&&n[i])}},function(n,e,r){var t=r(24),a=r(19);n.exports=function(n){return a(n)&&"[object Arguments]"==t(n)}},function(n,e,r){var t=r(23),a=Object.prototype,o=a.hasOwnProperty,i=a.toString,l=t?t.toStringTag:void 0;n.exports=function(n){var e=o.call(n,l),r=n[l];try{n[l]=void 0;var t=!0}catch(n){}var a=i.call(n);return t&&(e?n[l]=r:delete n[l]),a}},function(n,e){var r=Object.prototype.toString;n.exports=function(n){return r.call(n)}},function(n,e,r){var t=r(180),a=r(236),o=r(58),i=r(12),l=r(247);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?i(n)?a(n[0],n[1]):t(n):l(n)}},function(n,e,r){var t=r(181),a=r(235),o=r(100);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?o(e[0][0],e[0][1]):function(r){return r===n||t(r,n,e)}}},function(n,e,r){var t=r(85),a=r(89);n.exports=function(n,e,r,o){var i=r.length,l=i,s=!o;if(null==n)return!l;for(n=Object(n);i--;){var c=r[i];if(s&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<l;){var u=(c=r[i])[0],d=n[u],p=c[1];if(s&&c[2]){if(void 0===d&&!(u in n))return!1}else{var m=new t;if(o)var h=o(d,p,u,n,e,m);if(!(void 0===h?a(p,d,3,o,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,r){var t=r(36),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,r=t(e,n);return!(r<0)&&(r==e.length-1?e.pop():a.call(e,r,1),--this.size,!0)}},function(n,e,r){var t=r(36);n.exports=function(n){var e=this.__data__,r=t(e,n);return r<0?void 0:e[r][1]}},function(n,e,r){var t=r(36);n.exports=function(n){return t(this.__data__,n)>-1}},function(n,e,r){var t=r(36);n.exports=function(n,e){var r=this.__data__,a=t(r,n);return a<0?(++this.size,r.push([n,e])):r[a][1]=e,this}},function(n,e,r){var t=r(35);n.exports=function(){this.__data__=new t,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,r=e.delete(n);return this.size=e.size,r}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,r){var t=r(35),a=r(51),o=r(53);n.exports=function(n,e){var r=this.__data__;if(r instanceof t){var i=r.__data__;if(!a||i.length<199)return i.push([n,e]),this.size=++r.size,this;r=this.__data__=new o(i)}return r.set(n,e),this.size=r.size,this}},function(n,e,r){var t=r(87),a=r(193),o=r(52),i=r(88),l=/^\[object .+?Constructor\]$/,s=Function.prototype,c=Object.prototype,u=s.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||a(n))&&(t(n)?p:l).test(i(n))}},function(n,e,r){var t,a=r(194),o=(t=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+t:"";n.exports=function(n){return!!o&&o in n}},function(n,e,r){var t=r(11)["__core-js_shared__"];n.exports=t},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,r){var t=r(197),a=r(35),o=r(51);n.exports=function(){this.size=0,this.__data__={hash:new t,map:new(o||a),string:new t}}},function(n,e,r){var t=r(198),a=r(199),o=r(200),i=r(201),l=r(202);function s(n){var e=-1,r=null==n?0:n.length;for(this.clear();++e<r;){var t=n[e];this.set(t[0],t[1])}}s.prototype.clear=t,s.prototype.delete=a,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,n.exports=s},function(n,e,r){var t=r(37);n.exports=function(){this.__data__=t?t(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,r){var t=r(37),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(t){var r=e[n];return"__lodash_hash_undefined__"===r?void 0:r}return a.call(e,n)?e[n]:void 0}},function(n,e,r){var t=r(37),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return t?void 0!==e[n]:a.call(e,n)}},function(n,e,r){var t=r(37);n.exports=function(n,e){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=t&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,r){var t=r(38);n.exports=function(n){var e=t(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,r){var t=r(38);n.exports=function(n){return t(this,n).get(n)}},function(n,e,r){var t=r(38);n.exports=function(n){return t(this,n).has(n)}},function(n,e,r){var t=r(38);n.exports=function(n,e){var r=t(this,n),a=r.size;return r.set(n,e),this.size+=r.size==a?0:1,this}},function(n,e,r){var t=r(85),a=r(90),o=r(212),i=r(215),l=r(231),s=r(12),c=r(94),u=r(96),d="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,r,m,h,f){var g=s(n),v=s(e),b=g?"[object Array]":l(n),y=v?"[object Array]":l(e),x=(b="[object Arguments]"==b?d:b)==d,w=(y="[object Arguments]"==y?d:y)==d,k=b==y;if(k&&c(n)){if(!c(e))return!1;g=!0,x=!1}if(k&&!x)return f||(f=new t),g||u(n)?a(n,e,r,m,h,f):o(n,e,b,r,m,h,f);if(!(1&r)){var C=x&&p.call(n,"__wrapped__"),_=w&&p.call(e,"__wrapped__");if(C||_){var D=C?n.value():n,S=_?e.value():e;return f||(f=new t),h(D,S,r,m,f)}}return!!k&&(f||(f=new t),i(n,e,r,m,h,f))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var r=-1,t=null==n?0:n.length;++r<t;)if(e(n[r],r,n))return!0;return!1}},function(n,e,r){var t=r(23),a=r(213),o=r(86),i=r(90),l=r(214),s=r(54),c=t?t.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,r,t,c,d,p){switch(r){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=l;case"[object Set]":var h=1&t;if(m||(m=s),n.size!=e.size&&!h)return!1;var f=p.get(n);if(f)return f==e;t|=2,p.set(n,e);var g=i(m(n),m(e),t,c,d,p);return p.delete(n),g;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,r){var t=r(11).Uint8Array;n.exports=t},function(n,e){n.exports=function(n){var e=-1,r=Array(n.size);return n.forEach((function(n,t){r[++e]=[t,n]})),r}},function(n,e,r){var t=r(216),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,r,o,i,l){var s=1&r,c=t(n),u=c.length;if(u!=t(e).length&&!s)return!1;for(var d=u;d--;){var p=c[d];if(!(s?p in e:a.call(e,p)))return!1}var m=l.get(n),h=l.get(e);if(m&&h)return m==e&&h==n;var f=!0;l.set(n,e),l.set(e,n);for(var g=s;++d<u;){var v=n[p=c[d]],b=e[p];if(o)var y=s?o(b,v,p,e,n,l):o(v,b,p,n,e,l);if(!(void 0===y?v===b||i(v,b,r,o,l):y)){f=!1;break}g||(g="constructor"==p)}if(f&&!g){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(f=!1)}return l.delete(n),l.delete(e),f}},function(n,e,r){var t=r(217),a=r(218),o=r(93);n.exports=function(n){return t(n,o,a)}},function(n,e,r){var t=r(83),a=r(12);n.exports=function(n,e,r){var o=e(n);return a(n)?o:t(o,r(n))}},function(n,e,r){var t=r(219),a=r(220),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,l=i?function(n){return null==n?[]:(n=Object(n),t(i(n),(function(e){return o.call(n,e)})))}:a;n.exports=l},function(n,e){n.exports=function(n,e){for(var r=-1,t=null==n?0:n.length,a=0,o=[];++r<t;){var i=n[r];e(i,r,n)&&(o[a++]=i)}return o}},function(n,e){n.exports=function(){return[]}},function(n,e,r){var t=r(222),a=r(50),o=r(12),i=r(94),l=r(95),s=r(96),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var r=o(n),u=!r&&a(n),d=!r&&!u&&i(n),p=!r&&!u&&!d&&s(n),m=r||u||d||p,h=m?t(n.length,String):[],f=h.length;for(var g in n)!e&&!c.call(n,g)||m&&("length"==g||d&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||l(g,f))||h.push(g);return h}},function(n,e){n.exports=function(n,e){for(var r=-1,t=Array(n);++r<n;)t[r]=e(r);return t}},function(n,e){n.exports=function(){return!1}},function(n,e,r){var t=r(24),a=r(55),o=r(19),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&a(n.length)&&!!i[t(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,r){(function(n){var t=r(84),a=e&&!e.nodeType&&e,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===a&&t.process,l=function(){try{var n=o&&o.require&&o.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=l}).call(this,r(72)(n))},function(n,e,r){var t=r(228),a=r(229),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!t(n))return a(n);var e=[];for(var r in Object(n))o.call(n,r)&&"constructor"!=r&&e.push(r);return e}},function(n,e){var r=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||r)}},function(n,e,r){var t=r(230)(Object.keys,Object);n.exports=t},function(n,e){n.exports=function(n,e){return function(r){return n(e(r))}}},function(n,e,r){var t=r(232),a=r(51),o=r(233),i=r(98),l=r(234),s=r(24),c=r(88),u=c(t),d=c(a),p=c(o),m=c(i),h=c(l),f=s;(t&&"[object DataView]"!=f(new t(new ArrayBuffer(1)))||a&&"[object Map]"!=f(new a)||o&&"[object Promise]"!=f(o.resolve())||i&&"[object Set]"!=f(new i)||l&&"[object WeakMap]"!=f(new l))&&(f=function(n){var e=s(n),r="[object Object]"==e?n.constructor:void 0,t=r?c(r):"";if(t)switch(t){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=f},function(n,e,r){var t=r(14)(r(11),"DataView");n.exports=t},function(n,e,r){var t=r(14)(r(11),"Promise");n.exports=t},function(n,e,r){var t=r(14)(r(11),"WeakMap");n.exports=t},function(n,e,r){var t=r(99),a=r(93);n.exports=function(n){for(var e=a(n),r=e.length;r--;){var o=e[r],i=n[o];e[r]=[o,i,t(i)]}return e}},function(n,e,r){var t=r(89),a=r(237),o=r(244),i=r(56),l=r(99),s=r(100),c=r(39);n.exports=function(n,e){return i(n)&&l(e)?s(c(n),e):function(r){var i=a(r,n);return void 0===i&&i===e?o(r,n):t(e,i,3)}}},function(n,e,r){var t=r(101);n.exports=function(n,e,r){var a=null==n?void 0:t(n,e);return void 0===a?r:a}},function(n,e,r){var t=r(239),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=t((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,r,t,a){e.push(t?a.replace(o,"$1"):r||n)})),e}));n.exports=i},function(n,e,r){var t=r(240);n.exports=function(n){var e=t(n,(function(n){return 500===r.size&&r.clear(),n})),r=e.cache;return e}},function(n,e,r){var t=r(53);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var r=function(){var t=arguments,a=e?e.apply(this,t):t[0],o=r.cache;if(o.has(a))return o.get(a);var i=n.apply(this,t);return r.cache=o.set(a,i)||o,i};return r.cache=new(a.Cache||t),r}a.Cache=t,n.exports=a},function(n,e,r){var t=r(242);n.exports=function(n){return null==n?"":t(n)}},function(n,e,r){var t=r(23),a=r(243),o=r(12),i=r(57),l=t?t.prototype:void 0,s=l?l.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(o(e))return a(e,n)+"";if(i(e))return s?s.call(e):"";var r=e+"";return"0"==r&&1/e==-1/0?"-0":r}},function(n,e){n.exports=function(n,e){for(var r=-1,t=null==n?0:n.length,a=Array(t);++r<t;)a[r]=e(n[r],r,n);return a}},function(n,e,r){var t=r(245),a=r(246);n.exports=function(n,e){return null!=n&&a(n,e,t)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,r){var t=r(102),a=r(50),o=r(12),i=r(95),l=r(55),s=r(39);n.exports=function(n,e,r){for(var c=-1,u=(e=t(e,n)).length,d=!1;++c<u;){var p=s(e[c]);if(!(d=null!=n&&r(n,p)))break;n=n[p]}return d||++c!=u?d:!!(u=null==n?0:n.length)&&l(u)&&i(p,u)&&(o(n)||a(n))}},function(n,e,r){var t=r(248),a=r(249),o=r(56),i=r(39);n.exports=function(n){return o(n)?t(i(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,r){var t=r(101);n.exports=function(n){return function(e){return t(e,n)}}},function(n,e,r){var t=r(58),a=r(251),o=r(253);n.exports=function(n,e){return o(a(n,e,t),n+"")}},function(n,e,r){var t=r(252),a=Math.max;n.exports=function(n,e,r){return e=a(void 0===e?n.length-1:e,0),function(){for(var o=arguments,i=-1,l=a(o.length-e,0),s=Array(l);++i<l;)s[i]=o[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=o[i];return c[e]=r(s),t(n,this,c)}}},function(n,e){n.exports=function(n,e,r){switch(r.length){case 0:return n.call(e);case 1:return n.call(e,r[0]);case 2:return n.call(e,r[0],r[1]);case 3:return n.call(e,r[0],r[1],r[2])}return n.apply(e,r)}},function(n,e,r){var t=r(254),a=r(257)(t);n.exports=a},function(n,e,r){var t=r(255),a=r(256),o=r(58),i=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:t(e),writable:!0})}:o;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,r){var t=r(14),a=function(){try{var n=t(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var r=Date.now;n.exports=function(n){var e=0,t=0;return function(){var a=r(),o=16-(a-t);if(t=a,o>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,r){var t=r(91),a=r(259),o=r(264),i=r(92),l=r(265),s=r(54);n.exports=function(n,e,r){var c=-1,u=a,d=n.length,p=!0,m=[],h=m;if(r)p=!1,u=o;else if(d>=200){var f=e?null:l(n);if(f)return s(f);p=!1,u=i,h=new t}else h=e?[]:m;n:for(;++c<d;){var g=n[c],v=e?e(g):g;if(g=r||0!==g?g:0,p&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),m.push(g)}else u(h,v,r)||(h!==m&&h.push(v),m.push(g))}return m}},function(n,e,r){var t=r(260);n.exports=function(n,e){return!!(null==n?0:n.length)&&t(n,e,0)>-1}},function(n,e,r){var t=r(261),a=r(262),o=r(263);n.exports=function(n,e,r){return e==e?o(n,e,r):t(n,a,r)}},function(n,e){n.exports=function(n,e,r,t){for(var a=n.length,o=r+(t?1:-1);t?o--:++o<a;)if(e(n[o],o,n))return o;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,r){for(var t=r-1,a=n.length;++t<a;)if(n[t]===e)return t;return-1}},function(n,e){n.exports=function(n,e,r){for(var t=-1,a=null==n?0:n.length;++t<a;)if(r(e,n[t]))return!0;return!1}},function(n,e,r){var t=r(98),a=r(266),o=r(54),i=t&&1/o(new t([,-0]))[1]==1/0?function(n){return new t(n)}:a;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,r){var t=r(97),a=r(19);n.exports=function(n){return a(n)&&t(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,r){},function(n,e,r){"use strict";r(103)},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){},function(n,e,r){"use strict";r(104)},function(n,e,r){"use strict";var t=r(21),a=r(28),o=r(32),i=r(33),l=r(139);t({target:"Array",proto:!0},{at:function(n){var e=a(this),r=o(e),t=i(n),l=t>=0?t:r+t;return l<0||l>=r?void 0:e[l]}}),l("at")},function(n,e,r){"use strict";var t=r(27);n.exports=t("document","documentElement")},function(n,e,r){"use strict";var t=r(21),a=r(5),o=r(34),i=r(33),l=r(62),s=r(6),c=a("".charAt);t({target:"String",proto:!0,forced:s((function(){return"\ud842"!=="𠮷".at(-2)}))},{at:function(n){var e=l(o(this)),r=e.length,t=i(n),a=t>=0?t:r+t;return a<0||a>=r?void 0:c(e,a)}})},function(n,e,r){"use strict";r(105)},function(n,e,r){
/*!
 * Valine v1.5.1
 * (c) 2017-2022 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2022-7-21 3:43:59 ├F10: PM┤
 */
n.exports=function(n){function e(t){if(r[t])return r[t].exports;var a=r[t]={i:t,l:!1,exports:{}};return n[t].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var r={};return e.m=n,e.c=r,e.i=function(n){return n},e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{configurable:!1,enumerable:!0,get:t})},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,"a",r),r},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=108)}([function(n,e,r){"use strict";var t=SyntaxError,a=Function,o=TypeError,i=function(n){try{return a('"use strict"; return ('+n+").constructor;")()}catch(n){}},l=Object.getOwnPropertyDescriptor;if(l)try{l({},"")}catch(n){l=null}var s=function(){throw new o},c=l?function(){try{return s}catch(n){try{return l(arguments,"callee").get}catch(n){return s}}}():s,u=r(22)(),d=Object.getPrototypeOf||function(n){return n.__proto__},p={},m="undefined"==typeof Uint8Array?void 0:d(Uint8Array),h={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":u?d([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":p,"%AsyncGenerator%":p,"%AsyncGeneratorFunction%":p,"%AsyncIteratorPrototype%":p,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":a,"%GeneratorFunction%":p,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":u?d(d([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&u?d((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&u?d((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":u?d(""[Symbol.iterator]()):void 0,"%Symbol%":u?Symbol:void 0,"%SyntaxError%":t,"%ThrowTypeError%":c,"%TypedArray%":m,"%TypeError%":o,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},f=function n(e){var r;if("%AsyncFunction%"===e)r=i("async function () {}");else if("%GeneratorFunction%"===e)r=i("function* () {}");else if("%AsyncGeneratorFunction%"===e)r=i("async function* () {}");else if("%AsyncGenerator%"===e){var t=n("%AsyncGeneratorFunction%");t&&(r=t.prototype)}else if("%AsyncIteratorPrototype%"===e){var a=n("%AsyncGenerator%");a&&(r=d(a.prototype))}return h[e]=r,r},g={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},v=r(9),b=r(25),y=v.call(Function.call,Array.prototype.concat),x=v.call(Function.apply,Array.prototype.splice),w=v.call(Function.call,String.prototype.replace),k=v.call(Function.call,String.prototype.slice),C=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,_=/\\(\\)?/g,D=function(n){var e=k(n,0,1),r=k(n,-1);if("%"===e&&"%"!==r)throw new t("invalid intrinsic syntax, expected closing `%`");if("%"===r&&"%"!==e)throw new t("invalid intrinsic syntax, expected opening `%`");var a=[];return w(n,C,(function(n,e,r,t){a[a.length]=r?w(t,_,"$1"):e||n})),a},S=function(n,e){var r,a=n;if(b(g,a)&&(a="%"+(r=g[a])[0]+"%"),b(h,a)){var i=h[a];if(i===p&&(i=f(a)),void 0===i&&!e)throw new o("intrinsic "+n+" exists, but is not available. Please file an issue!");return{alias:r,name:a,value:i}}throw new t("intrinsic "+n+" does not exist!")};n.exports=function(n,e){if("string"!=typeof n||0===n.length)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new o('"allowMissing" argument must be a boolean');var r=D(n),a=r.length>0?r[0]:"",i=S("%"+a+"%",e),s=i.name,c=i.value,u=!1,d=i.alias;d&&(a=d[0],x(r,y([0,1],d)));for(var p=1,m=!0;p<r.length;p+=1){var f=r[p],g=k(f,0,1),v=k(f,-1);if(('"'===g||"'"===g||"`"===g||'"'===v||"'"===v||"`"===v)&&g!==v)throw new t("property names with quotes must have matching quotes");if("constructor"!==f&&m||(u=!0),b(h,s="%"+(a+="."+f)+"%"))c=h[s];else if(null!=c){if(!(f in c)){if(!e)throw new o("base intrinsic for "+n+" exists, but the property is not available.");return}if(l&&p+1>=r.length){var w=l(c,f);c=(m=!!w)&&"get"in w&&!("originalValue"in w.get)?w.get:c[f]}else m=b(c,f),c=c[f];m&&!u&&(h[s]=c)}}return c}},function(n,e,r){"use strict";var t=r(0),a=r(4),o=a(t("String.prototype.indexOf"));n.exports=function(n,e){var r=t(n,!!e);return"function"==typeof r&&o(n,".prototype.")>-1?a(r):r}},function(n,e,r){"use strict";var t=r(88),a="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,i=Array.prototype.concat,l=Object.defineProperty,s=l&&function(){var n={};try{for(var e in l(n,"x",{enumerable:!1,value:n}),n)return!1;return n.x===n}catch(n){return!1}}(),c=function(n,e,r,t){(!(e in n)||function(n){return"function"==typeof n&&"[object Function]"===o.call(n)}(t)&&t())&&(s?l(n,e,{configurable:!0,enumerable:!1,value:r,writable:!0}):n[e]=r)},u=function(n,e){var r=arguments.length>2?arguments[2]:{},o=t(e);a&&(o=i.call(o,Object.getOwnPropertySymbols(e)));for(var l=0;l<o.length;l+=1)c(n,o[l],e[o[l]],r[o[l]])};u.supportsDescriptors=!!s,n.exports=u},function(n,e,r){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},o=t(r(85)),i=t(r(49)),l=t(r(46)),s=t(r(48)),c=t(r(45)),u=document,d=navigator,p=/[&<>"'`\\]/g,m=RegExp(p.source),h=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,f=RegExp(h.source),g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},v={};for(var b in g)v[g[b]]=b;var y=null;Array.prototype.forEach||(Array.prototype.forEach=function(n,e){var r,t;if(null==this)throw new TypeError(" this is null or not defined");var a=Object(this),o=a.length>>>0;if("function"!=typeof n)throw new TypeError(n+" is not a function");for(arguments.length>1&&(r=e),t=0;t<o;){var i;t in a&&(i=a[t],n.call(r,i,t,a)),t++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,o.default)(i.default.fn,{prepend:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("afterBegin",n)})),this},append:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("beforeEnd",n)})),this},remove:function(){return this.forEach((function(n){try{n.parentNode.removeChild(n)}catch(n){}})),this},find:function(n){return(0,i.default)(n,this)},show:function(){return this.forEach((function(n){n.style.display="block"})),this},hide:function(){return this.forEach((function(n){n.style.display="none"})),this},on:function(n,e,r){return i.default.fn.off(n,e,r),this.forEach((function(t){n.split(" ").forEach((function(n){t.addEventListener?t.addEventListener(n,e,r||!1):t.attachEvent?t.attachEvent("on"+n,e):t["on"+n]=e}))})),this},off:function(n,e,r){return this.forEach((function(t){n.split(" ").forEach((function(n){t.removeEventListener?t.removeEventListener(n,e,r||!1):t.detachEvent?t.detachEvent("on"+n,e):t["on"+n]=null}))})),this},html:function(n){return void 0!==n?(this.forEach((function(e){e.innerHTML=n})),this):this[0].innerHTML},text:function(n){return void 0!==n?(this.forEach((function(e){e.innerText=n})),this):this[0].innerText},empty:function(n){return n=n||0,this.forEach((function(e){setTimeout((function(n){e.innerText=""}),n)})),this},val:function(n){return void 0!==n?(this.forEach((function(e){e.value=n})),this):this[0].value||""},attr:function(){var n=arguments;if("object"==a(arguments[0])){var e=arguments[0],r=this;return Object.keys(e).forEach((function(n){r.forEach((function(r){r.setAttribute(n,e[n])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(e){e.setAttribute(n[0],n[1])})),this)},removeAttr:function(n){return this.forEach((function(e){var r,t=0,a=n&&n.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(a&&1===e.nodeType)for(;r=a[t++];)e.removeAttribute(r)})),this},hasClass:function(n){return!!this[0]&&new RegExp("(\\s|^)"+n+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(n){return this.forEach((function(e){var r=(0,i.default)(e),t=r.attr("class");r.hasClass(n)||r.attr("class",t+=" "+n)})),this},removeClass:function(n){return this.forEach((function(e){var r=(0,i.default)(e),t=r.attr("class");if(r.hasClass(n)){var a=new RegExp("(\\s|^)"+n+"(\\s|$)");r.attr("class",t.replace(a,""))}})),this}}),(0,o.default)(i.default,{extend:o.default,noop:function(){},navi:d,ua:d.userAgent,lang:d.language||d.languages[0],detect:l.default,store:s.default,escape:function(n){return n&&m.test(n)?n.replace(p,(function(n){return g[n]})):n},unescape:function(n){return n&&f.test(n)?n.replace(h,(function(n){return v[n]})):n},dynamicLoadSource:function(n,e){if((0,i.default)('script[src="'+n+'"]').length)e&&e();else{var r=u.createElement("script");r.onload=r.onreadystatechange=function(){this.onload=this.onreadystatechange=null,e&&e(),(0,i.default)(r).remove()},r.async=!0,r.setAttribute("referrerPolicy","no-referrer"),(0,i.default)("head")[0].appendChild(r),r.src=n}},sdkLoader:function(n,e,r){e in window&&window[e]?(y&&clearTimeout(y),r&&r()):i.default.dynamicLoadSource(n,(function(){y=setTimeout(i.default.sdkLoader(n,e,r),100)}))},deleteInWin:function(n,e){var r=function(e){if(n in window)try{delete window[n]}catch(e){window[n]=null}};0===e?r():setTimeout(r,e||500)},ajax:c.default}),e.default=i.default},function(n,e,r){"use strict";var t=r(9),a=r(0),o=a("%Function.prototype.apply%"),i=a("%Function.prototype.call%"),l=a("%Reflect.apply%",!0)||t.call(i,o),s=a("%Object.getOwnPropertyDescriptor%",!0),c=a("%Object.defineProperty%",!0),u=a("%Math.max%");if(c)try{c({},"a",{value:1})}catch(n){c=null}n.exports=function(n){var e=l(t,i,arguments);return s&&c&&s(e,"length").configurable&&c(e,"length",{value:1+u(0,n.length-(arguments.length-1))}),e};var d=function(){return l(t,o,arguments)};c?c(n.exports,"apply",{value:d}):n.exports.apply=d},function(n,e,r){"use strict";n.exports=r(62)},function(n,e,r){"use strict";e.__esModule=!0,e.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",e.DB_NAME="Comment",e.CONFIG={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,mathJax:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},e.defaultMeta=["nick","mail","link"],e.QQCacheKey="_v_Cache_Q",e.MetaCacheKey="_v_Cache_Meta",e.RandomStr=function(n){return(Date.now()+Math.round(1e3*Math.random())).toString(32)},e.VERSION="1.5.1"},function(n,e,r){var t=r(16),a=r(50);for(var o in(e=n.exports=function(n,e){return new a(e).process(n)}).FilterCSS=a,t)e[o]=t[o];"undefined"!=typeof window&&(window.filterCSS=n.exports)},function(n,e,r){"use strict";var t=r(66);n.exports=function(n){return"symbol"==typeof n?"Symbol":"bigint"==typeof n?"BigInt":t(n)}},function(n,e,r){"use strict";var t=r(78);n.exports=Function.prototype.bind||t},function(n,e,r){"use strict";var t,a,o=Function.prototype.toString,i="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof i&&"function"==typeof Object.defineProperty)try{t=Object.defineProperty({},"length",{get:function(){throw a}}),a={},i((function(){throw 42}),null,t)}catch(n){n!==a&&(i=null)}else i=null;var l=/^\s*class\b/,s=function(n){try{var e=o.call(n);return l.test(e)}catch(n){return!1}},c=Object.prototype.toString,u="function"==typeof Symbol&&!!Symbol.toStringTag,d="object"==typeof document&&void 0===document.all&&void 0!==document.all?document.all:{};n.exports=i?function(n){if(n===d)return!0;if(!n)return!1;if("function"!=typeof n&&"object"!=typeof n)return!1;if("function"==typeof n&&!n.prototype)return!0;try{i(n,null,t)}catch(n){if(n!==a)return!1}return!s(n)}:function(n){if(n===d)return!0;if(!n)return!1;if("function"!=typeof n&&"object"!=typeof n)return!1;if("function"==typeof n&&!n.prototype)return!0;if(u)return function(n){try{return!s(n)&&(o.call(n),!0)}catch(n){return!1}}(n);if(s(n))return!1;var e=c.call(n);return"[object Function]"===e||"[object GeneratorFunction]"===e}},function(n,e){n.exports={indexOf:function(n,e){var r,t;if(Array.prototype.indexOf)return n.indexOf(e);for(r=0,t=n.length;r<t;r++)if(n[r]===e)return r;return-1},forEach:function(n,e,r){var t,a;if(Array.prototype.forEach)return n.forEach(e,r);for(t=0,a=n.length;t<a;t++)e.call(r,n[t],t,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(n){var e=/\s|\n|\t/.exec(n);return e?e.index:-1}}},function(n,e,r){"use strict";e.__esModule=!0;var t={cdn:r(6).DEFAULT_EMOJI_CDN,maps:r(97),parse:function(n,e){return String(n).replace(new RegExp(":("+Object.keys(t.maps).join("|")+"):","ig"),(function(n,r){return t.maps[r]?t.build(r,e):n}))},build:function(n,e){var r=/^(https?:)?\/\//i,a=t.maps[n],o=r.test(a)?a:t.cdn+a,i=' <img alt="'+n+'" referrerpolicy="no-referrer" class="vemoji" src="'+o+'" />';return r.test(o)?i:""}};e.default=t},function(n,e,r){"use strict";e.__esModule=!0;var t=function(n){return n&&n.__esModule?n:{default:n}}(r(95));e.default=function(n){return(0,t.default)(n,{onTagAttr:function(n,e,r,t){return a(n,e,r,t)},onIgnoreTagAttr:function(n,e,r,t){return a(n,e,r,t)}}).replace(/\<\/?div\>/gi,"")};var a=function(n,e,r,a){if(/video|audio/i.test(n))return"";if(/code|pre|span/i.test(n)){if("style"==e){var o=r.match(/color:([#a-z0-9]{3,7}|\s+[#a-z0-9]{3,8})/gi);return o&&o.length?'style="'+o[0]+'"':""}if("class"==e)return e+"='"+t.default.escapeAttrValue(r)+"'"}return"a"===n&&"class"==e&&"at"===r?e+"='"+t.default.escapeAttrValue(r)+"'":"img"===n&&/src|class/i.test(e)?e+"='"+t.default.escapeAttrValue(r)+"' referrerPolicy='no-referrer'":void 0}},function(n,e,r){"use strict";var t=r(0),a=r(1),o=t("%TypeError%"),i=r(52),l=r(18),s=r(53),c=r(55),u=r(56),d=r(60),p=r(20),m=r(81),h=a("String.prototype.split"),f=Object("a"),g="a"!==f[0]||!(0 in f);n.exports=function(n){var e,r=d(this),t=g&&m(this)?h(this,""):r,a=u(t);if(!c(n))throw new o("Array.prototype.forEach callback must be a function");arguments.length>1&&(e=arguments[1]);for(var f=0;f<a;){var v=p(f);if(s(t,v)){var b=l(t,v);i(n,e,[b,f,t])}f+=1}}},function(n,e,r){"use strict";var t=r(75),a=r(14);n.exports=function(){var n=Array.prototype.forEach;return t(n)?n:a}},function(n,e){function r(){var n={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return n}var t=/javascript\s*\:/gim;e.whiteList=r(),e.getDefaultWhiteList=r,e.onAttr=function(n,e,r){},e.onIgnoreAttr=function(n,e,r){},e.safeAttrValue=function(n,e){return t.test(e)?"":e}},function(n,e){n.exports={indexOf:function(n,e){var r,t;if(Array.prototype.indexOf)return n.indexOf(e);for(r=0,t=n.length;r<t;r++)if(n[r]===e)return r;return-1},forEach:function(n,e,r){var t,a;if(Array.prototype.forEach)return n.forEach(e,r);for(t=0,a=n.length;t<a;t++)e.call(r,n[t],t,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(n){return String.prototype.trimRight?n.trimRight():n.replace(/(\s*$)/g,"")}}},function(n,e,r){"use strict";var t=r(0)("%TypeError%"),a=r(86),o=r(19),i=r(8);n.exports=function(n,e){if("Object"!==i(n))throw new t("Assertion failed: Type(O) is not Object");if(!o(e))throw new t("Assertion failed: IsPropertyKey(P) is not true, got "+a(e));return n[e]}},function(n,e,r){"use strict";n.exports=function(n){return"string"==typeof n||"symbol"==typeof n}},function(n,e,r){"use strict";var t=r(0),a=t("%String%"),o=t("%TypeError%");n.exports=function(n){if("symbol"==typeof n)throw new o("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,r){"use strict";n.exports=function(n){return null===n||"function"!=typeof n&&"object"!=typeof n}},function(n,e,r){"use strict";var t="undefined"!=typeof Symbol&&Symbol,a=r(23);n.exports=function(){return"function"==typeof t&&"function"==typeof Symbol&&"symbol"==typeof t("foo")&&"symbol"==typeof Symbol("bar")&&a()}},function(n,e,r){"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},e=Symbol("test"),r=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(e in n[e]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var t=Object.getOwnPropertySymbols(n);if(1!==t.length||t[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var a=Object.getOwnPropertyDescriptor(n,e);if(42!==a.value||!0!==a.enumerable)return!1}return!0}},function(n,e,r){"use strict";var t=r(23);n.exports=function(){return t()&&!!Symbol.toStringTag}},function(n,e,r){"use strict";var t=r(9);n.exports=t.call(Function.call,Object.prototype.hasOwnProperty)},function(n,e,r){"use strict";var t=Object.prototype.toString;n.exports=function(n){var e=t.call(n),r="[object Arguments]"===e;return r||(r="[object Array]"!==e&&null!==n&&"object"==typeof n&&"number"==typeof n.length&&n.length>=0&&"[object Function]"===t.call(n.callee)),r}},function(n,e,r){"use strict";var t=r(5),a=r(1),o=a("Object.prototype.propertyIsEnumerable"),i=a("Array.prototype.push");n.exports=function(n){var e=t(n),r=[];for(var a in e)o(e,a)&&i(r,[a,e[a]]);return r}},function(n,e,r){"use strict";var t=r(27);n.exports=function(){return"function"==typeof Object.entries?Object.entries:t}},function(n,e,r){"use strict";var t=r(5),a=r(20),o=r(1)("String.prototype.replace"),i=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,l=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;n.exports=function(){var n=a(t(this));return o(o(n,i,""),l,"")}},function(n,e,r){"use strict";var t=r(29);n.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:t}},function(n,e,r){function t(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","crossorigin","loop","muted","playsinline","poster","preload","src","height","width"]}}function a(n){return n.replace(g,"&lt;").replace(v,"&gt;")}function o(n){return n.replace(b,"&quot;")}function i(n){return n.replace(y,'"')}function l(n){return n.replace(x,(function(n,e){return"x"===e[0]||"X"===e[0]?String.fromCharCode(parseInt(e.substr(1),16)):String.fromCharCode(parseInt(e,10))}))}function s(n){return n.replace(w,":").replace(k," ")}function c(n){for(var e="",r=0,t=n.length;r<t;r++)e+=n.charCodeAt(r)<32?" ":n.charAt(r);return h.trim(e)}function u(n){return c(n=s(n=l(n=i(n))))}function d(n){return a(n=o(n))}var p=r(7).FilterCSS,m=r(7).getDefaultWhiteList,h=r(11),f=new p,g=/</g,v=/>/g,b=/"/g,y=/&quot;/g,x=/&#([a-zA-Z0-9]*);?/gim,w=/&colon;?/gim,k=/&newline;?/gim,C=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,_=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,D=/u\s*r\s*l\s*\(.*/gi;e.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","crossorigin","loop","muted","playsinline","poster","preload","src","height","width"]},e.getDefaultWhiteList=t,e.onTag=function(n,e,r){},e.onIgnoreTag=function(n,e,r){},e.onTagAttr=function(n,e,r){},e.onIgnoreTagAttr=function(n,e,r){},e.safeAttrValue=function(n,e,r,t){if(r=u(r),"href"===e||"src"===e){if("#"===(r=h.trim(r)))return"#";if("http://"!==r.substr(0,7)&&"https://"!==r.substr(0,8)&&"mailto:"!==r.substr(0,7)&&"tel:"!==r.substr(0,4)&&"data:image/"!==r.substr(0,11)&&"ftp://"!==r.substr(0,6)&&"./"!==r.substr(0,2)&&"../"!==r.substr(0,3)&&"#"!==r[0]&&"/"!==r[0])return""}else if("background"===e){if(C.lastIndex=0,C.test(r))return""}else if("style"===e){if(_.lastIndex=0,_.test(r))return"";if(D.lastIndex=0,D.test(r)&&(C.lastIndex=0,C.test(r)))return"";!1!==t&&(r=(t=t||f).process(r))}return d(r)},e.escapeHtml=a,e.escapeQuote=o,e.unescapeQuote=i,e.escapeHtmlEntities=l,e.escapeDangerHtml5Entities=s,e.clearNonPrintableCharacter=c,e.friendlyAttrValue=u,e.escapeAttrValue=d,e.onIgnoreTagStripAll=function(){return""},e.StripTagBody=function(n,e){function r(e){return!!t||-1!==h.indexOf(n,e)}"function"!=typeof e&&(e=function(){});var t=!Array.isArray(n),a=[],o=!1;return{onIgnoreTag:function(n,t,i){if(r(n)){if(i.isClosing){var l="[/removed]",s=i.position+l.length;return a.push([!1!==o?o:i.position,s]),o=!1,l}return o||(o=i.position),"[removed]"}return e(n,t,i)},remove:function(n){var e="",r=0;return h.forEach(a,(function(t){e+=n.slice(r,t[0]),r=t[1]})),e+=n.slice(r)}}},e.stripCommentTag=function(n){for(var e="",r=0;r<n.length;){var t=n.indexOf("\x3c!--",r);if(-1===t){e+=n.slice(r);break}e+=n.slice(r,t);var a=n.indexOf("--\x3e",t);if(-1===a)break;r=a+3}return e},e.stripBlankChar=function(n){var e=n.split("");return(e=e.filter((function(n){var e=n.charCodeAt(0);return!(127===e||e<=31&&10!==e&&13!==e)}))).join("")},e.cssFilter=f,e.getDefaultCSSWhiteList=m},function(n,e,r){function t(n){var e=s.spaceIndex(n);if(-1===e)var r=n.slice(1,-1);else r=n.slice(1,e+1);return"/"===(r=s.trim(r).toLowerCase()).slice(0,1)&&(r=r.slice(1)),"/"===r.slice(-1)&&(r=r.slice(0,-1)),r}function a(n){return"</"===n.slice(0,2)}function o(n,e){for(;e<n.length;e++){var r=n[e];if(" "!==r)return"="===r?e:-1}}function i(n,e){for(;e>0;e--){var r=n[e];if(" "!==r)return"="===r?e:-1}}function l(n){return function(n){return'"'===n[0]&&'"'===n[n.length-1]||"'"===n[0]&&"'"===n[n.length-1]}(n)?n.substr(1,n.length-2):n}var s=r(11),c=/[^a-zA-Z0-9_:\.\-]/gim;e.parseTag=function(n,e,r){"use strict";var o="",i=0,l=!1,s=!1,c=0,u=n.length,d="",p="";n:for(c=0;c<u;c++){var m=n.charAt(c);if(!1===l){if("<"===m){l=c;continue}}else if(!1===s){if("<"===m){o+=r(n.slice(i,c)),l=c,i=c;continue}if(">"===m){o+=r(n.slice(i,l)),d=t(p=n.slice(l,c+1)),o+=e(l,o.length,d,p,a(p)),i=c+1,l=!1;continue}if('"'===m||"'"===m)for(var h=1,f=n.charAt(c-h);""===f.trim()||"="===f;){if("="===f){s=m;continue n}f=n.charAt(c-++h)}}else if(m===s){s=!1;continue}}return i<n.length&&(o+=r(n.substr(i))),o},e.parseAttr=function(n,e){"use strict";function r(n,r){if(!((n=(n=s.trim(n)).replace(c,"").toLowerCase()).length<1)){var t=e(n,r||"");t&&a.push(t)}}for(var t=0,a=[],u=!1,d=n.length,p=0;p<d;p++){var m,h=n.charAt(p);if(!1!==u||"="!==h)if(!1===u||p!==t||'"'!==h&&"'"!==h||"="!==n.charAt(p-1)){if(/\s|\n|\t/.test(h)){if(n=n.replace(/\s|\n|\t/g," "),!1===u){if(-1===(m=o(n,p))){r(s.trim(n.slice(t,p))),u=!1,t=p+1;continue}p=m-1;continue}if(-1===(m=i(n,p-1))){r(u,l(s.trim(n.slice(t,p)))),u=!1,t=p+1;continue}}}else{if(-1===(m=n.indexOf(h,p+1)))break;r(u,s.trim(n.slice(t+1,m))),u=!1,t=(p=m)+1}else u=n.slice(t,p),t=p+1}return t<n.length&&(!1===u?r(n.slice(t)):r(u,l(s.trim(n.slice(t))))),s.trim(a.join(" "))}},function(n,e,r){var t,a,o;
/*!
	autosize 4.0.4
	license: MIT
	http://www.jacklmoore.com/autosize
*/a=[n,e],t=function(n,e){"use strict";function r(n){function e(e){var r=n.style.width;n.style.width="0px",n.offsetWidth,n.style.width=r,n.style.overflowY=e}function r(){if(0!==n.scrollHeight){var e=function(n){for(var e=[];n&&n.parentNode&&n.parentNode instanceof Element;)n.parentNode.scrollTop&&e.push({node:n.parentNode,scrollTop:n.parentNode.scrollTop}),n=n.parentNode;return e}(n),r=document.documentElement&&document.documentElement.scrollTop;n.style.height="",n.style.height=n.scrollHeight+a+"px",l=n.clientWidth,e.forEach((function(n){n.node.scrollTop=n.scrollTop})),r&&(document.documentElement.scrollTop=r)}}function t(){r();var t=Math.round(parseFloat(n.style.height)),a=window.getComputedStyle(n,null),o="content-box"===a.boxSizing?Math.round(parseFloat(a.height)):n.offsetHeight;if(o<t?"hidden"===a.overflowY&&(e("scroll"),r(),o="content-box"===a.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight):"hidden"!==a.overflowY&&(e("hidden"),r(),o="content-box"===a.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight),s!==o){s=o;var l=i("autosize:resized");try{n.dispatchEvent(l)}catch(n){}}}if(n&&n.nodeName&&"TEXTAREA"===n.nodeName&&!o.has(n)){var a=null,l=null,s=null,c=function(){n.clientWidth!==l&&t()},u=function(e){window.removeEventListener("resize",c,!1),n.removeEventListener("input",t,!1),n.removeEventListener("keyup",t,!1),n.removeEventListener("autosize:destroy",u,!1),n.removeEventListener("autosize:update",t,!1),Object.keys(e).forEach((function(r){n.style[r]=e[r]})),o.delete(n)}.bind(n,{height:n.style.height,resize:n.style.resize,overflowY:n.style.overflowY,overflowX:n.style.overflowX,wordWrap:n.style.wordWrap});n.addEventListener("autosize:destroy",u,!1),"onpropertychange"in n&&"oninput"in n&&n.addEventListener("keyup",t,!1),window.addEventListener("resize",c,!1),n.addEventListener("input",t,!1),n.addEventListener("autosize:update",t,!1),n.style.overflowX="hidden",n.style.wordWrap="break-word",o.set(n,{destroy:u,update:t}),function(){var e=window.getComputedStyle(n,null);"vertical"===e.resize?n.style.resize="none":"both"===e.resize&&(n.style.resize="horizontal"),a="content-box"===e.boxSizing?-(parseFloat(e.paddingTop)+parseFloat(e.paddingBottom)):parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth),isNaN(a)&&(a=0),t()}()}}function t(n){var e=o.get(n);e&&e.destroy()}function a(n){var e=o.get(n);e&&e.update()}var o="function"==typeof Map?new Map:function(){var n=[],e=[];return{has:function(e){return n.indexOf(e)>-1},get:function(r){return e[n.indexOf(r)]},set:function(r,t){-1===n.indexOf(r)&&(n.push(r),e.push(t))},delete:function(r){var t=n.indexOf(r);t>-1&&(n.splice(t,1),e.splice(t,1))}}}(),i=function(n){return new Event(n,{bubbles:!0})};try{new Event("test")}catch(n){i=function(n){var e=document.createEvent("Event");return e.initEvent(n,!0,!1),e}}var l=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((l=function(n){return n}).destroy=function(n){return n},l.update=function(n){return n}):((l=function(n,e){return n&&Array.prototype.forEach.call(n.length?n:[n],(function(n){return r(n)})),n}).destroy=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],t),n},l.update=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],a),n}),e.default=l,n.exports=e.default},void 0!==(o="function"==typeof t?t.apply(e,a):t)&&(n.exports=o)},function(n,e,r){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}function a(n){return!!n&&this.init(n),this}function o(n){return new a(n)}var i=t(r(42)),l=t(r(33)),s=t(r(37)),c=t(r(12)),u=r(6),d=t(r(41)),p=t(r(36)),m=r(40),h=t(r(38)),f=t(r(3)),g=t(r(39)),v=t(r(13)),b=(t(r(35)),{comment:"",nick:"",mail:"",link:"",ua:f.default.ua,url:"",QQAvatar:""}),y="",x={},w={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};a.prototype.init=function(n){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var e=this;return n&&(n=f.default.extend(u.CONFIG,n),e.i18n=(0,s.default)(n.lang||f.default.lang,n.langMode),e.cfg=n,c.default.maps=!!n.emojiMaps&&n.emojiMaps||c.default.maps,c.default.cdn=!!n.emojiCDN&&n.emojiCDN||c.default.cdn,e._init()),e},a.prototype._init=function(){var n=this;try{var e=n.cfg,r=e.avatar,t=e.avatarForce,a=e.avatar_cdn,o=e.visitor,i=e.path,l=void 0===i?location.pathname:i,s=e.pageSize,c=e.recordIP;n.cfg.path=l.replace(/index\.html?$/,"");var d=w.ds,g=t?"&q="+(0,u.RandomStr)():"";w.params="?d="+(d.indexOf(r)>-1?r:"mp")+"&v="+u.VERSION+g,w.hide="hide"===r,w.cdn=/^https?\:\/\//.test(a)?a:w.cdn,n.cfg.pageSize=isNaN(s)||s<1?10:s,c&&(0,m.recordIPFn)((function(n){return b.ip=n}));var v=n.cfg.el||null,y=(0,f.default)(v);if(v=v instanceof HTMLElement?v:y[y.length-1]||null){n.$el=(0,f.default)(v),n.$el.addClass("v").attr("data-class","v"),w.hide&&n.$el.addClass("hide-avatar"),n.cfg.meta=(n.cfg.guest_info||n.cfg.meta||u.defaultMeta).filter((function(n){return u.defaultMeta.indexOf(n)>-1})),n.cfg.requiredFields=n.cfg.requiredFields.filter((function(n){return u.defaultMeta.indexOf(n)>-1}));var x=(0==n.cfg.meta.length?u.defaultMeta:n.cfg.meta).map((function(e){var r="mail"==e?"email":"text";return u.defaultMeta.indexOf(e)>-1?'<input name="'+e+'" placeholder="'+n.i18n.t(e)+'" class="v'+e+' vinput" type="'+r+'">':""})),k='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+n.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+x.length+'">'+x.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+n.cfg.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+n.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+n.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+n.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+n.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+n.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+u.VERSION+"</div>";n.$el.html(k),n.$el.find(".cancel-reply").on("click",(function(e){n.reset()}));var _=n.$el.find(".vempty");n.$nodata={show:function(e){return _.html(e||n.i18n.t("sofa")).show(),n},hide:function(){return _.hide(),n}};var D=n.$el.find(".vload-bottom"),S=n.$el.find(".vload-top");n.$loading={show:function(e){return e&&S.show()||D.show(),n.$nodata.hide(),n},hide:function(){return S.hide(),D.hide(),0===n.$el.find(".vcard").length&&n.$nodata.show(),n}}}(0,p.default)(n.cfg,(function(e){var r=(0,f.default)(".valine-comment-count"),t=0;!function e(r){var a=r[t++];if(a){var o=(0,f.default)(a).attr("data-xid");o&&n.Q(o).count().then((function(n){a.innerText=n,e(r)})).catch((function(n){a.innerText=0}))}}(r),o&&C.add(AV.Object.extend("Counter"),n.cfg.path),n.$el&&n.bind()}))}catch(e){(0,h.default)(n,e,"init")}};var k=function(n,e){var r=new n,t=new AV.ACL;t.setPublicReadAccess(!0),t.setPublicWriteAccess(!0),r.setACL(t),r.set("url",e.url),r.set("xid",e.xid),r.set("title",e.title),r.set("time",1),r.save().then((function(n){(0,f.default)(e.el).find(".leancloud-visitors-count").text(1)})).catch((function(n){}))},C={add:function(n,e){var r=this,t=(0,f.default)(".leancloud_visitors,.leancloud-visitors");if(1===t.length){var a=t[0],o=decodeURI((0,f.default)(a).attr("id")),i=(0,f.default)(a).attr("data-flag-title"),l=encodeURI(o),s={el:a,url:o,xid:l,title:i};if(decodeURI(o)===decodeURI(e)){var c=new AV.Query(n);c.equalTo("url",o),c.find().then((function(e){if(e.length>0){var r=e[0];r.increment("time"),r.save().then((function(n){(0,f.default)(a).find(".leancloud-visitors-count").text(n.get("time"))})).catch((function(n){}))}else k(n,s)})).catch((function(e){101==e.code?k(n,s):(0,h.default)(r,e)}))}else C.show(n,t)}else C.show(n,t)},show:function(n,e){var r=[];if(e.forEach((function(n){var e=(0,f.default)(n).find(".leancloud-visitors-count");e&&e.text("0"),r.push(/\%/.test((0,f.default)(n).attr("id"))?decodeURI((0,f.default)(n).attr("id")):(0,f.default)(n).attr("id"))})),r.length){var t=new AV.Query(n);t.containedIn("url",r),t.find().then((function(n){n.length>0&&e.forEach((function(e){n.forEach((function(n){var r=n.get("xid")||encodeURI(n.get("url")),t=n.get("time"),a=(0,f.default)(e),o=a.attr("id");if((/\%/.test(o)?o:encodeURI(o))==r){var i=a.find(".leancloud-visitors-count");i&&i.text(t)}}))}))})).catch((function(n){}))}}};a.prototype.Q=function(n){var e=this,r=arguments.length,t=e.cfg.clazzName;if(1==r){var a=new AV.Query(t);a.doesNotExist("rid");var o=new AV.Query(t);o.equalTo("rid","");var i=AV.Query.or(a,o);return"*"===n?i.exists("url"):i.equalTo("url",decodeURI(n)),i.addDescending("createdAt"),i.addDescending("insertedAt"),i}var l=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),s="select * from "+t+" where rid in ("+l+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(s)},a.prototype.installLocale=function(n,e){return this.i18n(n,e),this},a.prototype.setPath=function(n){return this.config.path=n,this},a.prototype.bind=function(){var n=this,e=n.$el.find(".vemojis"),r=n.$el.find(".vpreview"),t=n.$el.find(".vemoji-btn"),a=n.$el.find(".vpreview-btn"),o=n.$el.find(".veditor"),s=c.default.maps,p=!1;n.$emoji={show:function(){return!p&&function(n){var r=[];for(var t in s)s.hasOwnProperty(t)&&c.default.build(t)&&r.push('<i title="'+t+'" >'+c.default.build(t)+"</i>");e.html(r.join("")),p=!0,e.find("i").on("click",(function(n){n.preventDefault(),A(o[0]," :"+(0,f.default)(this).attr("title")+":")}))}(),n.$preview.hide(),e.show(),t.addClass("actived"),n.$emoji},hide:function(){return t.removeClass("actived"),e.hide(),n.$emoji}},n.$preview={show:function(){return y?(n.$emoji.hide(),a.addClass("actived"),r.html((0,g.default)(y)).show(),P()):n.$preview.hide(),n.$preview},hide:function(){return a.removeClass("actived"),r.hide().html(""),n.$preview}};var k=function(e){var t=e.val()||"";t||n.$preview.hide(),y!=t&&(y=t,a.hasClass("actived")>-1&&y!=r.html()&&r.html((0,g.default)(y)),P())};t.on("click",(function(e){t.hasClass("actived")?n.$emoji.hide():n.$emoji.show()})),a.on("click",(function(e){a.hasClass("actived")?n.$preview.hide():n.$preview.show()}));var C=n.cfg.meta,_={},D={veditor:"comment"};for(var S in C.forEach((function(n){D["v"+n]=n})),D)D.hasOwnProperty(S)&&function(){var e=D[S],r=n.$el.find("."+S);_[e]=r,r.on("input change blur propertychange",(function(t){n.cfg.enableQQ&&"blur"===t.type&&"nick"===e&&(r.val()&&!isNaN(r.val())?(0,m.fetchQQFn)(r.val(),(function(n){var e=n.nick||r.val(),t=n.qq+"@qq.com";(0,f.default)(".vnick").val(e),(0,f.default)(".vmail").val(t),b.nick=e,b.mail=t,b.QQAvatar=n.pic})):f.default.store.get(u.QQCacheKey)&&f.default.store.get(u.QQCacheKey).nick!=r.val()&&(f.default.store.remove(u.QQCacheKey),b.nick=r.val(),b.mail="",b.QQAvatar="")),"comment"===e?((0,l.default)(r[0]),$((function(n){k(r)}))()):b[e]=(0,v.default)(r.val().replace(/(^\s*)|(\s*$)/g,"").substring(0,35))}))}();var $=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300,r=void 0;return function(){var t=this,a=arguments;r&&clearTimeout(r),r=setTimeout((function(){n.apply(t,a)}),e)}},A=function(n,e){if(document.selection)n.focus(),document.selection.createRange().text=e,n.focus();else if(n.selectionStart||"0"==n.selectionStart){var r=n.selectionStart,t=n.selectionEnd,a=n.scrollTop;n.value=n.value.substring(0,r)+e+n.value.substring(t,n.value.length),n.focus(),n.selectionStart=r+e.length,n.selectionEnd=r+e.length,n.scrollTop=a}else n.focus(),n.value+=e;$((function(e){k((0,f.default)(n))}))()},T={no:1,size:n.cfg.pageSize,skip:n.cfg.pageSize},j=n.$el.find(".vpage");j.on("click",(function(n){j.hide(),T.no++,E()}));var E=function(){var e=T.size,r=T.no,t=Number(n.$el.find(".vnum").text());n.$loading.show();var a=n.Q(n.cfg.path);a.limit(e),a.skip((r-1)*e),a.find().then((function(a){if(T.skip=T.size,a&&a.length){var o=[];a.forEach((function(e){o.push(e.id),I(e,n.$el.find(".vcards"),!0)})),n.Q(n.cfg.path,o).then((function(n){(n&&n.results||[]).forEach((function(n){I(n,(0,f.default)('.vquote[data-self-id="'+n.get("rid")+'"]'))}))})).catch((function(n){})),e*r<t?j.show():j.hide(),P()}else n.$nodata.show();n.$loading.hide()})).catch((function(e){n.$loading.hide(),(0,h.default)(n,e,"query")}))};n.Q(n.cfg.path).count().then((function(e){e>0?(n.$el.find(".vcount").show().find(".vnum").text(e),E()):n.$loading.hide()})).catch((function(e){(0,h.default)(n,e,"count")}));var z=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=/(https?|http):\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/g,r=n.match(e)||[];return r.length>0?r[0]:""},I=function(e,r,t){var a=(0,f.default)('<div class="vcard" id="'+e.id+'"></div>'),o=(0,v.default)(e.get("ua")),l="";o&&!/ja/.test(n.cfg.lang)&&(l=(o=f.default.detect(o)).version?o.os?'<span class="vsys">'+o.browser+" "+o.version+'</span> <span class="vsys">'+o.os+" "+o.osVersion+"</span>":"":'<span class="vsys">'+o.browser+"</span>"),"*"===n.cfg.path&&(l='<a href="'+e.get("url")+'" class="vsys">'+e.get("url")+"</a>");var s=e.get("link")?/^https?\:\/\//.test(e.get("link"))?e.get("link"):"http://"+e.get("link"):"",c=f.default.escape((0,v.default)(e.get("nick").substring(0,30))),u=s?'<a class="vnick" rel="nofollow" href="'+z(s)+'" target="_blank" >'+c+"</a>":'<span class="vnick">'+c+"</span>",p=(w.hide?"":n.cfg.enableQQ&&e.get("QQAvatar")?(0,v.default)('<img class="vimg" src="'+z(e.get("QQAvatar"))+'" referrerPolicy="no-referrer"/>'):'<img class="vimg" src="'+(w.cdn+(0,i.default)(e.get("mail"))+w.params)+'">')+'<div class="vh"><div class="vhead">'+u+" "+l+'</div><div class="vmeta"><span class="vtime" >'+(0,d.default)(e.get("insertedAt"),n.i18n)+'</span><span class="vat" data-vm-id="'+(e.get("rid")||e.id)+'" data-self-id="'+e.id+'">'+n.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+n.i18n.t("expand")+'">'+(0,g.default)(e.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+e.id+'"></div><div class="vquote" data-self-id="'+e.id+'"></div></div>';a.html(p);var m=a.find(".vat");a.find("a:not(.at)").forEach((function(n){(0,f.default)(n).attr({target:"_blank",rel:"noopener"})})),t?r.append(a):r.prepend(a);var h=a.find(".vcontent");h&&M(h),m&&O(m,e)},F={},O=function(e,r){e.on("click",(function(t){var a=e.attr("data-vm-id"),o=e.attr("data-self-id"),i=n.$el.find(".vwrap"),l="@"+f.default.escape(r.get("nick"));(0,f.default)('.vreply-wrapper[data-self-id="'+o+'"]').append(i).find(".cancel-reply").show(),F={at:f.default.escape(l)+" ",rid:a,pid:o,rmail:r.get("mail")},_.comment.attr({placeholder:l})[0].focus()}))},P=function(){setTimeout((function(){try{n.cfg.mathjax&&"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,f.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(n){}}),100)},M=function(n){setTimeout((function(){n[0].offsetHeight>200&&(n.addClass("expand"),n.on("click",(function(e){n.removeClass("expand")})))}))};!function(e){if(e=f.default.store.get(u.MetaCacheKey)||e)for(var r in C)if(C.hasOwnProperty(r)){var t=C[r];n.$el.find(".v"+t).val(f.default.unescape(e[t])),b[t]=e[t]}var a=f.default.store.get(u.QQCacheKey);b.QQAvatar=n.cfg.enableQQ&&!!a&&a.pic||""}(),n.reset=function(){b.comment="",_.comment.val(""),k(_.comment),_.comment.attr("placeholder",n.cfg.placeholder),F={},n.$preview.hide(),n.$el.find(".vpanel").append(n.$el.find(".vwrap")),n.$el.find(".cancel-reply").hide(),y="",l.default.update(_.comment[0])};var L=n.$el.find(".vsubmit"),R=function(e){if(n.cfg.requiredFields.indexOf("nick")>-1&&b.nick.length<3)return _.nick[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("nickFail")).empty(3e3);if(n.cfg.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(b.mail))return _.mail[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("mailFail")).empty(3e3);if(""!=y){for(var r in x)if(x.hasOwnProperty(r)){var t=x[r];y=y.replace(r,t),URL.revokeObjectURL(r)}x={},b.comment=(0,v.default)(y),b.nick=b.nick||"Anonymous";var a=f.default.store.get("vlx");a&&Date.now()/1e3-a/1e3<20?n.$el.find(".status-bar").text(n.i18n.t("busy")).empty(3e3):B()}else _.comment[0].focus()},B=function(){f.default.store.set("vlx",Date.now()),L.attr({disabled:!0}),n.$loading.show(!0);var e=new(AV.Object.extend(n.cfg.clazzName||"Comment"));if(b.url=decodeURI(n.cfg.path),b.insertedAt=new Date,F.rid){var r=F.pid||F.rid;e.set("rid",F.rid),e.set("pid",r),b.comment=y.replace("<p>",'<p><a class="at" href="#'+r+'">'+F.at+"</a> , ")}for(var t in b)if(b.hasOwnProperty(t)){var a=b[t];e.set(t,a)}e.setACL(function(){var n=new AV.ACL;return n.setPublicReadAccess(!0),n.setPublicWriteAccess(!1),n}()),e.save().then((function(e){"Anonymous"!=b.nick&&f.default.store.set(u.MetaCacheKey,{nick:b.nick,link:b.link,mail:b.mail});var r=n.$el.find(".vnum");try{F.rid?I(e,(0,f.default)('.vquote[data-self-id="'+F.rid+'"]'),!0):(Number(r.text())?r.text(Number(r.text())+1):n.$el.find(".vcount").show().find(".vnum").text(Number(r.text())+1),I(e,n.$el.find(".vcards")),T.skip++),L.removeAttr("disabled"),n.$loading.hide(),n.reset()}catch(e){(0,h.default)(n,e,"save")}})).catch((function(e){(0,h.default)(n,e,"commitEvt")}))};L.on("click",R),(0,f.default)(document).on("keydown",(function(n){var e=(n=window.event||n).keyCode||n.which||n.charCode;(n.ctrlKey||n.metaKey)&&13===e&&R(),9===e&&"veditor"==(document.activeElement.id||"")&&(n.preventDefault(),A(o[0],"    "))})).on("paste",(function(n){var e="clipboardData"in n?n.clipboardData:n.originalEvent&&n.originalEvent.clipboardData||window.clipboardData;e&&N(e.items,!0)})),o.on("dragenter dragleave dragover drop",(function(n){n.stopPropagation(),n.preventDefault(),"drop"===n.type&&N(n.dataTransfer.items)}));var N=function(n,e){for(var r=0,t=n.length;r<t;r++){var a=n[r];if("string"===a.kind&&a.type.match("^text/html"))!e&&a.getAsString((function(n){n&&A(o[0],n.replace(/<[^>]+>/g,""))}));else if(a.type.indexOf("image")>-1){U(a.getAsFile());continue}}},U=function(n){try{var e=URL.createObjectURL(n),r="![image]("+e+") ",t=new FileReader;A(o[0],r),t.onload=function(){x[e]=t.result},t.readAsDataURL(n)}catch(n){}}},n.exports=o,n.exports.default=o},function(n,e,r){"use strict";e.__esModule=!0;var t=function(n){return n&&n.__esModule?n:{default:n}}(r(3));e.default={getApi:function(n,e){t.default.ajax({url:"https://app-router.com/2/route",body:{appId:n}}).then((function(n){n.json().then((function(n){return e&&e("//"+n.api_server)}))}))}}},function(n,e,r){"use strict";e.__esModule=!0;var t=function(n){return n&&n.__esModule?n:{default:n}}(r(3)),a=!1;e.default=function(n,e){if("AV"in window){var r=window.AV.version||window.AV.VERSION;parseInt(r.split(".")[0])>2?a=!!AV.applicationId&&!!AV.applicationKey:t.default.deleteInWin("AV",0)}a?e&&e():t.default.sdkLoader("//unpkg.com/leancloud-storage@3/dist/av-min.js","AV",(function(r){var t,o="https://",i=n.app_id||n.appId,l=n.app_key||n.appKey;if(!n.serverURLs)switch(i.slice(-9)){case"-9Nh9j0Va":o+="tab.";break;case"-MdYXbMMI":o+="us."}t=n.serverURLs||o+"leancloud.cn",AV.init({appId:i,appKey:l,serverURLs:t}),a=!0,e&&e()}))}},function(n,e,r){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var a=t(r(84)),o=t(r(100)),i=t(r(101)),l=t(r(98)),s=t(r(99)),c={zh:o.default,"zh-cn":o.default,"zh-CN":o.default,"zh-TW":i.default,en:l.default,"en-US":l.default,ja:s.default,"ja-JP":s.default};e.default=function(n,e){return!c[n]&&n&&e&&(c[n]=e),new a.default({phrases:c[n||"zh"],locale:n})}},function(n,e,r){"use strict";e.__esModule=!0,e.default=function(n,e){if(n.$el&&n.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(e)){var r=e.code||e.message||e.error||"";if(isNaN(r))n.$el&&n.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(e)+"</pre>");else{var t=n.i18n.t("code-"+r),a=(t=="code-"+r?void 0:t)||e.message||e.error||"";101==r||-1==r?n.$nodata.show():n.$el&&n.$nodata.show('<pre style="text-align:left;">Code '+r+": "+a+"</pre>")}}else n.$el&&n.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(e)+"</pre>")}},function(n,e,r){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var a=r(83),o=t(r(79)),i=t(r(3)),l=t(r(12)),s=t(r(13)),c=new a.marked.Renderer;c.code=function(n,e){return'<pre><code class="hljs language-'+e+'">'+(e&&hljs.getLanguage(e)?hljs.highlight(e,n).value:i.default.escape(n))+"</code></pre>"},a.marked.setOptions({renderer:"hljs"in window?c:new a.marked.Renderer,highlight:function(n,e){return"hljs"in window?e&&hljs.getLanguage(e)&&hljs.highlight(e,n,!0).value||hljs.highlightAuto(n).value:(0,o.default)(n)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!0,headerPrefix:"v-"}),e.default=function(n){return(0,s.default)((0,a.marked)(l.default.parse(n,!0)))}},function(n,e,r){"use strict";e.__esModule=!0,e.recordIPFn=e.fetchQQFn=void 0;var t=function(n){return n&&n.__esModule?n:{default:n}}(r(3)),a=r(6);e.fetchQQFn=function(n,e){var r=t.default.store.get(a.QQCacheKey);r&&r.qq==n?e&&e(r):t.default.ajax({url:"//valine.api.ioliu.cn/getqqinfo",method:"POST",body:{qq:n}}).then((function(n){n.json().then((function(n){n.errmsg||(t.default.store.set(a.QQCacheKey,n),e&&e(n))}))}))},e.recordIPFn=function(n){t.default.ajax({url:"https://forge.speedtest.cn/api/location/info",method:"get"}).then((function(n){return n.json()})).then((function(e){n&&n(e.ip)}))}},function(n,e,r){"use strict";e.__esModule=!0,e.default=function(n,e){if(!n)return"Invalid Date.";try{var r=a(n).getTime();if(isNaN(r))return"Invalid Date.";var o=(new Date).getTime()-r,i=Math.floor(o/864e5);if(0===i){var l=o%864e5,s=Math.floor(l/36e5);if(0===s){var c=l%36e5,u=Math.floor(c/6e4);if(0===u){var d=c%6e4;return Math.round(d/1e3)+" "+e.t("seconds")}return u+" "+e.t("minutes")}return s+" "+e.t("hours")}return i<0?e.t("now"):i<8?i+" "+e.t("days"):t(n)}catch(n){}};var t=function(n){var e=o(n.getDate(),2),r=o(n.getMonth()+1,2);return o(n.getFullYear(),2)+"-"+r+"-"+e},a=function n(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):/GMT/.test(e||"")?n(new Date(e).getTime()):(e=(e||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))},o=function(n,e){for(var r=n.toString();r.length<e;)r="0"+r;return r}},function(n,e,r){var t;!function(a){"use strict";function o(n,e){var r=(65535&n)+(65535&e);return(n>>16)+(e>>16)+(r>>16)<<16|65535&r}function i(n,e,r,t,a,i){return o(function(n,e){return n<<e|n>>>32-e}(o(o(e,n),o(t,i)),a),r)}function l(n,e,r,t,a,o,l){return i(e&r|~e&t,n,e,a,o,l)}function s(n,e,r,t,a,o,l){return i(e&t|r&~t,n,e,a,o,l)}function c(n,e,r,t,a,o,l){return i(e^r^t,n,e,a,o,l)}function u(n,e,r,t,a,o,l){return i(r^(e|~t),n,e,a,o,l)}function d(n,e){n[e>>5]|=128<<e%32,n[14+(e+64>>>9<<4)]=e;var r,t,a,i,d,p=1732584193,m=-271733879,h=-1732584194,f=271733878;for(r=0;r<n.length;r+=16)t=p,a=m,i=h,d=f,p=l(p,m,h,f,n[r],7,-680876936),f=l(f,p,m,h,n[r+1],12,-389564586),h=l(h,f,p,m,n[r+2],17,606105819),m=l(m,h,f,p,n[r+3],22,-1044525330),p=l(p,m,h,f,n[r+4],7,-176418897),f=l(f,p,m,h,n[r+5],12,1200080426),h=l(h,f,p,m,n[r+6],17,-1473231341),m=l(m,h,f,p,n[r+7],22,-45705983),p=l(p,m,h,f,n[r+8],7,1770035416),f=l(f,p,m,h,n[r+9],12,-1958414417),h=l(h,f,p,m,n[r+10],17,-42063),m=l(m,h,f,p,n[r+11],22,-1990404162),p=l(p,m,h,f,n[r+12],7,1804603682),f=l(f,p,m,h,n[r+13],12,-40341101),h=l(h,f,p,m,n[r+14],17,-1502002290),p=s(p,m=l(m,h,f,p,n[r+15],22,1236535329),h,f,n[r+1],5,-165796510),f=s(f,p,m,h,n[r+6],9,-1069501632),h=s(h,f,p,m,n[r+11],14,643717713),m=s(m,h,f,p,n[r],20,-373897302),p=s(p,m,h,f,n[r+5],5,-701558691),f=s(f,p,m,h,n[r+10],9,38016083),h=s(h,f,p,m,n[r+15],14,-660478335),m=s(m,h,f,p,n[r+4],20,-405537848),p=s(p,m,h,f,n[r+9],5,568446438),f=s(f,p,m,h,n[r+14],9,-1019803690),h=s(h,f,p,m,n[r+3],14,-187363961),m=s(m,h,f,p,n[r+8],20,1163531501),p=s(p,m,h,f,n[r+13],5,-1444681467),f=s(f,p,m,h,n[r+2],9,-51403784),h=s(h,f,p,m,n[r+7],14,1735328473),p=c(p,m=s(m,h,f,p,n[r+12],20,-1926607734),h,f,n[r+5],4,-378558),f=c(f,p,m,h,n[r+8],11,-2022574463),h=c(h,f,p,m,n[r+11],16,1839030562),m=c(m,h,f,p,n[r+14],23,-35309556),p=c(p,m,h,f,n[r+1],4,-1530992060),f=c(f,p,m,h,n[r+4],11,1272893353),h=c(h,f,p,m,n[r+7],16,-155497632),m=c(m,h,f,p,n[r+10],23,-1094730640),p=c(p,m,h,f,n[r+13],4,681279174),f=c(f,p,m,h,n[r],11,-358537222),h=c(h,f,p,m,n[r+3],16,-722521979),m=c(m,h,f,p,n[r+6],23,76029189),p=c(p,m,h,f,n[r+9],4,-640364487),f=c(f,p,m,h,n[r+12],11,-421815835),h=c(h,f,p,m,n[r+15],16,530742520),p=u(p,m=c(m,h,f,p,n[r+2],23,-995338651),h,f,n[r],6,-198630844),f=u(f,p,m,h,n[r+7],10,1126891415),h=u(h,f,p,m,n[r+14],15,-1416354905),m=u(m,h,f,p,n[r+5],21,-57434055),p=u(p,m,h,f,n[r+12],6,1700485571),f=u(f,p,m,h,n[r+3],10,-1894986606),h=u(h,f,p,m,n[r+10],15,-1051523),m=u(m,h,f,p,n[r+1],21,-2054922799),p=u(p,m,h,f,n[r+8],6,1873313359),f=u(f,p,m,h,n[r+15],10,-30611744),h=u(h,f,p,m,n[r+6],15,-1560198380),m=u(m,h,f,p,n[r+13],21,1309151649),p=u(p,m,h,f,n[r+4],6,-145523070),f=u(f,p,m,h,n[r+11],10,-1120210379),h=u(h,f,p,m,n[r+2],15,718787259),m=u(m,h,f,p,n[r+9],21,-343485551),p=o(p,t),m=o(m,a),h=o(h,i),f=o(f,d);return[p,m,h,f]}function p(n){var e,r="",t=32*n.length;for(e=0;e<t;e+=8)r+=String.fromCharCode(n[e>>5]>>>e%32&255);return r}function m(n){var e,r=[];for(r[(n.length>>2)-1]=void 0,e=0;e<r.length;e+=1)r[e]=0;var t=8*n.length;for(e=0;e<t;e+=8)r[e>>5]|=(255&n.charCodeAt(e/8))<<e%32;return r}function h(n){var e,r,t="0123456789abcdef",a="";for(r=0;r<n.length;r+=1)e=n.charCodeAt(r),a+=t.charAt(e>>>4&15)+t.charAt(15&e);return a}function f(n){return unescape(encodeURIComponent(n))}function g(n){return function(n){return p(d(m(n),8*n.length))}(f(n))}function v(n,e){return function(n,e){var r,t,a=m(n),o=[],i=[];for(o[15]=i[15]=void 0,a.length>16&&(a=d(a,8*n.length)),r=0;r<16;r+=1)o[r]=909522486^a[r],i[r]=1549556828^a[r];return t=d(o.concat(m(e)),512+8*e.length),p(d(i.concat(t),640))}(f(n),f(e))}function b(n,e,r){return e?r?v(e,n):function(n,e){return h(v(n,e))}(e,n):r?g(n):function(n){return h(g(n))}(n)}void 0!==(t=function(){return b}.call(e,r,e,n))&&(n.exports=t)}()},function(n,e,r){"use strict";var t=r(2),a=r(4),o=r(1),i=r(5),l=r(14),s=r(15),c=s(),u=r(44),d=o("Array.prototype.slice"),p=a.apply(c),m=function(n,e){return i(n),p(n,d(arguments,1))};t(m,{getPolyfill:s,implementation:l,shim:u}),n.exports=m},function(n,e,r){"use strict";var t=r(2),a=r(15);n.exports=function(){var n=a();return t(Array.prototype,{forEach:n},{forEach:function(){return Array.prototype.forEach!==n}}),n}},function(n,e,r){"use strict";e.__esModule=!0;var t=function(n){return n&&n.__esModule?n:{default:n}}(r(47));e.default=function(n){return n=(0,t.default)({url:"",method:"get",body:{}},n),new Promise((function(e,r){if("jsonp"==n.method){var t="cb_"+(Date.now()+Math.round(1e3*Math.random())).toString(32),a=document,i=a.body,l=a.createElement("script");return l.async=!0,l.defer=!0,n.url.indexOf("?")>-1?n.url+="&"+o({callback:t,t:Date.now()}):n.url+="?"+o({callback:t,t:Date.now()}),l.src=n.url,window[t]=function(n){window[t]=null,i.removeChild(l),e(n)},void i.appendChild(l)}var s="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP"),c=[],u=[],d={};for(var p in o(n.body)&&(n.url=n.url+"?"+("get"==n.method?o(n.body):"")),s.open(n.method||"get",n.url),"blob"==n.dataType&&(s.responseType="blob"),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(n,e,r){c.push(e=e.toLowerCase()),u.push([e,r]),d[e]=d[e]?d[e]+","+r:r})),e(function n(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:n,headers:{keys:function(){return c},entries:function(){return u},get:function(n){return d[n.toLowerCase()]},has:function(n){return n.toLowerCase()in d}}}}())},s.onerror=r,s.withCredentials="include"==n.credentials,n.headers)s.setRequestHeader(p,n.headers[p]);s.send("post"==n.method?n.body:"get"==n.method?"":o(n.body))}))};var a=encodeURIComponent,o=function(n){var e=[];for(var r in n)n.hasOwnProperty(r)&&e.push(a(r)+"="+a(n[r]));return(e=e.join("&").replace(/%20/g,"+"))||""}},function(n,e,r){"use strict";e.__esModule=!0,e.default=function(n){var e={},r={Trident:(n=n||navigator.userAgent).indexOf("Trident")>-1||n.indexOf("NET CLR")>-1,Presto:n.indexOf("Presto")>-1,WebKit:n.indexOf("AppleWebKit")>-1,Gecko:n.indexOf("Gecko/")>-1,Safari:n.indexOf("Safari")>-1,Edge:n.indexOf("Edge")>-1||n.indexOf("Edg")>-1,Chrome:n.indexOf("Chrome")>-1||n.indexOf("CriOS")>-1,IE:n.indexOf("MSIE")>-1||n.indexOf("Trident")>-1,Firefox:n.indexOf("Firefox")>-1||n.indexOf("FxiOS")>-1,"Firefox Focus":n.indexOf("Focus")>-1,Chromium:n.indexOf("Chromium")>-1,Opera:n.indexOf("Opera")>-1||n.indexOf("OPR")>-1,Vivaldi:n.indexOf("Vivaldi")>-1,Yandex:n.indexOf("YaBrowser")>-1,Kindle:n.indexOf("Kindle")>-1||n.indexOf("Silk/")>-1,360:n.indexOf("360EE")>-1||n.indexOf("360SE")>-1,UC:n.indexOf("UC")>-1||n.indexOf(" UBrowser")>-1,QQBrowser:n.indexOf("QQBrowser")>-1,QQ:n.indexOf("QQ/")>-1,Baidu:n.indexOf("Baidu")>-1||n.indexOf("BIDUBrowser")>-1,Maxthon:n.indexOf("Maxthon")>-1,Sogou:n.indexOf("MetaSr")>-1||n.indexOf("Sogou")>-1,LBBROWSER:n.indexOf("LBBROWSER")>-1,"2345Explorer":n.indexOf("2345Explorer")>-1,TheWorld:n.indexOf("TheWorld")>-1,XiaoMi:n.indexOf("MiuiBrowser")>-1,Quark:n.indexOf("Quark")>-1,Qiyu:n.indexOf("Qiyu")>-1,Wechat:n.indexOf("MicroMessenger")>-1,Taobao:n.indexOf("AliApp(TB")>-1,Alipay:n.indexOf("AliApp(AP")>-1,Weibo:n.indexOf("Weibo")>-1,Douban:n.indexOf("com.douban.frodo")>-1,Suning:n.indexOf("SNEBUY-APP")>-1,iQiYi:n.indexOf("IqiyiApp")>-1,Windows:n.indexOf("Windows")>-1,Linux:n.indexOf("Linux")>-1||n.indexOf("X11")>-1,macOS:n.indexOf("Macintosh")>-1,Android:n.indexOf("Android")>-1||n.indexOf("Adr")>-1,Ubuntu:n.indexOf("Ubuntu")>-1,FreeBSD:n.indexOf("FreeBSD")>-1,Debian:n.indexOf("Debian")>-1,"Windows Phone":n.indexOf("IEMobile")>-1||n.indexOf("Windows Phone")>-1,BlackBerry:n.indexOf("BlackBerry")>-1||n.indexOf("RIM")>-1||n.indexOf("BB10")>-1,MeeGo:n.indexOf("MeeGo")>-1,Symbian:n.indexOf("Symbian")>-1,iOS:n.indexOf("like Mac OS X")>-1,"Chrome OS":n.indexOf("CrOS")>-1,WebOS:n.indexOf("hpwOS")>-1,Mobile:n.indexOf("Mobi")>-1||n.indexOf("iPh")>-1||n.indexOf("480")>-1,Tablet:n.indexOf("Tablet")>-1||n.indexOf("Pad")>-1||n.indexOf("Nexus 7")>-1};r.Mobile&&(r.Mobile=!(n.indexOf("iPad")>-1));var t={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var a in t)if(t.hasOwnProperty(a))for(var o=0,i=t[a].length;o<i;o++){var l=t[a][o];r[l]&&(e[a]=l)}var s={Windows:function(){return{"10.0":"11",6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[n.replace(/^.*Windows NT ([\d.]+).*$/,"$1")]},Android:n.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:n.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:n.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":n.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:n.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:n.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:n.replace(/^.*BB([\d.]+);*$/,"$1")};e.osVersion="";var c=s[e.os];c&&(e.osVersion="function"==typeof c?c():c==n?"":c);var u={Safari:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:n.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:n.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:n.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:n.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":n.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:n.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:n.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:n.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:n.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:n.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:n.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:n.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:n.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:n.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:n.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":n.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:n.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:n.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:n.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:n.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:n.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:n.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:n.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:n.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:n.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:n.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:n.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};e.version="";var d=u[e.browser];return d&&(e.version="function"==typeof d?d():d==n?"":d),null==e.browser&&(e.browser="Unknow App"),e}},function(n,e,r){"use strict";e.__esModule=!0,e.default=function(n){n=Object(n);for(var e=1,r=arguments.length;e<r;e++){var t=arguments[e];if(t)for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n}},function(n,e,r){"use strict";function t(n){return/^\{[\s\S]*\}$/.test(JSON.stringify(n))}function a(n){return"[object Function]"==={}.toString.call(n)}function o(n){return"[object Array]"==={}.toString.call(n)}function i(n){if("string"==typeof n)try{return JSON.parse(n)}catch(e){return n}}function l(){if(!(this instanceof l))return new l}function s(n,e){var r=arguments,i=null;if(u||(u=l()),0===r.length)return u.get();if(1===r.length){if("string"==typeof n)return u.get(n);if(t(n))return u.set(n)}if(2===r.length&&"string"==typeof n){if(!e)return u.remove(n);if(e&&"string"==typeof e)return u.set(n,e);e&&a(e)&&(i=null,i=e(n,u.get(n)),s.set(n,i))}if(2===r.length&&o(n)&&a(e))for(var c=0,d=n.length;c<d;c++)i=e(n[c],u.get(n[c])),s.set(n[c],i);return s}e.__esModule=!0;var c=window.localStorage;c=function(n){var e="_Is_Incognit";try{n.setItem(e,"yes")}catch(e){if(["QuotaExceededError","NS_ERROR_DOM_QUOTA_REACHED"].indexOf(e.name)>-1){var r=function(){};n.__proto__={setItem:r,getItem:r,removeItem:r,clear:r}}}finally{"yes"===n.getItem(e)&&n.removeItem(e)}return n}(c),l.prototype={set:function(n,e){if(n&&!t(n))c.setItem(n,function(n){return void 0===n||"function"==typeof n?n+"":JSON.stringify(n)}(e));else if(t(n))for(var r in n)this.set(r,n[r]);return this},get:function(n){if(!n){var e={};return this.each((function(n,r){return e[n]=r})),e}if("?"===n.charAt(0))return this.has(n.substr(1));var r=arguments;if(r.length>1){for(var t={},a=0,o=r.length;a<o;a++){var l=i(c.getItem(r[a]));l&&(t[r[a]]=l)}return t}return i(c.getItem(n))},clear:function(){return c.clear(),this},remove:function(n){var e=this.get(n);return c.removeItem(n),e},has:function(n){return{}.hasOwnProperty.call(this.get(),n)},keys:function(){var n=[];return this.each((function(e){n.push(e)})),n},each:function(n){for(var e=0,r=c.length;e<r;e++){var t=c.key(e);n(t,this.get(t))}return this},search:function(n){for(var e=this.keys(),r={},t=0,a=e.length;t<a;t++)e[t].indexOf(n)>-1&&(r[e[t]]=this.get(e[t]));return r}};var u=null;for(var d in l.prototype)s[d]=l.prototype[d];e.default=s},function(n,e,r){var t,a;a=function(n,e,r){function t(e,a,o){return o=Object.create(t.fn),e&&o.push.apply(o,e.addEventListener?[e]:""+e===e?/</.test(e)?((a=n.createElement(a)).innerHTML=e,a.children):a?(a=t(a)[0])?a[r](e):o:n[r](e):e),o}return t.fn=[],t.one=function(n,e){return t(n,e)[0]||null},t}(document,0,"querySelectorAll"),void 0!==(t=function(){return a}.apply(e,[]))&&(n.exports=t)},function(n,e,r){function t(n){return null==n}function a(n){(n=function(n){var e={};for(var r in n)e[r]=n[r];return e}(n||{})).whiteList=n.whiteList||o.whiteList,n.onAttr=n.onAttr||o.onAttr,n.onIgnoreAttr=n.onIgnoreAttr||o.onIgnoreAttr,n.safeAttrValue=n.safeAttrValue||o.safeAttrValue,this.options=n}var o=r(16),i=r(51);r(17),a.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,r=e.whiteList,a=e.onAttr,o=e.onIgnoreAttr,l=e.safeAttrValue;return i(n,(function(n,e,i,s,c){var u=r[i],d=!1;if(!0===u?d=u:"function"==typeof u?d=u(s):u instanceof RegExp&&(d=u.test(s)),!0!==d&&(d=!1),s=l(i,s)){var p,m={position:e,sourcePosition:n,source:c,isWhite:d};return d?t(p=a(i,s,m))?i+":"+s:p:t(p=o(i,s,m))?void 0:p}}))},n.exports=a},function(n,e,r){var t=r(17);n.exports=function(n,e){function r(){if(!o){var r=t.trim(n.slice(i,l)),a=r.indexOf(":");if(-1!==a){var c=t.trim(r.slice(0,a)),u=t.trim(r.slice(a+1));if(c){var d=e(i,s.length,c,u,r);d&&(s+=d+"; ")}}}i=l+1}";"!==(n=t.trimRight(n))[n.length-1]&&(n+=";");for(var a=n.length,o=!1,i=0,l=0,s="";l<a;l++){var c=n[l];if("/"===c&&"*"===n[l+1]){var u=n.indexOf("*/",l+2);if(-1===u)break;i=(l=u+1)+1,o=!1}else"("===c?o=!0:")"===c?o=!1:";"===c?o||r():"\n"===c&&r()}return t.trim(s)}},function(n,e,r){"use strict";var t=r(0),a=r(1),o=t("%TypeError%"),i=r(54),l=t("%Reflect.apply%",!0)||a("%Function.prototype.apply%");n.exports=function(n,e){var r=arguments.length>2?arguments[2]:[];if(!i(r))throw new o("Assertion failed: optional `argumentsList`, if provided, must be a List");return l(n,e,r)}},function(n,e,r){"use strict";var t=r(0)("%TypeError%"),a=r(19),o=r(8);n.exports=function(n,e){if("Object"!==o(n))throw new t("Assertion failed: `O` must be an Object");if(!a(e))throw new t("Assertion failed: `P` must be a Property Key");return e in n}},function(n,e,r){"use strict";var t=r(0)("%Array%"),a=!t.isArray&&r(1)("Object.prototype.toString");n.exports=t.isArray||function(n){return"[object Array]"===a(n)}},function(n,e,r){"use strict";n.exports=r(10)},function(n,e,r){"use strict";var t=r(0)("%TypeError%"),a=r(18),o=r(58),i=r(8);n.exports=function(n){if("Object"!==i(n))throw new t("Assertion failed: `obj` must be an Object");return o(a(n,"length"))}},function(n,e,r){"use strict";var t=r(63),a=r(59);n.exports=function(n){var e=a(n);return 0!==e&&(e=t(e)),0===e?0:e}},function(n,e,r){"use strict";var t=r(72),a=r(57);n.exports=function(n){var e=a(n);return e<=0?0:e>t?t:e}},function(n,e,r){"use strict";var t=r(0),a=t("%TypeError%"),o=t("%Number%"),i=t("%RegExp%"),l=t("%parseInt%"),s=r(1),c=r(73),u=r(71),d=s("String.prototype.slice"),p=c(/^0b[01]+$/i),m=c(/^0o[0-7]+$/i),h=c(/^[-+]0x[0-9a-f]+$/i),f=c(new i("["+["","​","￾"].join("")+"]","g")),g=["\t\n\v\f\r   ᠎    ","         　\u2028","\u2029\ufeff"].join(""),v=new RegExp("(^["+g+"]+)|(["+g+"]+$)","g"),b=s("String.prototype.replace"),y=r(61);n.exports=function n(e){var r=u(e)?e:y(e,o);if("symbol"==typeof r)throw new a("Cannot convert a Symbol value to a number");if("bigint"==typeof r)throw new a("Conversion from 'BigInt' to 'number' is not allowed.");if("string"==typeof r){if(p(r))return n(l(d(r,2),2));if(m(r))return n(l(d(r,2),8));if(f(r)||h(r))return NaN;var t=function(n){return b(n,v,"")}(r);if(t!==r)return n(t)}return o(r)}},function(n,e,r){"use strict";var t=r(0)("%Object%"),a=r(5);n.exports=function(n){return a(n),t(n)}},function(n,e,r){"use strict";var t=r(76);n.exports=function(n){return arguments.length>1?t(n,arguments[1]):t(n)}},function(n,e,r){"use strict";var t=r(0)("%TypeError%");n.exports=function(n,e){if(null==n)throw new t(e||"Cannot call method on "+n);return n}},function(n,e,r){"use strict";var t=r(67),a=r(68),o=r(64),i=r(70),l=r(69),s=r(74);n.exports=function(n){var e=o(n);return i(e)?0:0!==e&&l(e)?s(e)*a(t(e)):e}},function(n,e,r){"use strict";var t=r(65);n.exports=function(n){var e=t(n,Number);if("string"!=typeof e)return+e;var r=e.replace(/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g,"");return/^0[ob]|^[+-]0x/.test(r)?NaN:+r}},function(n,e,r){"use strict";n.exports=r(77)},function(n,e,r){"use strict";n.exports=function(n){return null===n?"Null":void 0===n?"Undefined":"function"==typeof n||"object"==typeof n?"Object":"number"==typeof n?"Number":"boolean"==typeof n?"Boolean":"string"==typeof n?"String":void 0}},function(n,e,r){"use strict";var t=r(0)("%Math.abs%");n.exports=function(n){return t(n)}},function(n,e,r){"use strict";var t=Math.floor;n.exports=function(n){return t(n)}},function(n,e,r){"use strict";var t=Number.isNaN||function(n){return n!=n};n.exports=Number.isFinite||function(n){return"number"==typeof n&&!t(n)&&n!==1/0&&n!==-1/0}},function(n,e,r){"use strict";n.exports=Number.isNaN||function(n){return n!=n}},function(n,e,r){"use strict";n.exports=function(n){return null===n||"function"!=typeof n&&"object"!=typeof n}},function(n,e,r){"use strict";var t=r(0),a=t("%Math%"),o=t("%Number%");n.exports=o.MAX_SAFE_INTEGER||a.pow(2,53)-1},function(n,e,r){"use strict";var t=r(0)("RegExp.prototype.test"),a=r(4);n.exports=function(n){return a(t,n)}},function(n,e,r){"use strict";n.exports=function(n){return n>=0?1:-1}},function(n,e){n.exports=function(n){var e=!0,r=!0,t=!1;if("function"==typeof n){try{n.call("f",(function(n,r,t){"object"!=typeof t&&(e=!1)})),n.call([null],(function(){"use strict";r="string"==typeof this}),"x")}catch(n){t=!0}return!t&&e&&r}return!1}},function(n,e,r){"use strict";var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator,a=r(21),o=r(10),i=r(80),l=r(82),s=function(n,e){if(null==n)throw new TypeError("Cannot call method on "+n);if("string"!=typeof e||"number"!==e&&"string"!==e)throw new TypeError('hint must be "string" or "number"');var r,t,i,l="string"===e?["toString","valueOf"]:["valueOf","toString"];for(i=0;i<l.length;++i)if(r=n[l[i]],o(r)&&(t=r.call(n),a(t)))return t;throw new TypeError("No default value")},c=function(n,e){var r=n[e];if(null!=r){if(!o(r))throw new TypeError(r+" returned for property "+e+" of object "+n+" is not a function");return r}};n.exports=function(n){if(a(n))return n;var e,r="default";if(arguments.length>1&&(arguments[1]===String?r="string":arguments[1]===Number&&(r="number")),t&&(Symbol.toPrimitive?e=c(n,Symbol.toPrimitive):l(n)&&(e=Symbol.prototype.valueOf)),void 0!==e){var o=e.call(n,r);if(a(o))return o;throw new TypeError("unable to convert exotic object to primitive")}return"default"===r&&(i(n)||l(n))&&(r="string"),s(n,"default"===r?"number":r)}},function(n,e,r){"use strict";var t=Object.prototype.toString,a=r(21),o=r(10),i=function(n){var e;if((e=arguments.length>1?arguments[1]:"[object Date]"===t.call(n)?String:Number)===String||e===Number){var r,i,l=e===String?["toString","valueOf"]:["valueOf","toString"];for(i=0;i<l.length;++i)if(o(n[l[i]])&&(r=n[l[i]](),a(r)))return r;throw new TypeError("No default value")}throw new TypeError("invalid [[DefaultValue]] hint supplied")};n.exports=function(n){return a(n)?n:arguments.length>1?i(n,arguments[1]):i(n)}},function(n,e,r){"use strict";var t=Array.prototype.slice,a=Object.prototype.toString;n.exports=function(n){var e=this;if("function"!=typeof e||"[object Function]"!==a.call(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var r,o=t.call(arguments,1),i=function(){if(this instanceof r){var a=e.apply(this,o.concat(t.call(arguments)));return Object(a)===a?a:this}return e.apply(n,o.concat(t.call(arguments)))},l=Math.max(0,e.length-o.length),s=[],c=0;c<l;c++)s.push("$"+c);if(r=Function("binder","return function ("+s.join(",")+"){ return binder.apply(this,arguments); }")(i),e.prototype){var u=function(){};u.prototype=e.prototype,r.prototype=new u,u.prototype=null}return r}},function(n,e,r){n.exports=function(){"use strict";var n=function(n,e){return function(n){var e=n.exports=function(){return new RegExp("(?:"+e.line().source+")|(?:"+e.block().source+")","gm")};e.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},e.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(e={exports:{}}),e.exports}(),e=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(r,t){void 0===t&&(t={});var a=t.colors;void 0===a&&(a=e);var o=0,i={},l=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+n().source+")","gmi");return r.replace(l,(function(n,e,r){if(r)return function(n){return'<span style="color: slategray">'+n+"</span>"}(r);if("<"===e)return"&lt;";var t;i[e]?t=i[e]:(t=a[o],i[e]=t);var l='<span style="color: #'+t+'">'+e+"</span>";return o=++o%a.length,l}))}}()},function(n,e,r){"use strict";var t=Date.prototype.getDay,a=Object.prototype.toString,o=r(24)();n.exports=function(n){return"object"==typeof n&&null!==n&&(o?function(n){try{return t.call(n),!0}catch(n){return!1}}(n):"[object Date]"===a.call(n))}},function(n,e,r){"use strict";var t=String.prototype.valueOf,a=Object.prototype.toString,o=r(24)();n.exports=function(n){return"string"==typeof n||"object"==typeof n&&(o?function(n){try{return t.call(n),!0}catch(n){return!1}}(n):"[object String]"===a.call(n))}},function(n,e,r){"use strict";var t=Object.prototype.toString;if(r(22)()){var a=Symbol.prototype.toString,o=/^Symbol\(.*\)$/;n.exports=function(n){if("symbol"==typeof n)return!0;if("[object Symbol]"!==t.call(n))return!1;try{return function(n){return"symbol"==typeof n.valueOf()&&o.test(a.call(n))}(n)}catch(n){return!1}}}else n.exports=function(n){return!1}},function(n,e,r){!function(n){"use strict";function e(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function r(n,r,t){return r&&e(n.prototype,r),t&&e(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function t(n,e){if(n){if("string"==typeof n)return a(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(n,e):void 0}}function a(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}function o(n,e){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(r)return(r=r.call(n)).next.bind(r);if(Array.isArray(n)||(r=t(n))||e&&n&&"number"==typeof n.length){r&&(n=r);var a=0;return function(){return a>=n.length?{done:!0}:{done:!1,value:n[a++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}function l(e){n.defaults=e}function s(n,e){if(e){if(w.test(n))return n.replace(k,S)}else if(C.test(n))return n.replace(_,S);return n}function c(n){return n.replace($,(function(n,e){return"colon"===(e=e.toLowerCase())?":":"#"===e.charAt(0)?"x"===e.charAt(1)?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""}))}function u(n,e){n=n.source||n,e=e||"";var r={replace:function(e,t){return t=(t=t.source||t).replace(A,"$1"),n=n.replace(e,t),r},getRegex:function(){return new RegExp(n,e)}};return r}function d(n,e,r){if(n){var t;try{t=decodeURIComponent(c(r)).replace(T,"").toLowerCase()}catch(n){return null}if(0===t.indexOf("javascript:")||0===t.indexOf("vbscript:")||0===t.indexOf("data:"))return null}e&&!j.test(r)&&(r=function(n,e){E[" "+n]||(z.test(n)?E[" "+n]=n+"/":E[" "+n]=h(n,"/",!0));var r=-1===(n=E[" "+n]).indexOf(":");return"//"===e.substring(0,2)?r?e:n.replace(I,"$1")+e:"/"===e.charAt(0)?r?e:n.replace(F,"$1")+e:n+e}(e,r));try{r=encodeURI(r).replace(/%25/g,"%")}catch(n){return null}return r}function p(n){for(var e,r,t=1;t<arguments.length;t++)for(r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function m(n,e){var r=n.replace(/\|/g,(function(n,e,r){for(var t=!1,a=e;--a>=0&&"\\"===r[a];)t=!t;return t?"|":" |"})).split(/ \|/),t=0;if(r[0].trim()||r.shift(),r.length>0&&!r[r.length-1].trim()&&r.pop(),r.length>e)r.splice(e);else for(;r.length<e;)r.push("");for(;t<r.length;t++)r[t]=r[t].trim().replace(/\\\|/g,"|");return r}function h(n,e,r){var t=n.length;if(0===t)return"";for(var a=0;a<t;){var o=n.charAt(t-a-1);if(o!==e||r){if(o===e||!r)break;a++}else a++}return n.substr(0,t-a)}function f(n){n&&n.sanitize&&n.silent}function g(n,e){if(e<1)return"";for(var r="";e>1;)1&e&&(r+=n),e>>=1,n+=n;return r+n}function v(n,e,r,t){var a=e.href,o=e.title?s(e.title):null,i=n[1].replace(/\\([\[\]])/g,"$1");if("!"!==n[0].charAt(0)){t.state.inLink=!0;var l={type:"link",raw:r,href:a,title:o,text:i,tokens:t.inlineTokens(i,[])};return t.state.inLink=!1,l}return{type:"image",raw:r,href:a,title:o,text:s(i)}}function b(n){return n.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function y(n){var e,r,t="",a=n.length;for(e=0;e<a;e++)r=n.charCodeAt(e),Math.random()>.5&&(r="x"+r.toString(16)),t+="&#"+r+";";return t}function x(n,e,r){if(null==n)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof n)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected");if("function"==typeof e&&(r=e,e=null),f(e=p({},x.defaults,e||{})),r){var t,a=e.highlight;try{t=R.lex(n,e)}catch(n){return r(n)}var o=function(n){var o;if(!n)try{e.walkTokens&&x.walkTokens(t,e.walkTokens),o=q.parse(t,e)}catch(e){n=e}return e.highlight=a,n?r(n):r(null,o)};if(!a||a.length<3)return o();if(delete e.highlight,!t.length)return o();var i=0;return x.walkTokens(t,(function(n){"code"===n.type&&(i++,setTimeout((function(){a(n.text,n.lang,(function(e,r){if(e)return o(e);null!=r&&r!==n.text&&(n.text=r,n.escaped=!0),0==--i&&o()}))}),0))})),void(0===i&&o())}try{var l=R.lex(n,e);return e.walkTokens&&x.walkTokens(l,e.walkTokens),q.parse(l,e)}catch(n){if(n.message+="\nPlease report this to https://github.com/markedjs/marked.",e.silent)return"<p>An error occurred:</p><pre>"+s(n.message+"",!0)+"</pre>";throw n}}n.defaults={baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1};var w=/[&<>"']/,k=/[&<>"']/g,C=/[<>"']|&(?!#?\w+;)/,_=/[<>"']|&(?!#?\w+;)/g,D={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},S=function(n){return D[n]},$=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,A=/(^|[^\[])\^/g,T=/[^\w:]/g,j=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i,E={},z=/^[^:]+:\/*[^/]*$/,I=/^([^:]+:)[\s\S]*$/,F=/^([^:]+:\/*[^/]*)[\s\S]*$/,O={exec:function(){}},P=function(){function e(e){this.options=e||n.defaults}var r=e.prototype;return r.space=function(n){var e=this.rules.block.newline.exec(n);if(e&&e[0].length>0)return{type:"space",raw:e[0]}},r.code=function(n){var e=this.rules.block.code.exec(n);if(e){var r=e[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:e[0],codeBlockStyle:"indented",text:this.options.pedantic?r:h(r,"\n")}}},r.fences=function(n){var e=this.rules.block.fences.exec(n);if(e){var r=e[0],t=function(n,e){var r=n.match(/^(\s+)(?:```)/);if(null===r)return e;var t=r[1];return e.split("\n").map((function(n){var e=n.match(/^\s+/);return null===e?n:e[0].length>=t.length?n.slice(t.length):n})).join("\n")}(r,e[3]||"");return{type:"code",raw:r,lang:e[2]?e[2].trim():e[2],text:t}}},r.heading=function(n){var e=this.rules.block.heading.exec(n);if(e){var r=e[2].trim();if(/#$/.test(r)){var t=h(r,"#");this.options.pedantic?r=t.trim():t&&!/ $/.test(t)||(r=t.trim())}var a={type:"heading",raw:e[0],depth:e[1].length,text:r,tokens:[]};return this.lexer.inline(a.text,a.tokens),a}},r.hr=function(n){var e=this.rules.block.hr.exec(n);if(e)return{type:"hr",raw:e[0]}},r.blockquote=function(n){var e=this.rules.block.blockquote.exec(n);if(e){var r=e[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:e[0],tokens:this.lexer.blockTokens(r,[]),text:r}}},r.list=function(n){var e=this.rules.block.list.exec(n);if(e){var r,t,a,i,l,s,c,u,d,p,m,h,f=e[1].trim(),g=f.length>1,v={type:"list",raw:"",ordered:g,start:g?+f.slice(0,-1):"",loose:!1,items:[]};f=g?"\\d{1,9}\\"+f.slice(-1):"\\"+f,this.options.pedantic&&(f=g?f:"[*+-]");for(var b=new RegExp("^( {0,3}"+f+")((?: [^\\n]*)?(?:\\n|$))");n&&(h=!1,e=b.exec(n))&&!this.rules.block.hr.test(n);){if(r=e[0],n=n.substring(r.length),u=e[2].split("\n",1)[0],d=n.split("\n",1)[0],this.options.pedantic?(i=2,m=u.trimLeft()):(i=(i=e[2].search(/[^ ]/))>4?1:i,m=u.slice(i),i+=e[1].length),s=!1,!u&&/^ *$/.test(d)&&(r+=d+"\n",n=n.substring(d.length+1),h=!0),!h)for(var y=new RegExp("^ {0,"+Math.min(3,i-1)+"}(?:[*+-]|\\d{1,9}[.)])");n&&(u=p=n.split("\n",1)[0],this.options.pedantic&&(u=u.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!y.test(u));){if(u.search(/[^ ]/)>=i||!u.trim())m+="\n"+u.slice(i);else{if(s)break;m+="\n"+u}s||u.trim()||(s=!0),r+=p+"\n",n=n.substring(p.length+1)}v.loose||(c?v.loose=!0:/\n *\n *$/.test(r)&&(c=!0)),this.options.gfm&&(t=/^\[[ xX]\] /.exec(m))&&(a="[ ] "!==t[0],m=m.replace(/^\[[ xX]\] +/,"")),v.items.push({type:"list_item",raw:r,task:!!t,checked:a,loose:!1,text:m}),v.raw+=r}v.items[v.items.length-1].raw=r.trimRight(),v.items[v.items.length-1].text=m.trimRight(),v.raw=v.raw.trimRight();var x=v.items.length;for(l=0;l<x;l++){this.lexer.state.top=!1,v.items[l].tokens=this.lexer.blockTokens(v.items[l].text,[]);var w=v.items[l].tokens.filter((function(n){return"space"===n.type})),k=w.every((function(n){for(var e,r=0,t=o(n.raw.split(""));!(e=t()).done;)if("\n"===e.value&&(r+=1),r>1)return!0;return!1}));!v.loose&&w.length&&k&&(v.loose=!0,v.items[l].loose=!0)}return v}},r.html=function(n){var e=this.rules.block.html.exec(n);if(e){var r={type:"html",raw:e[0],pre:!this.options.sanitizer&&("pre"===e[1]||"script"===e[1]||"style"===e[1]),text:e[0]};return this.options.sanitize&&(r.type="paragraph",r.text=this.options.sanitizer?this.options.sanitizer(e[0]):s(e[0]),r.tokens=[],this.lexer.inline(r.text,r.tokens)),r}},r.def=function(n){var e=this.rules.block.def.exec(n);if(e)return e[3]&&(e[3]=e[3].substring(1,e[3].length-1)),{type:"def",tag:e[1].toLowerCase().replace(/\s+/g," "),raw:e[0],href:e[2],title:e[3]}},r.table=function(n){var e=this.rules.block.table.exec(n);if(e){var r={type:"table",header:m(e[1]).map((function(n){return{text:n}})),align:e[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:e[3]&&e[3].trim()?e[3].replace(/\n[ \t]*$/,"").split("\n"):[]};if(r.header.length===r.align.length){r.raw=e[0];var t,a,o,i,l=r.align.length;for(t=0;t<l;t++)/^ *-+: *$/.test(r.align[t])?r.align[t]="right":/^ *:-+: *$/.test(r.align[t])?r.align[t]="center":/^ *:-+ *$/.test(r.align[t])?r.align[t]="left":r.align[t]=null;for(l=r.rows.length,t=0;t<l;t++)r.rows[t]=m(r.rows[t],r.header.length).map((function(n){return{text:n}}));for(l=r.header.length,a=0;a<l;a++)r.header[a].tokens=[],this.lexer.inlineTokens(r.header[a].text,r.header[a].tokens);for(l=r.rows.length,a=0;a<l;a++)for(i=r.rows[a],o=0;o<i.length;o++)i[o].tokens=[],this.lexer.inlineTokens(i[o].text,i[o].tokens);return r}}},r.lheading=function(n){var e=this.rules.block.lheading.exec(n);if(e){var r={type:"heading",raw:e[0],depth:"="===e[2].charAt(0)?1:2,text:e[1],tokens:[]};return this.lexer.inline(r.text,r.tokens),r}},r.paragraph=function(n){var e=this.rules.block.paragraph.exec(n);if(e){var r={type:"paragraph",raw:e[0],text:"\n"===e[1].charAt(e[1].length-1)?e[1].slice(0,-1):e[1],tokens:[]};return this.lexer.inline(r.text,r.tokens),r}},r.text=function(n){var e=this.rules.block.text.exec(n);if(e){var r={type:"text",raw:e[0],text:e[0],tokens:[]};return this.lexer.inline(r.text,r.tokens),r}},r.escape=function(n){var e=this.rules.inline.escape.exec(n);if(e)return{type:"escape",raw:e[0],text:s(e[1])}},r.tag=function(n){var e=this.rules.inline.tag.exec(n);if(e)return!this.lexer.state.inLink&&/^<a /i.test(e[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(e[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(e[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(e[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:e[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(e[0]):s(e[0]):e[0]}},r.link=function(n){var e=this.rules.inline.link.exec(n);if(e){var r=e[2].trim();if(!this.options.pedantic&&/^</.test(r)){if(!/>$/.test(r))return;var t=h(r.slice(0,-1),"\\");if((r.length-t.length)%2==0)return}else{var a=function(n,e){if(-1===n.indexOf(e[1]))return-1;for(var r=n.length,t=0,a=0;a<r;a++)if("\\"===n[a])a++;else if(n[a]===e[0])t++;else if(n[a]===e[1]&&--t<0)return a;return-1}(e[2],"()");if(a>-1){var o=(0===e[0].indexOf("!")?5:4)+e[1].length+a;e[2]=e[2].substring(0,a),e[0]=e[0].substring(0,o).trim(),e[3]=""}}var i=e[2],l="";if(this.options.pedantic){var s=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(i);s&&(i=s[1],l=s[3])}else l=e[3]?e[3].slice(1,-1):"";return i=i.trim(),/^</.test(i)&&(i=this.options.pedantic&&!/>$/.test(r)?i.slice(1):i.slice(1,-1)),v(e,{href:i?i.replace(this.rules.inline._escapes,"$1"):i,title:l?l.replace(this.rules.inline._escapes,"$1"):l},e[0],this.lexer)}},r.reflink=function(n,e){var r;if((r=this.rules.inline.reflink.exec(n))||(r=this.rules.inline.nolink.exec(n))){var t=(r[2]||r[1]).replace(/\s+/g," ");if(!(t=e[t.toLowerCase()])||!t.href){var a=r[0].charAt(0);return{type:"text",raw:a,text:a}}return v(r,t,r[0],this.lexer)}},r.emStrong=function(n,e,r){void 0===r&&(r="");var t=this.rules.inline.emStrong.lDelim.exec(n);if(t&&(!t[3]||!r.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var a=t[1]||t[2]||"";if(!a||a&&(""===r||this.rules.inline.punctuation.exec(r))){var o,i,l=t[0].length-1,s=l,c=0,u="*"===t[0][0]?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(u.lastIndex=0,e=e.slice(-1*n.length+l);null!=(t=u.exec(e));)if(o=t[1]||t[2]||t[3]||t[4]||t[5]||t[6])if(i=o.length,t[3]||t[4])s+=i;else if(!((t[5]||t[6])&&l%3)||(l+i)%3){if(!((s-=i)>0)){if(i=Math.min(i,i+s+c),Math.min(l,i)%2){var d=n.slice(1,l+t.index+i);return{type:"em",raw:n.slice(0,l+t.index+i+1),text:d,tokens:this.lexer.inlineTokens(d,[])}}var p=n.slice(2,l+t.index+i-1);return{type:"strong",raw:n.slice(0,l+t.index+i+1),text:p,tokens:this.lexer.inlineTokens(p,[])}}}else c+=i}}},r.codespan=function(n){var e=this.rules.inline.code.exec(n);if(e){var r=e[2].replace(/\n/g," "),t=/[^ ]/.test(r),a=/^ /.test(r)&&/ $/.test(r);return t&&a&&(r=r.substring(1,r.length-1)),r=s(r,!0),{type:"codespan",raw:e[0],text:r}}},r.br=function(n){var e=this.rules.inline.br.exec(n);if(e)return{type:"br",raw:e[0]}},r.del=function(n){var e=this.rules.inline.del.exec(n);if(e)return{type:"del",raw:e[0],text:e[2],tokens:this.lexer.inlineTokens(e[2],[])}},r.autolink=function(n,e){var r,t,a=this.rules.inline.autolink.exec(n);if(a)return t="@"===a[2]?"mailto:"+(r=s(this.options.mangle?e(a[1]):a[1])):r=s(a[1]),{type:"link",raw:a[0],text:r,href:t,tokens:[{type:"text",raw:r,text:r}]}},r.url=function(n,e){var r;if(r=this.rules.inline.url.exec(n)){var t,a;if("@"===r[2])a="mailto:"+(t=s(this.options.mangle?e(r[0]):r[0]));else{var o;do{o=r[0],r[0]=this.rules.inline._backpedal.exec(r[0])[0]}while(o!==r[0]);t=s(r[0]),a="www."===r[1]?"http://"+t:t}return{type:"link",raw:r[0],text:t,href:a,tokens:[{type:"text",raw:t,text:t}]}}},r.inlineText=function(n,e){var r,t=this.rules.inline.text.exec(n);if(t)return r=this.lexer.state.inRawBlock?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):s(t[0]):t[0]:s(this.options.smartypants?e(t[0]):t[0]),{type:"text",raw:t[0],text:r}},e}(),M={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:O,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\.|[^\[\]\\])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};M.def=u(M.def).replace("label",M._label).replace("title",M._title).getRegex(),M.bullet=/(?:[*+-]|\d{1,9}[.)])/,M.listItemStart=u(/^( *)(bull) */).replace("bull",M.bullet).getRegex(),M.list=u(M.list).replace(/bull/g,M.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+M.def.source+")").getRegex(),M._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",M._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,M.html=u(M.html,"i").replace("comment",M._comment).replace("tag",M._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),M.paragraph=u(M._paragraph).replace("hr",M.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",M._tag).getRegex(),M.blockquote=u(M.blockquote).replace("paragraph",M.paragraph).getRegex(),M.normal=p({},M),M.gfm=p({},M.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),M.gfm.table=u(M.gfm.table).replace("hr",M.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",M._tag).getRegex(),M.gfm.paragraph=u(M._paragraph).replace("hr",M.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",M.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",M._tag).getRegex(),M.pedantic=p({},M.normal,{html:u("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",M._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:O,paragraph:u(M.normal._paragraph).replace("hr",M.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",M.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var L={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:O,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:O,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/,_punctuation:"!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~"};L.punctuation=u(L.punctuation).replace(/punctuation/g,L._punctuation).getRegex(),L.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,L.escapedEmSt=/\\\*|\\_/g,L._comment=u(M._comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),L.emStrong.lDelim=u(L.emStrong.lDelim).replace(/punct/g,L._punctuation).getRegex(),L.emStrong.rDelimAst=u(L.emStrong.rDelimAst,"g").replace(/punct/g,L._punctuation).getRegex(),L.emStrong.rDelimUnd=u(L.emStrong.rDelimUnd,"g").replace(/punct/g,L._punctuation).getRegex(),L._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,L._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,L._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,L.autolink=u(L.autolink).replace("scheme",L._scheme).replace("email",L._email).getRegex(),L._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,L.tag=u(L.tag).replace("comment",L._comment).replace("attribute",L._attribute).getRegex(),L._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,L._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,L._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,L.link=u(L.link).replace("label",L._label).replace("href",L._href).replace("title",L._title).getRegex(),L.reflink=u(L.reflink).replace("label",L._label).replace("ref",M._label).getRegex(),L.nolink=u(L.nolink).replace("ref",M._label).getRegex(),L.reflinkSearch=u(L.reflinkSearch,"g").replace("reflink",L.reflink).replace("nolink",L.nolink).getRegex(),L.normal=p({},L),L.pedantic=p({},L.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:u(/^!?\[(label)\]\((.*?)\)/).replace("label",L._label).getRegex(),reflink:u(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",L._label).getRegex()}),L.gfm=p({},L.normal,{escape:u(L.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),L.gfm.url=u(L.gfm.url,"i").replace("email",L.gfm._extended_email).getRegex(),L.breaks=p({},L.gfm,{br:u(L.br).replace("{2,}","*").getRegex(),text:u(L.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});var R=function(){function e(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||n.defaults,this.options.tokenizer=this.options.tokenizer||new P,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var r={block:M.normal,inline:L.normal};this.options.pedantic?(r.block=M.pedantic,r.inline=L.pedantic):this.options.gfm&&(r.block=M.gfm,this.options.breaks?r.inline=L.breaks:r.inline=L.gfm),this.tokenizer.rules=r}e.lex=function(n,r){return new e(r).lex(n)},e.lexInline=function(n,r){return new e(r).inlineTokens(n)};var t=e.prototype;return t.lex=function(n){n=n.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.blockTokens(n,this.tokens);for(var e;e=this.inlineQueue.shift();)this.inlineTokens(e.src,e.tokens);return this.tokens},t.blockTokens=function(n,e){var r,t,a,o,i=this;for(void 0===e&&(e=[]),this.options.pedantic&&(n=n.replace(/^ +$/gm,""));n;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some((function(t){return!!(r=t.call({lexer:i},n,e))&&(n=n.substring(r.raw.length),e.push(r),!0)}))))if(r=this.tokenizer.space(n))n=n.substring(r.raw.length),1===r.raw.length&&e.length>0?e[e.length-1].raw+="\n":e.push(r);else if(r=this.tokenizer.code(n))n=n.substring(r.raw.length),!(t=e[e.length-1])||"paragraph"!==t.type&&"text"!==t.type?e.push(r):(t.raw+="\n"+r.raw,t.text+="\n"+r.text,this.inlineQueue[this.inlineQueue.length-1].src=t.text);else if(r=this.tokenizer.fences(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.heading(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.hr(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.blockquote(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.list(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.html(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.def(n))n=n.substring(r.raw.length),!(t=e[e.length-1])||"paragraph"!==t.type&&"text"!==t.type?this.tokens.links[r.tag]||(this.tokens.links[r.tag]={href:r.href,title:r.title}):(t.raw+="\n"+r.raw,t.text+="\n"+r.raw,this.inlineQueue[this.inlineQueue.length-1].src=t.text);else if(r=this.tokenizer.table(n))n=n.substring(r.raw.length),e.push(r);else if(r=this.tokenizer.lheading(n))n=n.substring(r.raw.length),e.push(r);else if(a=n,this.options.extensions&&this.options.extensions.startBlock&&function(){var e=1/0,r=n.slice(1),t=void 0;i.options.extensions.startBlock.forEach((function(n){"number"==typeof(t=n.call({lexer:this},r))&&t>=0&&(e=Math.min(e,t))})),e<1/0&&e>=0&&(a=n.substring(0,e+1))}(),this.state.top&&(r=this.tokenizer.paragraph(a)))t=e[e.length-1],o&&"paragraph"===t.type?(t.raw+="\n"+r.raw,t.text+="\n"+r.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=t.text):e.push(r),o=a.length!==n.length,n=n.substring(r.raw.length);else if(r=this.tokenizer.text(n))n=n.substring(r.raw.length),(t=e[e.length-1])&&"text"===t.type?(t.raw+="\n"+r.raw,t.text+="\n"+r.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=t.text):e.push(r);else if(n){var l="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent)break;throw new Error(l)}return this.state.top=!0,e},t.inline=function(n,e){this.inlineQueue.push({src:n,tokens:e})},t.inlineTokens=function(n,e){var r=this;void 0===e&&(e=[]);var t,a,o,i,l,s,c=n;if(this.tokens.links){var u=Object.keys(this.tokens.links);if(u.length>0)for(;null!=(i=this.tokenizer.rules.inline.reflinkSearch.exec(c));)u.includes(i[0].slice(i[0].lastIndexOf("[")+1,-1))&&(c=c.slice(0,i.index)+"["+g("a",i[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(i=this.tokenizer.rules.inline.blockSkip.exec(c));)c=c.slice(0,i.index)+"["+g("a",i[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;null!=(i=this.tokenizer.rules.inline.escapedEmSt.exec(c));)c=c.slice(0,i.index)+"++"+c.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;n;)if(l||(s=""),l=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some((function(a){return!!(t=a.call({lexer:r},n,e))&&(n=n.substring(t.raw.length),e.push(t),!0)}))))if(t=this.tokenizer.escape(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.tag(n))n=n.substring(t.raw.length),(a=e[e.length-1])&&"text"===t.type&&"text"===a.type?(a.raw+=t.raw,a.text+=t.text):e.push(t);else if(t=this.tokenizer.link(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.reflink(n,this.tokens.links))n=n.substring(t.raw.length),(a=e[e.length-1])&&"text"===t.type&&"text"===a.type?(a.raw+=t.raw,a.text+=t.text):e.push(t);else if(t=this.tokenizer.emStrong(n,c,s))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.codespan(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.br(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.del(n))n=n.substring(t.raw.length),e.push(t);else if(t=this.tokenizer.autolink(n,y))n=n.substring(t.raw.length),e.push(t);else if(this.state.inLink||!(t=this.tokenizer.url(n,y))){if(o=n,this.options.extensions&&this.options.extensions.startInline&&function(){var e=1/0,t=n.slice(1),a=void 0;r.options.extensions.startInline.forEach((function(n){"number"==typeof(a=n.call({lexer:this},t))&&a>=0&&(e=Math.min(e,a))})),e<1/0&&e>=0&&(o=n.substring(0,e+1))}(),t=this.tokenizer.inlineText(o,b))n=n.substring(t.raw.length),"_"!==t.raw.slice(-1)&&(s=t.raw.slice(-1)),l=!0,(a=e[e.length-1])&&"text"===a.type?(a.raw+=t.raw,a.text+=t.text):e.push(t);else if(n){var d="Infinite loop on byte: "+n.charCodeAt(0);if(this.options.silent)break;throw new Error(d)}}else n=n.substring(t.raw.length),e.push(t);return e},r(e,null,[{key:"rules",get:function(){return{block:M,inline:L}}}]),e}(),B=function(){function e(e){this.options=e||n.defaults}var r=e.prototype;return r.code=function(n,e,r){var t=(e||"").match(/\S*/)[0];if(this.options.highlight){var a=this.options.highlight(n,t);null!=a&&a!==n&&(r=!0,n=a)}return n=n.replace(/\n$/,"")+"\n",t?'<pre><code class="'+this.options.langPrefix+s(t,!0)+'">'+(r?n:s(n,!0))+"</code></pre>\n":"<pre><code>"+(r?n:s(n,!0))+"</code></pre>\n"},r.blockquote=function(n){return"<blockquote>\n"+n+"</blockquote>\n"},r.html=function(n){return n},r.heading=function(n,e,r,t){return this.options.headerIds?"<h"+e+' id="'+this.options.headerPrefix+t.slug(r)+'">'+n+"</h"+e+">\n":"<h"+e+">"+n+"</h"+e+">\n"},r.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},r.list=function(n,e,r){var t=e?"ol":"ul";return"<"+t+(e&&1!==r?' start="'+r+'"':"")+">\n"+n+"</"+t+">\n"},r.listitem=function(n){return"<li>"+n+"</li>\n"},r.checkbox=function(n){return"<input "+(n?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},r.paragraph=function(n){return"<p>"+n+"</p>\n"},r.table=function(n,e){return e&&(e="<tbody>"+e+"</tbody>"),"<table>\n<thead>\n"+n+"</thead>\n"+e+"</table>\n"},r.tablerow=function(n){return"<tr>\n"+n+"</tr>\n"},r.tablecell=function(n,e){var r=e.header?"th":"td";return(e.align?"<"+r+' align="'+e.align+'">':"<"+r+">")+n+"</"+r+">\n"},r.strong=function(n){return"<strong>"+n+"</strong>"},r.em=function(n){return"<em>"+n+"</em>"},r.codespan=function(n){return"<code>"+n+"</code>"},r.br=function(){return this.options.xhtml?"<br/>":"<br>"},r.del=function(n){return"<del>"+n+"</del>"},r.link=function(n,e,r){if(null===(n=d(this.options.sanitize,this.options.baseUrl,n)))return r;var t='<a href="'+s(n)+'"';return e&&(t+=' title="'+e+'"'),t+">"+r+"</a>"},r.image=function(n,e,r){if(null===(n=d(this.options.sanitize,this.options.baseUrl,n)))return r;var t='<img src="'+n+'" alt="'+r+'"';return e&&(t+=' title="'+e+'"'),t+(this.options.xhtml?"/>":">")},r.text=function(n){return n},e}(),N=function(){function n(){}var e=n.prototype;return e.strong=function(n){return n},e.em=function(n){return n},e.codespan=function(n){return n},e.del=function(n){return n},e.html=function(n){return n},e.text=function(n){return n},e.link=function(n,e,r){return""+r},e.image=function(n,e,r){return""+r},e.br=function(){return""},n}(),U=function(){function n(){this.seen={}}var e=n.prototype;return e.serialize=function(n){return n.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},e.getNextSafeSlug=function(n,e){var r=n,t=0;if(this.seen.hasOwnProperty(r)){t=this.seen[n];do{r=n+"-"+ ++t}while(this.seen.hasOwnProperty(r))}return e||(this.seen[n]=t,this.seen[r]=0),r},e.slug=function(n,e){void 0===e&&(e={});var r=this.serialize(n);return this.getNextSafeSlug(r,e.dryrun)},n}(),q=function(){function e(e){this.options=e||n.defaults,this.options.renderer=this.options.renderer||new B,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new N,this.slugger=new U}e.parse=function(n,r){return new e(r).parse(n)},e.parseInline=function(n,r){return new e(r).parseInline(n)};var r=e.prototype;return r.parse=function(n,e){void 0===e&&(e=!0);var r,t,a,o,i,l,s,u,d,p,m,h,f,g,v,b,y,x,w,k="",C=n.length;for(r=0;r<C;r++)if(p=n[r],!(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[p.type])||!1===(w=this.options.extensions.renderers[p.type].call({parser:this},p))&&["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(p.type))switch(p.type){case"space":continue;case"hr":k+=this.renderer.hr();continue;case"heading":k+=this.renderer.heading(this.parseInline(p.tokens),p.depth,c(this.parseInline(p.tokens,this.textRenderer)),this.slugger);continue;case"code":k+=this.renderer.code(p.text,p.lang,p.escaped);continue;case"table":for(u="",s="",o=p.header.length,t=0;t<o;t++)s+=this.renderer.tablecell(this.parseInline(p.header[t].tokens),{header:!0,align:p.align[t]});for(u+=this.renderer.tablerow(s),d="",o=p.rows.length,t=0;t<o;t++){for(s="",i=(l=p.rows[t]).length,a=0;a<i;a++)s+=this.renderer.tablecell(this.parseInline(l[a].tokens),{header:!1,align:p.align[a]});d+=this.renderer.tablerow(s)}k+=this.renderer.table(u,d);continue;case"blockquote":d=this.parse(p.tokens),k+=this.renderer.blockquote(d);continue;case"list":for(m=p.ordered,h=p.start,f=p.loose,o=p.items.length,d="",t=0;t<o;t++)b=(v=p.items[t]).checked,y=v.task,g="",v.task&&(x=this.renderer.checkbox(b),f?v.tokens.length>0&&"paragraph"===v.tokens[0].type?(v.tokens[0].text=x+" "+v.tokens[0].text,v.tokens[0].tokens&&v.tokens[0].tokens.length>0&&"text"===v.tokens[0].tokens[0].type&&(v.tokens[0].tokens[0].text=x+" "+v.tokens[0].tokens[0].text)):v.tokens.unshift({type:"text",text:x}):g+=x),g+=this.parse(v.tokens,f),d+=this.renderer.listitem(g,y,b);k+=this.renderer.list(d,m,h);continue;case"html":k+=this.renderer.html(p.text);continue;case"paragraph":k+=this.renderer.paragraph(this.parseInline(p.tokens));continue;case"text":for(d=p.tokens?this.parseInline(p.tokens):p.text;r+1<C&&"text"===n[r+1].type;)d+="\n"+((p=n[++r]).tokens?this.parseInline(p.tokens):p.text);k+=e?this.renderer.paragraph(d):d;continue;default:var _='Token with "'+p.type+'" type was not found.';if(this.options.silent)return;throw new Error(_)}else k+=w||"";return k},r.parseInline=function(n,e){e=e||this.renderer;var r,t,a,o="",i=n.length;for(r=0;r<i;r++)if(t=n[r],!(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[t.type])||!1===(a=this.options.extensions.renderers[t.type].call({parser:this},t))&&["escape","html","link","image","strong","em","codespan","br","del","text"].includes(t.type))switch(t.type){case"escape":o+=e.text(t.text);break;case"html":o+=e.html(t.text);break;case"link":o+=e.link(t.href,t.title,this.parseInline(t.tokens,e));break;case"image":o+=e.image(t.href,t.title,t.text);break;case"strong":o+=e.strong(this.parseInline(t.tokens,e));break;case"em":o+=e.em(this.parseInline(t.tokens,e));break;case"codespan":o+=e.codespan(t.text);break;case"br":o+=e.br();break;case"del":o+=e.del(this.parseInline(t.tokens,e));break;case"text":o+=e.text(t.text);break;default:var l='Token with "'+t.type+'" type was not found.';if(this.options.silent)return;throw new Error(l)}else o+=a||"";return o},e}();x.options=x.setOptions=function(n){return p(x.defaults,n),l(x.defaults),x},x.getDefaults=i,x.defaults=n.defaults,x.use=function(){for(var n=arguments.length,e=new Array(n),r=0;r<n;r++)e[r]=arguments[r];var t,a=p.apply(void 0,[{}].concat(e)),o=x.defaults.extensions||{renderers:{},childTokens:{}};e.forEach((function(n){if(n.extensions&&(t=!0,n.extensions.forEach((function(n){if(!n.name)throw new Error("extension name required");if(n.renderer){var e=o.renderers?o.renderers[n.name]:null;o.renderers[n.name]=e?function(){for(var r=arguments.length,t=new Array(r),a=0;a<r;a++)t[a]=arguments[a];var o=n.renderer.apply(this,t);return!1===o&&(o=e.apply(this,t)),o}:n.renderer}if(n.tokenizer){if(!n.level||"block"!==n.level&&"inline"!==n.level)throw new Error("extension level must be 'block' or 'inline'");o[n.level]?o[n.level].unshift(n.tokenizer):o[n.level]=[n.tokenizer],n.start&&("block"===n.level?o.startBlock?o.startBlock.push(n.start):o.startBlock=[n.start]:"inline"===n.level&&(o.startInline?o.startInline.push(n.start):o.startInline=[n.start]))}n.childTokens&&(o.childTokens[n.name]=n.childTokens)}))),n.renderer&&function(){var e=x.defaults.renderer||new B;for(var r in n.renderer)!function(r){var t=e[r];e[r]=function(){for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];var l=n.renderer[r].apply(e,o);return!1===l&&(l=t.apply(e,o)),l}}(r);a.renderer=e}(),n.tokenizer&&function(){var e=x.defaults.tokenizer||new P;for(var r in n.tokenizer)!function(r){var t=e[r];e[r]=function(){for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];var l=n.tokenizer[r].apply(e,o);return!1===l&&(l=t.apply(e,o)),l}}(r);a.tokenizer=e}(),n.walkTokens){var e=x.defaults.walkTokens;a.walkTokens=function(r){n.walkTokens.call(this,r),e&&e.call(this,r)}}t&&(a.extensions=o),x.setOptions(a)}))},x.walkTokens=function(n,e){for(var r,t=o(n);!(r=t()).done;)!function(){var n=r.value;switch(e.call(x,n),n.type){case"table":for(var t,a=o(n.header);!(t=a()).done;){var i=t.value;x.walkTokens(i.tokens,e)}for(var l,s=o(n.rows);!(l=s()).done;)for(var c,u=o(l.value);!(c=u()).done;){var d=c.value;x.walkTokens(d.tokens,e)}break;case"list":x.walkTokens(n.items,e);break;default:x.defaults.extensions&&x.defaults.extensions.childTokens&&x.defaults.extensions.childTokens[n.type]?x.defaults.extensions.childTokens[n.type].forEach((function(r){x.walkTokens(n[r],e)})):n.tokens&&x.walkTokens(n.tokens,e)}}()},x.parseInline=function(n,e){if(null==n)throw new Error("marked.parseInline(): input parameter is undefined or null");if("string"!=typeof n)throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected");f(e=p({},x.defaults,e||{}));try{var r=R.lexInline(n,e);return e.walkTokens&&x.walkTokens(r,e.walkTokens),q.parseInline(r,e)}catch(n){if(n.message+="\nPlease report this to https://github.com/markedjs/marked.",e.silent)return"<p>An error occurred:</p><pre>"+s(n.message+"",!0)+"</pre>";throw n}},x.Parser=q,x.parser=q.parse,x.Renderer=B,x.TextRenderer=N,x.Lexer=R,x.lexer=R.lex,x.Tokenizer=P,x.Slugger=U,x.parse=x;var V=x.options,H=x.setOptions,W=x.use,G=x.walkTokens,Q=x.parseInline,K=x,Y=q.parse,J=R.lex;n.Lexer=R,n.Parser=q,n.Renderer=B,n.Slugger=U,n.TextRenderer=N,n.Tokenizer=P,n.getDefaults=i,n.lexer=J,n.marked=x,n.options=V,n.parse=K,n.parseInline=Q,n.parser=Y,n.setOptions=H,n.use=W,n.walkTokens=G,Object.defineProperty(n,"__esModule",{value:!0})}(e)},function(n,e,r){"use strict";function t(n,e){var r=function(n){var e={};return l(s(n),(function(n){var r=n[0],t=n[1];l(t,(function(n){e[n]=r}))})),e}(n.pluralTypeToLanguages);return r[e]||r[h.call(e,/-/,1)[0]]||r.en}function a(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(n,e,r,t,a){if("string"!=typeof n)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==e)return n;var o=n,i=t||y,l="number"==typeof e?{smart_count:e}:e;if(null!=l.smart_count&&n){var s=a||v,c=h.call(n,f),p=function(n,e,r){return n.pluralTypes[e](r)}(s,b(s,r||"en"),l.smart_count);o=d(c[p]||c[0])}return m.call(o,i,(function(n,e){return u(l,e)&&null!=l[e]?l[e]:n}))}function i(n){var e=n||{};this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||"en";var r=e.allowMissing?o:null;this.onMissingKey="function"==typeof e.onMissingKey?e.onMissingKey:r,this.warn=e.warn||p,this.tokenRegex=function(n){var e=n&&n.prefix||"%{",r=n&&n.suffix||"}";if(e===f||r===f)throw new RangeError('"'+f+'" token is reserved for pluralization');return new RegExp(a(e)+"(.*?)"+a(r),"g")}(e.interpolation),this.pluralRules=e.pluralRules||v}var l=r(43),s=r(89),c=r(94),u=r(25),d=r(92),p=function(n){c(!1,n)},m=String.prototype.replace,h=String.prototype.split,f="||||",g=function(n){var e=n%100,r=e%10;return 11!==e&&1===r?0:2<=r&&r<=4&&!(e>=12&&e<=14)?1:2},v={pluralTypes:{arabic:function(n){if(n<3)return n;var e=n%100;return e>=3&&e<=10?3:e>=11?4:5},bosnian_serbian:g,chinese:function(){return 0},croatian:g,french:function(n){return n>=2?1:0},german:function(n){return 1!==n?1:0},russian:g,lithuanian:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=9&&(n%100<11||n%100>19)?1:2},czech:function(n){return 1===n?0:n>=2&&n<=4?1:2},polish:function(n){if(1===n)return 0;var e=n%10;return 2<=e&&e<=4&&(n%100<10||n%100>=20)?1:2},icelandic:function(n){return n%10!=1||n%100==11?1:0},slovenian:function(n){var e=n%100;return 1===e?0:2===e?1:3===e||4===e?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},b=function(){var n={};return function(e,r){var a=n[r];return a&&!e.pluralTypes[a]&&(a=null,n[r]=a),a||(a=t(e,r))&&(n[r]=a),a}}(),y=/%\{(.*?)\}/g;i.prototype.locale=function(n){return n&&(this.currentLocale=n),this.currentLocale},i.prototype.extend=function(n,e){l(s(n||{}),(function(n){var r=n[0],t=n[1],a=e?e+"."+r:r;"object"==typeof t?this.extend(t,a):this.phrases[a]=t}),this)},i.prototype.unset=function(n,e){"string"==typeof n?delete this.phrases[n]:l(s(n||{}),(function(n){var r=n[0],t=n[1],a=e?e+"."+r:r;"object"==typeof t?this.unset(t,a):delete this.phrases[a]}),this)},i.prototype.clear=function(){this.phrases={}},i.prototype.replace=function(n){this.clear(),this.extend(n)},i.prototype.t=function(n,e){var r,t,a=null==e?{}:e;return"string"==typeof this.phrases[n]?r=this.phrases[n]:"string"==typeof a._?r=a._:this.onMissingKey?t=(0,this.onMissingKey)(n,a,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+n+'"'),t=n),"string"==typeof r&&(t=o(r,a,this.currentLocale,this.tokenRegex,this.pluralRules)),t},i.prototype.has=function(n){return u(this.phrases,n)},i.transformPhrase=function(n,e,r){return o(n,e,r)},n.exports=i},function(n,e,r){"use strict";function t(n){if(null==n)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(n)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var a=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;n.exports=function(){try{if(!Object.assign)return!1;var n=new String("abc");if(n[5]="de","5"===Object.getOwnPropertyNames(n)[0])return!1;for(var e={},r=0;r<10;r++)e["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(n){return e[n]})).join(""))return!1;var t={};return"abcdefghijklmnopqrst".split("").forEach((function(n){t[n]=n})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},t)).join("")}catch(n){return!1}}()?Object.assign:function(n,e){for(var r,l,s=t(n),c=1;c<arguments.length;c++){for(var u in r=Object(arguments[c]))o.call(r,u)&&(s[u]=r[u]);if(a){l=a(r);for(var d=0;d<l.length;d++)i.call(r,l[d])&&(s[l[d]]=r[l[d]])}}return s}},function(n,e,r){function t(n,e){if(n===1/0||n===-1/0||n!=n||n&&n>-1e3&&n<1e3||N.call(/e/,e))return e;var r=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof n){var t=n<0?-H(-n):H(n);if(t!==n){var a=String(t),o=M.call(e,a.length+1);return L.call(a,r,"$&_")+"."+L.call(L.call(o,/([0-9]{3})/g,"$&_"),/_$/,"")}}return L.call(e,r,"$&_")}function a(n,e,r){var t="double"===(r.quoteStyle||e)?'"':"'";return t+n+t}function o(n){return L.call(String(n),/"/g,"&quot;")}function i(n){return!("[object Array]"!==c(n)||Y&&"object"==typeof n&&Y in n)}function l(n){if(K)return n&&"object"==typeof n&&n instanceof Symbol;if("symbol"==typeof n)return!0;if(!n||"object"!=typeof n||!Q)return!1;try{return Q.call(n),!0}catch(n){}return!1}function s(n,e){return en.call(n,e)}function c(n){return F.call(n)}function u(n){if(n.name)return n.name;var e=P.call(O.call(n),/^function\s*([\w$]+)/);return e?e[1]:null}function d(n,e){if(n.indexOf)return n.indexOf(e);for(var r=0,t=n.length;r<t;r++)if(n[r]===e)return r;return-1}function p(n){if(!j||!n||"object"!=typeof n)return!1;try{j.call(n,j);try{E.call(n,E)}catch(n){return!0}return n instanceof WeakMap}catch(n){}return!1}function m(n){if(!z||!n||"object"!=typeof n)return!1;try{return z.call(n),!0}catch(n){}return!1}function h(n){if(!E||!n||"object"!=typeof n)return!1;try{E.call(n,E);try{j.call(n,j)}catch(n){return!0}return n instanceof WeakSet}catch(n){}return!1}function f(n,e){if(n.length>e.maxStringLength){var r=n.length-e.maxStringLength,t="... "+r+" more character"+(r>1?"s":"");return f(M.call(n,0,e.maxStringLength),e)+t}return a(L.call(L.call(n,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,g),"single",e)}function g(n){var e=n.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return r?"\\"+r:"\\x"+(e<16?"0":"")+R.call(e.toString(16))}function v(n){return"Object("+n+")"}function b(n){return n+" { ? }"}function y(n,e,r,t){return n+" ("+e+") {"+(t?x(r,t):q.call(r,", "))+"}"}function x(n,e){if(0===n.length)return"";var r="\n"+e.prev+e.base;return r+q.call(n,","+r)+"\n"+e.prev}function w(n,e){var r=i(n),t=[];if(r){t.length=n.length;for(var a=0;a<n.length;a++)t[a]=s(n,a)?e(n[a],n):""}var o,l="function"==typeof G?G(n):[];if(K){o={};for(var c=0;c<l.length;c++)o["$"+l[c]]=l[c]}for(var u in n)s(n,u)&&(r&&String(Number(u))===u&&u<n.length||K&&o["$"+u]instanceof Symbol||(N.call(/[^\w$]/,u)?t.push(e(u,n)+": "+e(n[u],n)):t.push(u+": "+e(n[u],n))));if("function"==typeof G)for(var d=0;d<l.length;d++)J.call(n,l[d])&&t.push("["+e(l[d])+"]: "+e(n[l[d]],n));return t}var k="function"==typeof Map&&Map.prototype,C=Object.getOwnPropertyDescriptor&&k?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,_=k&&C&&"function"==typeof C.get?C.get:null,D=k&&Map.prototype.forEach,S="function"==typeof Set&&Set.prototype,$=Object.getOwnPropertyDescriptor&&S?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,A=S&&$&&"function"==typeof $.get?$.get:null,T=S&&Set.prototype.forEach,j="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,E="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,z="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,I=Boolean.prototype.valueOf,F=Object.prototype.toString,O=Function.prototype.toString,P=String.prototype.match,M=String.prototype.slice,L=String.prototype.replace,R=String.prototype.toUpperCase,B=String.prototype.toLowerCase,N=RegExp.prototype.test,U=Array.prototype.concat,q=Array.prototype.join,V=Array.prototype.slice,H=Math.floor,W="function"==typeof BigInt?BigInt.prototype.valueOf:null,G=Object.getOwnPropertySymbols,Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,K="function"==typeof Symbol&&"object"==typeof Symbol.iterator,Y="function"==typeof Symbol&&Symbol.toStringTag&&(Symbol.toStringTag,1)?Symbol.toStringTag:null,J=Object.prototype.propertyIsEnumerable,Z=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(n){return n.__proto__}:null),X=r(102).custom,nn=X&&l(X)?X:null;n.exports=function n(e,r,g,k){function C(e,r,t){if(r&&(k=V.call(k)).push(r),t){var a={depth:S.depth};return s(S,"quoteStyle")&&(a.quoteStyle=S.quoteStyle),n(e,a,g+1,k)}return n(e,S,g+1,k)}var S=r||{};if(s(S,"quoteStyle")&&"single"!==S.quoteStyle&&"double"!==S.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(s(S,"maxStringLength")&&("number"==typeof S.maxStringLength?S.maxStringLength<0&&S.maxStringLength!==1/0:null!==S.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var $=!s(S,"customInspect")||S.customInspect;if("boolean"!=typeof $&&"symbol"!==$)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(s(S,"indent")&&null!==S.indent&&"\t"!==S.indent&&!(parseInt(S.indent,10)===S.indent&&S.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(s(S,"numericSeparator")&&"boolean"!=typeof S.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var j=S.numericSeparator;if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return e?"true":"false";if("string"==typeof e)return f(e,S);if("number"==typeof e){if(0===e)return 1/0/e>0?"0":"-0";var E=String(e);return j?t(e,E):E}if("bigint"==typeof e){var z=String(e)+"n";return j?t(e,z):z}var F=void 0===S.depth?5:S.depth;if(void 0===g&&(g=0),g>=F&&F>0&&"object"==typeof e)return i(e)?"[Array]":"[Object]";var O=function(n,e){var r;if("\t"===n.indent)r="\t";else{if(!("number"==typeof n.indent&&n.indent>0))return null;r=q.call(Array(n.indent+1)," ")}return{base:r,prev:q.call(Array(e+1),r)}}(S,g);if(void 0===k)k=[];else if(d(k,e)>=0)return"[Circular]";if("function"==typeof e){var P=u(e),R=w(e,C);return"[Function"+(P?": "+P:" (anonymous)")+"]"+(R.length>0?" { "+q.call(R,", ")+" }":"")}if(l(e)){var N=K?L.call(String(e),/^(Symbol\(.*\))_[^)]*$/,"$1"):Q.call(e);return"object"!=typeof e||K?N:v(N)}if(function(n){return!(!n||"object"!=typeof n)&&("undefined"!=typeof HTMLElement&&n instanceof HTMLElement||"string"==typeof n.nodeName&&"function"==typeof n.getAttribute)}(e)){for(var H="<"+B.call(String(e.nodeName)),G=e.attributes||[],X=0;X<G.length;X++)H+=" "+G[X].name+"="+a(o(G[X].value),"double",S);return H+=">",e.childNodes&&e.childNodes.length&&(H+="..."),H+"</"+B.call(String(e.nodeName))+">"}if(i(e)){if(0===e.length)return"[]";var en=w(e,C);return O&&!function(n){for(var e=0;e<n.length;e++)if(d(n[e],"\n")>=0)return!1;return!0}(en)?"["+x(en,O)+"]":"[ "+q.call(en,", ")+" ]"}if(function(n){return!("[object Error]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e)){var rn=w(e,C);return"cause"in e&&!J.call(e,"cause")?"{ ["+String(e)+"] "+q.call(U.call("[cause]: "+C(e.cause),rn),", ")+" }":0===rn.length?"["+String(e)+"]":"{ ["+String(e)+"] "+q.call(rn,", ")+" }"}if("object"==typeof e&&$){if(nn&&"function"==typeof e[nn])return e[nn]();if("symbol"!==$&&"function"==typeof e.inspect)return e.inspect()}if(function(n){if(!_||!n||"object"!=typeof n)return!1;try{_.call(n);try{A.call(n)}catch(n){return!0}return n instanceof Map}catch(n){}return!1}(e)){var tn=[];return D.call(e,(function(n,r){tn.push(C(r,e,!0)+" => "+C(n,e))})),y("Map",_.call(e),tn,O)}if(function(n){if(!A||!n||"object"!=typeof n)return!1;try{A.call(n);try{_.call(n)}catch(n){return!0}return n instanceof Set}catch(n){}return!1}(e)){var an=[];return T.call(e,(function(n){an.push(C(n,e))})),y("Set",A.call(e),an,O)}if(p(e))return b("WeakMap");if(h(e))return b("WeakSet");if(m(e))return b("WeakRef");if(function(n){return!("[object Number]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e))return v(C(Number(e)));if(function(n){if(!n||"object"!=typeof n||!W)return!1;try{return W.call(n),!0}catch(n){}return!1}(e))return v(C(W.call(e)));if(function(n){return!("[object Boolean]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e))return v(I.call(e));if(function(n){return!("[object String]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e))return v(C(String(e)));if(!function(n){return!("[object Date]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e)&&!function(n){return!("[object RegExp]"!==c(n)||Y&&"object"==typeof n&&Y in n)}(e)){var on=w(e,C),ln=Z?Z(e)===Object.prototype:e instanceof Object||e.constructor===Object,sn=e instanceof Object?"":"null prototype",cn=!ln&&Y&&Object(e)===e&&Y in e?M.call(c(e),8,-1):sn?"Object":"",un=(ln||"function"!=typeof e.constructor?"":e.constructor.name?e.constructor.name+" ":"")+(cn||sn?"["+q.call(U.call([],cn||[],sn||[]),": ")+"] ":"");return 0===on.length?un+"{}":O?un+"{"+x(on,O)+"}":un+"{ "+q.call(on,", ")+" }"}return String(e)};var en=Object.prototype.hasOwnProperty||function(n){return n in this}},function(n,e,r){"use strict";var t;if(!Object.keys){var a=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=r(26),l=Object.prototype.propertyIsEnumerable,s=!l.call({toString:null},"toString"),c=l.call((function(){}),"prototype"),u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],d=function(n){var e=n.constructor;return e&&e.prototype===n},p={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},m=function(){if("undefined"==typeof window)return!1;for(var n in window)try{if(!p["$"+n]&&a.call(window,n)&&null!==window[n]&&"object"==typeof window[n])try{d(window[n])}catch(n){return!0}}catch(n){return!0}return!1}(),h=function(n){if("undefined"==typeof window||!m)return d(n);try{return d(n)}catch(n){return!1}};t=function(n){var e=null!==n&&"object"==typeof n,r="[object Function]"===o.call(n),t=i(n),l=e&&"[object String]"===o.call(n),d=[];if(!e&&!r&&!t)throw new TypeError("Object.keys called on a non-object");var p=c&&r;if(l&&n.length>0&&!a.call(n,0))for(var m=0;m<n.length;++m)d.push(String(m));if(t&&n.length>0)for(var f=0;f<n.length;++f)d.push(String(f));else for(var g in n)p&&"prototype"===g||!a.call(n,g)||d.push(String(g));if(s)for(var v=h(n),b=0;b<u.length;++b)v&&"constructor"===u[b]||!a.call(n,u[b])||d.push(u[b]);return d}}n.exports=t},function(n,e,r){"use strict";var t=Array.prototype.slice,a=r(26),o=Object.keys,i=o?function(n){return o(n)}:r(87),l=Object.keys;i.shim=function(){return Object.keys?function(){var n=Object.keys(arguments);return n&&n.length===arguments.length}(1,2)||(Object.keys=function(n){return l(a(n)?t.call(n):n)}):Object.keys=i,Object.keys||i},n.exports=i},function(n,e,r){"use strict";var t=r(2),a=r(4),o=r(27),i=r(28),l=r(90),s=a(i(),Object);t(s,{getPolyfill:i,implementation:o,shim:l}),n.exports=s},function(n,e,r){"use strict";var t=r(28),a=r(2);n.exports=function(){var n=t();return a(Object,{entries:n},{entries:function(){return Object.entries!==n}}),n}},function(n,e){function r(){throw new Error("setTimeout has not been defined")}function t(){throw new Error("clearTimeout has not been defined")}function a(n){if(c===setTimeout)return setTimeout(n,0);if((c===r||!c)&&setTimeout)return c=setTimeout,setTimeout(n,0);try{return c(n,0)}catch(e){try{return c.call(null,n,0)}catch(e){return c.call(this,n,0)}}}function o(){h&&p&&(h=!1,p.length?m=p.concat(m):f=-1,m.length&&i())}function i(){if(!h){var n=a(o);h=!0;for(var e=m.length;e;){for(p=m,m=[];++f<e;)p&&p[f].run();f=-1,e=m.length}p=null,h=!1,function(n){if(u===clearTimeout)return clearTimeout(n);if((u===t||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(n);try{u(n)}catch(e){try{return u.call(null,n)}catch(e){return u.call(this,n)}}}(n)}}function l(n,e){this.fun=n,this.array=e}function s(){}var c,u,d=n.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:r}catch(n){c=r}try{u="function"==typeof clearTimeout?clearTimeout:t}catch(n){u=t}}();var p,m=[],h=!1,f=-1;d.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];m.push(new l(n,e)),1!==m.length||h||a(i)},l.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=s,d.addListener=s,d.once=s,d.off=s,d.removeListener=s,d.removeAllListeners=s,d.emit=s,d.prependListener=s,d.prependOnceListener=s,d.listeners=function(n){return[]},d.binding=function(n){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(n){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(n,e,r){"use strict";var t=r(4),a=r(2),o=r(29),i=r(30),l=r(93),s=t(i());a(s,{getPolyfill:i,implementation:o,shim:l}),n.exports=s},function(n,e,r){"use strict";var t=r(2),a=r(30);n.exports=function(){var n=a();return t(String.prototype,{trim:n},{trim:function(){return String.prototype.trim!==n}}),n}},function(n,e,r){"use strict";(function(e){var r=function(){};if("production"!==e.env.NODE_ENV){var t=function(n,e){var r=arguments.length;e=new Array(r>1?r-1:0);for(var t=1;t<r;t++)e[t-1]=arguments[t];var a=0,o="Warning: "+n.replace(/%s/g,(function(){return e[a++]}));try{throw new Error(o)}catch(n){}};r=function(n,e,r){var a=arguments.length;r=new Array(a>2?a-2:0);for(var o=2;o<a;o++)r[o-2]=arguments[o];if(void 0===e)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");n||t.apply(null,[e].concat(r))}}n.exports=r}).call(e,r(91))},function(n,e,r){function t(n,e){return new i(e).process(n)}var a=r(31),o=r(32),i=r(96);for(var l in(e=n.exports=t).filterXSS=t,e.FilterXSS=i,a)e[l]=a[l];for(var l in o)e[l]=o[l];"undefined"!=typeof window&&(window.filterXSS=n.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=n.exports)},function(n,e,r){function t(n){return null==n}function a(n){(n=function(n){var e={};for(var r in n)e[r]=n[r];return e}(n||{})).stripIgnoreTag&&(n.onIgnoreTag,n.onIgnoreTag=i.onIgnoreTagStripAll),n.whiteList=n.whiteList||n.allowList||i.whiteList,n.onTag=n.onTag||i.onTag,n.onTagAttr=n.onTagAttr||i.onTagAttr,n.onIgnoreTag=n.onIgnoreTag||i.onIgnoreTag,n.onIgnoreTagAttr=n.onIgnoreTagAttr||i.onIgnoreTagAttr,n.safeAttrValue=n.safeAttrValue||i.safeAttrValue,n.escapeHtml=n.escapeHtml||i.escapeHtml,this.options=n,!1===n.css?this.cssFilter=!1:(n.css=n.css||{},this.cssFilter=new o(n.css))}var o=r(7).FilterCSS,i=r(31),l=r(32),s=l.parseTag,c=l.parseAttr,u=r(11);a.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,r=e.whiteList,a=e.onTag,o=e.onIgnoreTag,l=e.onTagAttr,d=e.onIgnoreTagAttr,p=e.safeAttrValue,m=e.escapeHtml,h=this.cssFilter;e.stripBlankChar&&(n=i.stripBlankChar(n)),e.allowCommentTag||(n=i.stripCommentTag(n));var f=!1;e.stripIgnoreTagBody&&(f=i.StripTagBody(e.stripIgnoreTagBody,o),o=f.onIgnoreTag);var g=s(n,(function(n,e,i,s,f){var g,v={sourcePosition:n,position:e,isClosing:f,isWhite:r.hasOwnProperty(i)};if(!t(g=a(i,s,v)))return g;if(v.isWhite){if(v.isClosing)return"</"+i+">";var b=function(n){var e=u.spaceIndex(n);if(-1===e)return{html:"",closing:"/"===n[n.length-2]};var r="/"===(n=u.trim(n.slice(e+1,-1)))[n.length-1];return r&&(n=u.trim(n.slice(0,-1))),{html:n,closing:r}}(s),y=r[i],x=c(b.html,(function(n,e){var r,a=-1!==u.indexOf(y,n);return t(r=l(i,n,e,a))?a?(e=p(i,n,e,h))?n+'="'+e+'"':n:t(r=d(i,n,e,a))?void 0:r:r}));return s="<"+i,x&&(s+=" "+x),b.closing&&(s+=" /"),s+">"}return t(g=o(i,s,v))?m(s):g}),m);return f&&(g=f.remove(g)),g},n.exports=a},function(n,e){n.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(n,e){n.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(n,e){n.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(n,e){n.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(n,e){n.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(n,e){},function(n,e,r){var t=r(104);"string"==typeof t&&(t=[[n.i,t,""]]);var a={transform:void 0};r(106)(t,a),t.locals&&(n.exports=t.locals)},function(n,e,r){(e=r(105)(!1)).push([n.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .vinput,.v[data-class=v] .veditor,.v[data-class=v] p,.v[data-class=v] pre code,.v[data-class=v] .status-bar{color:#555}.v[data-class=v] .vtime,.v[data-class=v] .vsys{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] pre,.v[data-class=v] code{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid rgba(238,238,238,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em;-webkit-box-sizing:border-box;box-sizing:border-box}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .vemoji,.v[data-class=v] .emoji{width:26px;height:26px;overflow:hidden;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0px 0 1px #f0f0f0;box-shadow:0px 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0px 0 1px #f0f0f0;box-shadow:0px 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px #dedede dashed}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width: 520px){.v[data-class=v] .vwrap .vheader .vinput{width:100%}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ul,.v[data-class=v] ol{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width: 520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width: 720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand::before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), to(rgba(255, 255, 255, 0.9)));background:linear-gradient(180deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand::after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:rgba(255,255,255,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed rgba(238,238,238,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.night .v[data-class=v] .vinput,.night .v[data-class=v] .veditor,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.night .v[data-class=v] .status-bar{color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.night .v[data-class=v] .vsys{color:#929298}[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre code,.dark .v[data-class=v] pre,.dark .v[data-class=v] code,.dark .v[data-class=v] pre code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre code,.night .v[data-class=v] pre,.night .v[data-class=v] code,.night .v[data-class=v] pre code{color:#929298;background-color:#151414}[data-theme=dark] .v[data-class=v] .vwrap,.dark .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap{border-color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vicon,.dark .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon{fill:#b2b2b5}[data-theme=dark] .v[data-class=v] .vicon.actived,.dark .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived{fill:#66b1ff}[data-theme=dark] .v[data-class=v] .vbtn,.dark .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vbtn:hover,.dark .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}[data-theme=dark] .v[data-class=v] a:hover,.dark .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover{color:#d7191a}[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand::before,.dark .v[data-class=v] .vcards .vcard .vcontent.expand::before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand::before,.night .v[data-class=v] .vcards .vcard .vcontent.expand::before{background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.7)));background:linear-gradient(180deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.7))}[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand::after,.dark .v[data-class=v] .vcards .vcard .vcontent.expand::after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand::after,.night .v[data-class=v] .vcards .vcard .vcontent.expand::after{background:rgba(0,0,0,.7)}@media(prefers-color-scheme: dark){.v[data-class=v] .vinput,.v[data-class=v] .veditor,.v[data-class=v] p,.v[data-class=v] pre code,.v[data-class=v] .status-bar{color:#b2b2b5}.v[data-class=v] .vtime,.v[data-class=v] .vsys{color:#929298}.v[data-class=v] pre,.v[data-class=v] code,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand::before{background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.7)));background:linear-gradient(180deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.7))}.v[data-class=v] .vcards .vcard .vcontent.expand::after{background:rgba(0,0,0,.7)}}',""]),n.exports=e},function(n,e,r){"use strict";function t(n,e){var r=n[1]||"",t=n[3];if(!t)return r;if(e&&"function"==typeof btoa){var a=function(n){return"/*# ".concat("sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n)))))," */")}(t);return[r].concat(t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}))).concat([a]).join("\n")}return[r].join("\n")}n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=t(e,n);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(t)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);t&&a[s[0]]||(r&&(s[2]?s[2]="".concat(r," and ").concat(s[2]):s[2]=r),e.push(s))}},e}},function(n,e,r){function t(n,e){for(var r=0;r<n.length;r++){var t=n[r],a=h[t.id];if(a){a.refs++;for(var o=0;o<a.parts.length;o++)a.parts[o](t.parts[o]);for(;o<t.parts.length;o++)a.parts.push(u(t.parts[o],e))}else{var i=[];for(o=0;o<t.parts.length;o++)i.push(u(t.parts[o],e));h[t.id]={id:t.id,refs:1,parts:i}}}}function a(n,e){for(var r=[],t={},a=0;a<n.length;a++){var o=n[a],i=e.base?o[0]+e.base:o[0],l={css:o[1],media:o[2],sourceMap:o[3]};t[i]?t[i].parts.push(l):r.push(t[i]={id:i,parts:[l]})}return r}function o(n,e){var r=g(n.insertInto);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var t=y[y.length-1];if("top"===n.insertAt)t?t.nextSibling?r.insertBefore(e,t.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),y.push(e);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");r.appendChild(e)}}function i(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=y.indexOf(n);e>=0&&y.splice(e,1)}function l(n){var e=document.createElement("style");return n.attrs.type="text/css",c(e,n.attrs),o(n,e),e}function s(n){var e=document.createElement("link");return n.attrs.type="text/css",n.attrs.rel="stylesheet",c(e,n.attrs),o(n,e),e}function c(n,e){Object.keys(e).forEach((function(r){n.setAttribute(r,e[r])}))}function u(n,e){var r,t,a,o;if(e.transform&&n.css){if(!(o=e.transform(n.css)))return function(){};n.css=o}if(e.singleton){var c=b++;r=v||(v=l(e)),t=d.bind(null,r,c,!1),a=d.bind(null,r,c,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=s(e),t=m.bind(null,r,e),a=function(){i(r),r.href&&URL.revokeObjectURL(r.href)}):(r=l(e),t=p.bind(null,r),a=function(){i(r)});return t(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t(n=e)}else a()}}function d(n,e,r,t){var a=r?"":t.css;if(n.styleSheet)n.styleSheet.cssText=w(e,a);else{var o=document.createTextNode(a),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(o,i[e]):n.appendChild(o)}}function p(n,e){var r=e.css,t=e.media;if(t&&n.setAttribute("media",t),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}function m(n,e,r){var t=r.css,a=r.sourceMap,o=void 0===e.convertToAbsoluteUrls&&a;(e.convertToAbsoluteUrls||o)&&(t=x(t)),a&&(t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var i=new Blob([t],{type:"text/css"}),l=n.href;n.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}var h={},f=function(n){var e;return function(){return void 0===e&&(e=n.apply(this,arguments)),e}}((function(){return window&&document&&document.all&&!window.atob})),g=function(n){var e={};return function(r){return void 0===e[r]&&(e[r]=n.call(this,r)),e[r]}}((function(n){return document.querySelector(n)})),v=null,b=0,y=[],x=r(107);n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=f()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var r=a(n,e);return t(r,e),function(n){for(var o=[],i=0;i<r.length;i++){var l=r[i];(s=h[l.id]).refs--,o.push(s)}for(n&&t(a(n,e),e),i=0;i<o.length;i++){var s;if(0===(s=o[i]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete h[s.id]}}}};var w=function(){var n=[];return function(e,r){return n[e]=r,n.filter(Boolean).join("\n")}}()},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var r=e.protocol+"//"+e.host,t=r+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(n,e){var a,o=e.trim().replace(/^"(.*)"$/,(function(n,e){return e})).replace(/^'(.*)'$/,(function(n,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o)?n:(a=0===o.indexOf("//")?o:0===o.indexOf("/")?r+o:t+o.replace(/^\.\//,""),"url("+JSON.stringify(a)+")")}))}},function(n,e,r){r(103),n.exports=r(34)}])},function(n,e,r){"use strict";r(106)},function(n,e,r){"use strict";var t=r(107),a=r(108),o={brackets:function(n){return n+"[]"},indices:function(n,e){return n+"["+e+"]"},repeat:function(n){return n}},i=Array.isArray,l=Array.prototype.push,s=function(n,e){l.apply(n,i(e)?e:[e])},c=Date.prototype.toISOString,u={delimiter:"&",encode:!0,encoder:t.encode,encodeValuesOnly:!1,serializeDate:function(n){return c.call(n)},skipNulls:!1,strictNullHandling:!1},d=function n(e,r,a,o,l,c,d,p,m,h,f,g){var v=e;if("function"==typeof d?v=d(r,v):v instanceof Date&&(v=h(v)),null===v){if(o)return c&&!g?c(r,u.encoder):r;v=""}if("string"==typeof v||"number"==typeof v||"boolean"==typeof v||t.isBuffer(v))return c?[f(g?r:c(r,u.encoder))+"="+f(c(v,u.encoder))]:[f(r)+"="+f(String(v))];var b,y=[];if(void 0===v)return y;if(i(d))b=d;else{var x=Object.keys(v);b=p?x.sort(p):x}for(var w=0;w<b.length;++w){var k=b[w];l&&null===v[k]||(i(v)?s(y,n(v[k],a(r,k),a,o,l,c,d,p,m,h,f,g)):s(y,n(v[k],r+(m?"."+k:"["+k+"]"),a,o,l,c,d,p,m,h,f,g)))}return y};n.exports=function(n,e){var r=n,l=e?t.assign({},e):{};if(null!==l.encoder&&void 0!==l.encoder&&"function"!=typeof l.encoder)throw new TypeError("Encoder has to be a function.");var c=void 0===l.delimiter?u.delimiter:l.delimiter,p="boolean"==typeof l.strictNullHandling?l.strictNullHandling:u.strictNullHandling,m="boolean"==typeof l.skipNulls?l.skipNulls:u.skipNulls,h="boolean"==typeof l.encode?l.encode:u.encode,f="function"==typeof l.encoder?l.encoder:u.encoder,g="function"==typeof l.sort?l.sort:null,v=void 0!==l.allowDots&&l.allowDots,b="function"==typeof l.serializeDate?l.serializeDate:u.serializeDate,y="boolean"==typeof l.encodeValuesOnly?l.encodeValuesOnly:u.encodeValuesOnly;if(void 0===l.format)l.format=a.default;else if(!Object.prototype.hasOwnProperty.call(a.formatters,l.format))throw new TypeError("Unknown format option provided.");var x,w,k=a.formatters[l.format];"function"==typeof l.filter?r=(w=l.filter)("",r):i(l.filter)&&(x=w=l.filter);var C,_=[];if("object"!=typeof r||null===r)return"";C=l.arrayFormat in o?l.arrayFormat:"indices"in l?l.indices?"indices":"repeat":"indices";var D=o[C];x||(x=Object.keys(r)),g&&x.sort(g);for(var S=0;S<x.length;++S){var $=x[S];m&&null===r[$]||s(_,d(r[$],$,D,p,m,h?f:null,w,g,v,b,k,y))}var A=_.join(c),T=!0===l.addQueryPrefix?"?":"";return A.length>0?T+A:""}},function(n,e,r){"use strict";var t=r(107),a=Object.prototype.hasOwnProperty,o={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:t.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},i=function(n,e,r){if(n){var t=r.allowDots?n.replace(/\.([^.[]+)/g,"[$1]"):n,o=/(\[[^[\]]*])/g,i=/(\[[^[\]]*])/.exec(t),l=i?t.slice(0,i.index):t,s=[];if(l){if(!r.plainObjects&&a.call(Object.prototype,l)&&!r.allowPrototypes)return;s.push(l)}for(var c=0;null!==(i=o.exec(t))&&c<r.depth;){if(c+=1,!r.plainObjects&&a.call(Object.prototype,i[1].slice(1,-1))&&!r.allowPrototypes)return;s.push(i[1])}return i&&s.push("["+t.slice(i.index)+"]"),function(n,e,r){for(var t=e,a=n.length-1;a>=0;--a){var o,i=n[a];if("[]"===i&&r.parseArrays)o=[].concat(t);else{o=r.plainObjects?Object.create(null):{};var l="["===i.charAt(0)&&"]"===i.charAt(i.length-1)?i.slice(1,-1):i,s=parseInt(l,10);r.parseArrays||""!==l?!isNaN(s)&&i!==l&&String(s)===l&&s>=0&&r.parseArrays&&s<=r.arrayLimit?(o=[])[s]=t:"__proto__"!==l&&(o[l]=t):o={0:t}}t=o}return t}(s,e,r)}};n.exports=function(n,e){var r=e?t.assign({},e):{};if(null!==r.decoder&&void 0!==r.decoder&&"function"!=typeof r.decoder)throw new TypeError("Decoder has to be a function.");if(r.ignoreQueryPrefix=!0===r.ignoreQueryPrefix,r.delimiter="string"==typeof r.delimiter||t.isRegExp(r.delimiter)?r.delimiter:o.delimiter,r.depth="number"==typeof r.depth?r.depth:o.depth,r.arrayLimit="number"==typeof r.arrayLimit?r.arrayLimit:o.arrayLimit,r.parseArrays=!1!==r.parseArrays,r.decoder="function"==typeof r.decoder?r.decoder:o.decoder,r.allowDots="boolean"==typeof r.allowDots?r.allowDots:o.allowDots,r.plainObjects="boolean"==typeof r.plainObjects?r.plainObjects:o.plainObjects,r.allowPrototypes="boolean"==typeof r.allowPrototypes?r.allowPrototypes:o.allowPrototypes,r.parameterLimit="number"==typeof r.parameterLimit?r.parameterLimit:o.parameterLimit,r.strictNullHandling="boolean"==typeof r.strictNullHandling?r.strictNullHandling:o.strictNullHandling,""===n||null==n)return r.plainObjects?Object.create(null):{};for(var l="string"==typeof n?function(n,e){for(var r={},t=e.ignoreQueryPrefix?n.replace(/^\?/,""):n,i=e.parameterLimit===1/0?void 0:e.parameterLimit,l=t.split(e.delimiter,i),s=0;s<l.length;++s){var c,u,d=l[s],p=d.indexOf("]="),m=-1===p?d.indexOf("="):p+1;-1===m?(c=e.decoder(d,o.decoder),u=e.strictNullHandling?null:""):(c=e.decoder(d.slice(0,m),o.decoder),u=e.decoder(d.slice(m+1),o.decoder)),a.call(r,c)?r[c]=[].concat(r[c]).concat(u):r[c]=u}return r}(n,r):n,s=r.plainObjects?Object.create(null):{},c=Object.keys(l),u=0;u<c.length;++u){var d=c[u],p=i(d,l[d],r);s=t.merge(s,p,r)}return t.compact(s)}},function(n,e,r){var t=r(15),a=r(287),o=r(288);n.exports=function(n){var e=t(n);return o(e,a(e))+1}},function(n,e){n.exports=function(n){var e=new Date(n.getTime()),r=e.getTimezoneOffset();return e.setSeconds(0,0),6e4*r+e.getTime()%6e4}},function(n,e,r){var t=r(15);n.exports=function(n){var e=t(n),r=new Date(0);return r.setFullYear(e.getFullYear(),0,1),r.setHours(0,0,0,0),r}},function(n,e,r){var t=r(289);n.exports=function(n,e){var r=t(n),a=t(e),o=r.getTime()-6e4*r.getTimezoneOffset(),i=a.getTime()-6e4*a.getTimezoneOffset();return Math.round((o-i)/864e5)}},function(n,e,r){var t=r(15);n.exports=function(n){var e=t(n);return e.setHours(0,0,0,0),e}},function(n,e,r){var t=r(15),a=r(59),o=r(292);n.exports=function(n){var e=t(n),r=a(e).getTime()-o(e).getTime();return Math.round(r/6048e5)+1}},function(n,e,r){var t=r(15);n.exports=function(n,e){var r=e&&Number(e.weekStartsOn)||0,a=t(n),o=a.getDay(),i=(o<r?7:0)+o-r;return a.setDate(a.getDate()-i),a.setHours(0,0,0,0),a}},function(n,e,r){var t=r(110),a=r(59);n.exports=function(n){var e=t(n),r=new Date(0);return r.setFullYear(e,0,4),r.setHours(0,0,0,0),a(r)}},function(n,e,r){var t=r(109);n.exports=function(n){if(t(n))return!isNaN(n);throw new TypeError(toString.call(n)+" is not an instance of Date")}},function(n,e,r){var t=r(295),a=r(296);n.exports={distanceInWords:t(),format:a()}},function(n,e){n.exports=function(){var n={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(e,r,t){var a;return t=t||{},a="string"==typeof n[e]?n[e]:1===r?n[e].one:n[e].other.replace("{{count}}",r),t.addSuffix?t.comparison>0?"in "+a:a+" ago":a}}}},function(n,e,r){var t=r(297);n.exports=function(){var n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e=["January","February","March","April","May","June","July","August","September","October","November","December"],r=["Su","Mo","Tu","We","Th","Fr","Sa"],a=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],o=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],i=["AM","PM"],l=["am","pm"],s=["a.m.","p.m."],c={MMM:function(e){return n[e.getMonth()]},MMMM:function(n){return e[n.getMonth()]},dd:function(n){return r[n.getDay()]},ddd:function(n){return a[n.getDay()]},dddd:function(n){return o[n.getDay()]},A:function(n){return n.getHours()/12>=1?i[1]:i[0]},a:function(n){return n.getHours()/12>=1?l[1]:l[0]},aa:function(n){return n.getHours()/12>=1?s[1]:s[0]}};return["M","D","DDD","d","Q","W"].forEach((function(n){c[n+"o"]=function(e,r){return function(n){var e=n%100;if(e>20||e<10)switch(e%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"}(r[n](e))}})),{formatters:c,formattingTokensRegExp:t(c)}}},function(n,e){var r=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];n.exports=function(n){var e=[];for(var t in n)n.hasOwnProperty(t)&&e.push(t);var a=r.concat(e).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+a.join("|")+"|.)","g")}},function(n,e,r){"use strict";var t=r(3),a=r(111),o=r(299),i=r(117);function l(n){var e=new o(n),r=a(o.prototype.request,e);return t.extend(r,o.prototype,e),t.extend(r,e),r}var s=l(r(60));s.Axios=o,s.create=function(n){return l(i(s.defaults,n))},s.Cancel=r(118),s.CancelToken=r(313),s.isCancel=r(116),s.all=function(n){return Promise.all(n)},s.spread=r(314),s.isAxiosError=r(315),n.exports=s,n.exports.default=s},function(n,e,r){"use strict";var t=r(3),a=r(112),o=r(300),i=r(301),l=r(117),s=r(311),c=s.validators;function u(n){this.defaults=n,this.interceptors={request:new o,response:new o}}u.prototype.request=function(n){"string"==typeof n?(n=arguments[1]||{}).url=arguments[0]:n=n||{},(n=l(this.defaults,n)).method?n.method=n.method.toLowerCase():this.defaults.method?n.method=this.defaults.method.toLowerCase():n.method="get";var e=n.transitional;void 0!==e&&s.assertOptions(e,{silentJSONParsing:c.transitional(c.boolean,"1.0.0"),forcedJSONParsing:c.transitional(c.boolean,"1.0.0"),clarifyTimeoutError:c.transitional(c.boolean,"1.0.0")},!1);var r=[],t=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(n)||(t=t&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var a,o=[];if(this.interceptors.response.forEach((function(n){o.push(n.fulfilled,n.rejected)})),!t){var u=[i,void 0];for(Array.prototype.unshift.apply(u,r),u=u.concat(o),a=Promise.resolve(n);u.length;)a=a.then(u.shift(),u.shift());return a}for(var d=n;r.length;){var p=r.shift(),m=r.shift();try{d=p(d)}catch(n){m(n);break}}try{a=i(d)}catch(n){return Promise.reject(n)}for(;o.length;)a=a.then(o.shift(),o.shift());return a},u.prototype.getUri=function(n){return n=l(this.defaults,n),a(n.url,n.params,n.paramsSerializer).replace(/^\?/,"")},t.forEach(["delete","get","head","options"],(function(n){u.prototype[n]=function(e,r){return this.request(l(r||{},{method:n,url:e,data:(r||{}).data}))}})),t.forEach(["post","put","patch"],(function(n){u.prototype[n]=function(e,r,t){return this.request(l(t||{},{method:n,url:e,data:r}))}})),n.exports=u},function(n,e,r){"use strict";var t=r(3);function a(){this.handlers=[]}a.prototype.use=function(n,e,r){return this.handlers.push({fulfilled:n,rejected:e,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1},a.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},a.prototype.forEach=function(n){t.forEach(this.handlers,(function(e){null!==e&&n(e)}))},n.exports=a},function(n,e,r){"use strict";var t=r(3),a=r(302),o=r(116),i=r(60);function l(n){n.cancelToken&&n.cancelToken.throwIfRequested()}n.exports=function(n){return l(n),n.headers=n.headers||{},n.data=a.call(n,n.data,n.headers,n.transformRequest),n.headers=t.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),t.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete n.headers[e]})),(n.adapter||i.adapter)(n).then((function(e){return l(n),e.data=a.call(n,e.data,e.headers,n.transformResponse),e}),(function(e){return o(e)||(l(n),e&&e.response&&(e.response.data=a.call(n,e.response.data,e.response.headers,n.transformResponse))),Promise.reject(e)}))}},function(n,e,r){"use strict";var t=r(3),a=r(60);n.exports=function(n,e,r){var o=this||a;return t.forEach(r,(function(r){n=r.call(o,n,e)})),n}},function(n,e,r){"use strict";var t=r(3);n.exports=function(n,e){t.forEach(n,(function(r,t){t!==e&&t.toUpperCase()===e.toUpperCase()&&(n[e]=r,delete n[t])}))}},function(n,e,r){"use strict";var t=r(115);n.exports=function(n,e,r){var a=r.config.validateStatus;r.status&&a&&!a(r.status)?e(t("Request failed with status code "+r.status,r.config,null,r.request,r)):n(r)}},function(n,e,r){"use strict";var t=r(3);n.exports=t.isStandardBrowserEnv()?{write:function(n,e,r,a,o,i){var l=[];l.push(n+"="+encodeURIComponent(e)),t.isNumber(r)&&l.push("expires="+new Date(r).toGMTString()),t.isString(a)&&l.push("path="+a),t.isString(o)&&l.push("domain="+o),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(n){var e=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(n,e,r){"use strict";var t=r(307),a=r(308);n.exports=function(n,e){return n&&!t(e)?a(n,e):e}},function(n,e,r){"use strict";n.exports=function(n){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(n)}},function(n,e,r){"use strict";n.exports=function(n,e){return e?n.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):n}},function(n,e,r){"use strict";var t=r(3),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var e,r,o,i={};return n?(t.forEach(n.split("\n"),(function(n){if(o=n.indexOf(":"),e=t.trim(n.substr(0,o)).toLowerCase(),r=t.trim(n.substr(o+1)),e){if(i[e]&&a.indexOf(e)>=0)return;i[e]="set-cookie"===e?(i[e]?i[e]:[]).concat([r]):i[e]?i[e]+", "+r:r}})),i):i}},function(n,e,r){"use strict";var t=r(3);n.exports=t.isStandardBrowserEnv()?function(){var n,e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function a(n){var t=n;return e&&(r.setAttribute("href",t),t=r.href),r.setAttribute("href",t),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return n=a(window.location.href),function(e){var r=t.isString(e)?a(e):e;return r.protocol===n.protocol&&r.host===n.host}}():function(){return!0}},function(n,e,r){"use strict";var t=r(312),a={};["object","boolean","number","function","string","symbol"].forEach((function(n,e){a[n]=function(r){return typeof r===n||"a"+(e<1?"n ":" ")+n}}));var o={},i=t.version.split(".");function l(n,e){for(var r=e?e.split("."):i,t=n.split("."),a=0;a<3;a++){if(r[a]>t[a])return!0;if(r[a]<t[a])return!1}return!1}a.transitional=function(n,e,r){var a=e&&l(e);function i(n,e){return"[Axios v"+t.version+"] Transitional option '"+n+"'"+e+(r?". "+r:"")}return function(r,t,l){if(!1===n)throw new Error(i(t," has been removed in "+e));return a&&!o[t]&&(o[t]=!0,console.warn(i(t," has been deprecated since v"+e+" and will be removed in the near future"))),!n||n(r,t,l)}},n.exports={isOlderVersion:l,assertOptions:function(n,e,r){if("object"!=typeof n)throw new TypeError("options must be an object");for(var t=Object.keys(n),a=t.length;a-- >0;){var o=t[a],i=e[o];if(i){var l=n[o],s=void 0===l||i(l,o,n);if(!0!==s)throw new TypeError("option "+o+" must be "+s)}else if(!0!==r)throw Error("Unknown option "+o)}},validators:a}},function(n){n.exports=JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')},function(n,e,r){"use strict";var t=r(118);function a(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(n){e=n}));var r=this;n((function(n){r.reason||(r.reason=new t(n),e(r.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var n;return{token:new a((function(e){n=e})),cancel:n}},n.exports=a},function(n,e,r){"use strict";n.exports=function(n){return function(e){return n.apply(null,e)}}},function(n,e,r){"use strict";n.exports=function(n){return"object"==typeof n&&!0===n.isAxiosError}},function(n,e,r){},function(n,e,r){"use strict";r(119)},function(n,e,r){},function(n,e,r){n.exports=function(n){function e(n){let r,a,o,i=null;function l(...n){if(!l.enabled)return;const t=l,a=Number(new Date),o=a-(r||a);t.diff=o,t.prev=r,t.curr=a,r=a,n[0]=e.coerce(n[0]),"string"!=typeof n[0]&&n.unshift("%O");let i=0;n[0]=n[0].replace(/%([a-zA-Z%])/g,(r,a)=>{if("%%"===r)return"%";i++;const o=e.formatters[a];if("function"==typeof o){const e=n[i];r=o.call(t,e),n.splice(i,1),i--}return r}),e.formatArgs.call(t,n);(t.log||e.log).apply(t,n)}return l.namespace=n,l.useColors=e.useColors(),l.color=e.selectColor(n),l.extend=t,l.destroy=e.destroy,Object.defineProperty(l,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==i?i:(a!==e.namespaces&&(a=e.namespaces,o=e.enabled(n)),o),set:n=>{i=n}}),"function"==typeof e.init&&e.init(l),l}function t(n,r){const t=e(this.namespace+(void 0===r?":":r)+n);return t.log=this.log,t}function a(n){return n.toString().substring(2,n.toString().length-2).replace(/\.\*\?$/,"*")}return e.debug=e,e.default=e,e.coerce=function(n){if(n instanceof Error)return n.stack||n.message;return n},e.disable=function(){const n=[...e.names.map(a),...e.skips.map(a).map(n=>"-"+n)].join(",");return e.enable(""),n},e.enable=function(n){let r;e.save(n),e.namespaces=n,e.names=[],e.skips=[];const t=("string"==typeof n?n:"").split(/[\s,]+/),a=t.length;for(r=0;r<a;r++)t[r]&&("-"===(n=t[r].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+n.slice(1)+"$")):e.names.push(new RegExp("^"+n+"$")))},e.enabled=function(n){if("*"===n[n.length-1])return!0;let r,t;for(r=0,t=e.skips.length;r<t;r++)if(e.skips[r].test(n))return!1;for(r=0,t=e.names.length;r<t;r++)if(e.names[r].test(n))return!0;return!1},e.humanize=r(320),e.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(n).forEach(r=>{e[r]=n[r]}),e.names=[],e.skips=[],e.formatters={},e.selectColor=function(n){let r=0;for(let e=0;e<n.length;e++)r=(r<<5)-r+n.charCodeAt(e),r|=0;return e.colors[Math.abs(r)%e.colors.length]},e.enable(e.load()),e}},function(n,e){var r=1e3,t=6e4,a=60*t,o=24*a;function i(n,e,r,t){var a=e>=1.5*r;return Math.round(n/r)+" "+t+(a?"s":"")}n.exports=function(n,e){e=e||{};var l=typeof n;if("string"===l&&n.length>0)return function(n){if((n=String(n)).length>100)return;var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(n);if(!e)return;var i=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"weeks":case"week":case"w":return 6048e5*i;case"days":case"day":case"d":return i*o;case"hours":case"hour":case"hrs":case"hr":case"h":return i*a;case"minutes":case"minute":case"mins":case"min":case"m":return i*t;case"seconds":case"second":case"secs":case"sec":case"s":return i*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}(n);if("number"===l&&isFinite(n))return e.long?function(n){var e=Math.abs(n);if(e>=o)return i(n,e,o,"day");if(e>=a)return i(n,e,a,"hour");if(e>=t)return i(n,e,t,"minute");if(e>=r)return i(n,e,r,"second");return n+" ms"}(n):function(n){var e=Math.abs(n);if(e>=o)return Math.round(n/o)+"d";if(e>=a)return Math.round(n/a)+"h";if(e>=t)return Math.round(n/t)+"m";if(e>=r)return Math.round(n/r)+"s";return n+"ms"}(n);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(n))}},function(n,e,r){},function(n,e,r){"use strict";r(120)},function(n,e,r){"use strict";r(121)},function(n,e,r){"use strict";r.r(e);var t=r(0);
/*!
  * vue-router v3.6.5
  * (c) 2022 Evan You
  * @license MIT
  */function a(n,e){for(var r in e)n[r]=e[r];return n}var o=/[!'()*]/g,i=function(n){return"%"+n.charCodeAt(0).toString(16)},l=/%2C/g,s=function(n){return encodeURIComponent(n).replace(o,i).replace(l,",")};function c(n){try{return decodeURIComponent(n)}catch(n){0}return n}var u=function(n){return null==n||"object"==typeof n?n:String(n)};function d(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var r=n.replace(/\+/g," ").split("="),t=c(r.shift()),a=r.length>0?c(r.join("=")):null;void 0===e[t]?e[t]=a:Array.isArray(e[t])?e[t].push(a):e[t]=[e[t],a]})),e):e}function p(n){var e=n?Object.keys(n).map((function(e){var r=n[e];if(void 0===r)return"";if(null===r)return s(e);if(Array.isArray(r)){var t=[];return r.forEach((function(n){void 0!==n&&(null===n?t.push(s(e)):t.push(s(e)+"="+s(n)))})),t.join("&")}return s(e)+"="+s(r)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var m=/\/?$/;function h(n,e,r,t){var a=t&&t.options.stringifyQuery,o=e.query||{};try{o=f(o)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:o,params:e.params||{},fullPath:b(e,a),matched:n?v(n):[]};return r&&(i.redirectedFrom=b(r,a)),Object.freeze(i)}function f(n){if(Array.isArray(n))return n.map(f);if(n&&"object"==typeof n){var e={};for(var r in n)e[r]=f(n[r]);return e}return n}var g=h(null,{path:"/"});function v(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var r=n.path,t=n.query;void 0===t&&(t={});var a=n.hash;return void 0===a&&(a=""),(r||"/")+(e||p)(t)+a}function y(n,e,r){return e===g?n===e:!!e&&(n.path&&e.path?n.path.replace(m,"")===e.path.replace(m,"")&&(r||n.hash===e.hash&&x(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(r||n.hash===e.hash&&x(n.query,e.query)&&x(n.params,e.params))))}function x(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var r=Object.keys(n).sort(),t=Object.keys(e).sort();return r.length===t.length&&r.every((function(r,a){var o=n[r];if(t[a]!==r)return!1;var i=e[r];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?x(o,i):String(o)===String(i)}))}function w(n){for(var e=0;e<n.matched.length;e++){var r=n.matched[e];for(var t in r.instances){var a=r.instances[t],o=r.enteredCbs[t];if(a&&o){delete r.enteredCbs[t];for(var i=0;i<o.length;i++)a._isBeingDestroyed||o[i](a)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var r=e.props,t=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var l=o.$createElement,s=r.name,c=o.$route,u=o._routerViewCache||(o._routerViewCache={}),d=0,p=!1;o&&o._routerRoot!==o;){var m=o.$vnode?o.$vnode.data:{};m.routerView&&d++,m.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=d,p){var h=u[s],f=h&&h.component;return f?(h.configProps&&C(f,i,h.route,h.configProps),l(f,i,t)):l()}var g=c.matched[d],v=g&&g.components[s];if(!g||!v)return u[s]=null,l();u[s]={component:v},i.registerRouteInstance=function(n,e){var r=g.instances[s];(e&&r!==n||!e&&r===n)&&(g.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){g.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[s]&&(g.instances[s]=n.componentInstance),w(c)};var b=g.props&&g.props[s];return b&&(a(u[s],{route:c,configProps:b}),C(v,i,c,b)),l(v,i,t)}};function C(n,e,r,t){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(r,t);if(o){o=e.props=a({},o);var i=e.attrs=e.attrs||{};for(var l in o)n.props&&l in n.props||(i[l]=o[l],delete o[l])}}function _(n,e,r){var t=n.charAt(0);if("/"===t)return n;if("?"===t||"#"===t)return e+n;var a=e.split("/");r&&a[a.length-1]||a.pop();for(var o=n.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var l=o[i];".."===l?a.pop():"."!==l&&a.push(l)}return""!==a[0]&&a.unshift(""),a.join("/")}function D(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var S=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},$=N,A=I,T=function(n,e){return O(I(n,e),e)},j=O,E=B,z=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function I(n,e){for(var r,t=[],a=0,o=0,i="",l=e&&e.delimiter||"/";null!=(r=z.exec(n));){var s=r[0],c=r[1],u=r.index;if(i+=n.slice(o,u),o=u+s.length,c)i+=c[1];else{var d=n[o],p=r[2],m=r[3],h=r[4],f=r[5],g=r[6],v=r[7];i&&(t.push(i),i="");var b=null!=p&&null!=d&&d!==p,y="+"===g||"*"===g,x="?"===g||"*"===g,w=r[2]||l,k=h||f;t.push({name:m||a++,prefix:p||"",delimiter:w,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:k?M(k):v?".*":"[^"+P(w)+"]+?"})}}return o<n.length&&(i+=n.substr(o)),i&&t.push(i),t}function F(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function O(n,e){for(var r=new Array(n.length),t=0;t<n.length;t++)"object"==typeof n[t]&&(r[t]=new RegExp("^(?:"+n[t].pattern+")$",R(e)));return function(e,t){for(var a="",o=e||{},i=(t||{}).pretty?F:encodeURIComponent,l=0;l<n.length;l++){var s=n[l];if("string"!=typeof s){var c,u=o[s.name];if(null==u){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(S(u)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=i(u[d]),!r[l].test(c))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===d?s.prefix:s.delimiter)+c}}else{if(c=s.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(u),!r[l].test(c))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+c+'"');a+=s.prefix+c}}else a+=s}return a}}function P(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function M(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function L(n,e){return n.keys=e,n}function R(n){return n&&n.sensitive?"":"i"}function B(n,e,r){S(e)||(r=e||r,e=[]);for(var t=(r=r||{}).strict,a=!1!==r.end,o="",i=0;i<n.length;i++){var l=n[i];if("string"==typeof l)o+=P(l);else{var s=P(l.prefix),c="(?:"+l.pattern+")";e.push(l),l.repeat&&(c+="(?:"+s+c+")*"),o+=c=l.optional?l.partial?s+"("+c+")?":"(?:"+s+"("+c+"))?":s+"("+c+")"}}var u=P(r.delimiter||"/"),d=o.slice(-u.length)===u;return t||(o=(d?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=a?"$":t&&d?"":"(?="+u+"|$)",L(new RegExp("^"+o,R(r)),e)}function N(n,e,r){return S(e)||(r=e||r,e=[]),r=r||{},n instanceof RegExp?function(n,e){var r=n.source.match(/\((?!\?)/g);if(r)for(var t=0;t<r.length;t++)e.push({name:t,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return L(n,e)}(n,e):S(n)?function(n,e,r){for(var t=[],a=0;a<n.length;a++)t.push(N(n[a],e,r).source);return L(new RegExp("(?:"+t.join("|")+")",R(r)),e)}(n,e,r):function(n,e,r){return B(I(n,r),e,r)}(n,e,r)}$.parse=A,$.compile=T,$.tokensToFunction=j,$.tokensToRegExp=E;var U=Object.create(null);function q(n,e,r){e=e||{};try{var t=U[n]||(U[n]=$.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),t(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function V(n,e,r,t){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var i=(o=a({},n)).params;return i&&"object"==typeof i&&(o.params=a({},i)),o}if(!o.path&&o.params&&e){(o=a({},o))._normalized=!0;var l=a(a({},e.params),o.params);if(e.name)o.name=e.name,o.params=l;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;o.path=q(s,l,e.path)}else 0;return o}var c=function(n){var e="",r="",t=n.indexOf("#");t>=0&&(e=n.slice(t),n=n.slice(0,t));var a=n.indexOf("?");return a>=0&&(r=n.slice(a+1),n=n.slice(0,a)),{path:n,query:r,hash:e}}(o.path||""),p=e&&e.path||"/",m=c.path?_(c.path,p,r||o.append):p,h=function(n,e,r){void 0===e&&(e={});var t,a=r||d;try{t=a(n||"")}catch(n){t={}}for(var o in e){var i=e[o];t[o]=Array.isArray(i)?i.map(u):u(i)}return t}(c.query,o.query,t&&t.options.parseQuery),f=o.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:m,query:h,hash:f}}var H,W=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,r=this.$router,t=this.$route,o=r.resolve(this.to,t,this.append),i=o.location,l=o.route,s=o.href,c={},u=r.options.linkActiveClass,d=r.options.linkExactActiveClass,p=null==u?"router-link-active":u,f=null==d?"router-link-exact-active":d,g=null==this.activeClass?p:this.activeClass,v=null==this.exactActiveClass?f:this.exactActiveClass,b=l.redirectedFrom?h(null,V(l.redirectedFrom),null,r):l;c[v]=y(t,b,this.exactPath),c[g]=this.exact||this.exactPath?c[v]:function(n,e){return 0===n.path.replace(m,"/").indexOf(e.path.replace(m,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var r in e)if(!(r in n))return!1;return!0}(n.query,e.query)}(t,b);var x=c[v]?this.ariaCurrentValue:null,w=function(n){Q(n)&&(e.replace?r.replace(i,W):r.push(i,W))},k={click:Q};Array.isArray(this.event)?this.event.forEach((function(n){k[n]=w})):k[this.event]=w;var C={class:c},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:l,navigate:w,isActive:c[g],isExactActive:c[v]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?n():n("span",{},_)}if("a"===this.tag)C.on=k,C.attrs={href:s,"aria-current":x};else{var D=function n(e){var r;if(e)for(var t=0;t<e.length;t++){if("a"===(r=e[t]).tag)return r;if(r.children&&(r=n(r.children)))return r}}(this.$slots.default);if(D){D.isStatic=!1;var S=D.data=a({},D.data);for(var $ in S.on=S.on||{},S.on){var A=S.on[$];$ in k&&(S.on[$]=Array.isArray(A)?A:[A])}for(var T in k)T in S.on?S.on[T].push(k[T]):S.on[T]=w;var j=D.data.attrs=a({},D.data.attrs);j.href=s,j["aria-current"]=x}else C.on=k}return n(this.tag,C,this.$slots.default)}};function Q(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var K="undefined"!=typeof window;function Y(n,e,r,t,a){var o=e||[],i=r||Object.create(null),l=t||Object.create(null);n.forEach((function(n){!function n(e,r,t,a,o,i){var l=a.path,s=a.name;0;var c=a.pathToRegexpOptions||{},u=function(n,e,r){r||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return D(e.path+"/"+n)}(l,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var d={path:u,regex:J(u,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:s,parent:o,matchAs:i,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=i?D(i+"/"+a.path):void 0;n(e,r,t,a,d,o)}));r[d.path]||(e.push(d.path),r[d.path]=d);if(void 0!==a.alias)for(var p=Array.isArray(a.alias)?a.alias:[a.alias],m=0;m<p.length;++m){0;var h={path:p[m],children:a.children};n(e,r,t,h,o,d.path||"/")}s&&(t[s]||(t[s]=d))}(o,i,l,n,a)}));for(var s=0,c=o.length;s<c;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),c--,s--);return{pathList:o,pathMap:i,nameMap:l}}function J(n,e){return $(n,[],e)}function Z(n,e){var r=Y(n),t=r.pathList,a=r.pathMap,o=r.nameMap;function i(n,r,i){var l=V(n,r,!1,e),c=l.name;if(c){var u=o[c];if(!u)return s(null,l);var d=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof l.params&&(l.params={}),r&&"object"==typeof r.params)for(var p in r.params)!(p in l.params)&&d.indexOf(p)>-1&&(l.params[p]=r.params[p]);return l.path=q(u.path,l.params),s(u,l,i)}if(l.path){l.params={};for(var m=0;m<t.length;m++){var h=t[m],f=a[h];if(X(f.regex,l.path,l.params))return s(f,l,i)}}return s(null,l)}function l(n,r){var t=n.redirect,a="function"==typeof t?t(h(n,r,null,e)):t;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return s(null,r);var l=a,c=l.name,u=l.path,d=r.query,p=r.hash,m=r.params;if(d=l.hasOwnProperty("query")?l.query:d,p=l.hasOwnProperty("hash")?l.hash:p,m=l.hasOwnProperty("params")?l.params:m,c){o[c];return i({_normalized:!0,name:c,query:d,hash:p,params:m},void 0,r)}if(u){var f=function(n,e){return _(n,e.parent?e.parent.path:"/",!0)}(u,n);return i({_normalized:!0,path:q(f,m),query:d,hash:p},void 0,r)}return s(null,r)}function s(n,r,t){return n&&n.redirect?l(n,t||r):n&&n.matchAs?function(n,e,r){var t=i({_normalized:!0,path:q(r,e.params)});if(t){var a=t.matched,o=a[a.length-1];return e.params=t.params,s(o,e)}return s(null,e)}(0,r,n.matchAs):h(n,r,t,e)}return{match:i,addRoute:function(n,e){var r="object"!=typeof n?o[n]:void 0;Y([e||n],t,a,o,r),r&&r.alias.length&&Y(r.alias.map((function(n){return{path:n,children:[e]}})),t,a,o,r)},getRoutes:function(){return t.map((function(n){return a[n]}))},addRoutes:function(n){Y(n,t,a,o)}}}function X(n,e,r){var t=e.match(n);if(!t)return!1;if(!r)return!0;for(var a=1,o=t.length;a<o;++a){var i=n.keys[a-1];i&&(r[i.name||"pathMatch"]="string"==typeof t[a]?c(t[a]):t[a])}return!0}var nn=K&&window.performance&&window.performance.now?window.performance:Date;function en(){return nn.now().toFixed(3)}var rn=en();function tn(){return rn}function an(n){return rn=n}var on=Object.create(null);function ln(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),r=a({},window.history.state);return r.key=tn(),window.history.replaceState(r,"",e),window.addEventListener("popstate",un),function(){window.removeEventListener("popstate",un)}}function sn(n,e,r,t){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var o=function(){var n=tn();if(n)return on[n]}(),i=a.call(n,e,r,t?o:null);i&&("function"==typeof i.then?i.then((function(n){fn(n,o)})).catch((function(n){0})):fn(i,o))}))}}function cn(){var n=tn();n&&(on[n]={x:window.pageXOffset,y:window.pageYOffset})}function un(n){cn(),n.state&&n.state.key&&an(n.state.key)}function dn(n){return mn(n.x)||mn(n.y)}function pn(n){return{x:mn(n.x)?n.x:window.pageXOffset,y:mn(n.y)?n.y:window.pageYOffset}}function mn(n){return"number"==typeof n}var hn=/^#\d/;function fn(n,e){var r,t="object"==typeof n;if(t&&"string"==typeof n.selector){var a=hn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var o=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var r=document.documentElement.getBoundingClientRect(),t=n.getBoundingClientRect();return{x:t.left-r.left-e.x,y:t.top-r.top-e.y}}(a,o={x:mn((r=o).x)?r.x:0,y:mn(r.y)?r.y:0})}else dn(n)&&(e=pn(n))}else t&&dn(n)&&(e=pn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var gn,vn=K&&((-1===(gn=window.navigator.userAgent).indexOf("Android 2.")&&-1===gn.indexOf("Android 4.0")||-1===gn.indexOf("Mobile Safari")||-1!==gn.indexOf("Chrome")||-1!==gn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){cn();var r=window.history;try{if(e){var t=a({},r.state);t.key=tn(),r.replaceState(t,"",n)}else r.pushState({key:an(en())},"",n)}catch(r){window.location[e?"replace":"assign"](n)}}function yn(n){bn(n,!0)}var xn={redirected:2,aborted:4,cancelled:8,duplicated:16};function wn(n,e){return Cn(n,e,xn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return _n.forEach((function(r){r in n&&(e[r]=n[r])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function kn(n,e){return Cn(n,e,xn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Cn(n,e,r,t){var a=new Error(t);return a._isRouter=!0,a.from=n,a.to=e,a.type=r,a}var _n=["params","query","hash"];function Dn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Sn(n,e){return Dn(n)&&n._isRouter&&(null==e||n.type===e)}function $n(n,e,r){var t=function(a){a>=n.length?r():n[a]?e(n[a],(function(){t(a+1)})):t(a+1)};t(0)}function An(n){return function(e,r,t){var a=!1,o=0,i=null;Tn(n,(function(n,e,r,l){if("function"==typeof n&&void 0===n.cid){a=!0,o++;var s,c=zn((function(e){var a;((a=e).__esModule||En&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:H.extend(e),r.components[l]=e,--o<=0&&t()})),u=zn((function(n){var e="Failed to resolve async component "+l+": "+n;i||(i=Dn(n)?n:new Error(e),t(i))}));try{s=n(c,u)}catch(n){u(n)}if(s)if("function"==typeof s.then)s.then(c,u);else{var d=s.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),a||t()}}function Tn(n,e){return jn(n.map((function(n){return Object.keys(n.components).map((function(r){return e(n.components[r],n.instances[r],n,r)}))})))}function jn(n){return Array.prototype.concat.apply([],n)}var En="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function zn(n){var e=!1;return function(){for(var r=[],t=arguments.length;t--;)r[t]=arguments[t];if(!e)return e=!0,n.apply(this,r)}}var In=function(n,e){this.router=n,this.base=function(n){if(!n)if(K){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Fn(n,e,r,t){var a=Tn(n,(function(n,t,a,o){var i=function(n,e){"function"!=typeof n&&(n=H.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return r(n,t,a,o)})):r(i,t,a,o)}));return jn(t?a.reverse():a)}function On(n,e){if(e)return function(){return n.apply(e,arguments)}}In.prototype.listen=function(n){this.cb=n},In.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},In.prototype.onError=function(n){this.errorCbs.push(n)},In.prototype.transitionTo=function(n,e,r){var t,a=this;try{t=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var o=this.current;this.confirmTransition(t,(function(){a.updateRoute(t),e&&e(t),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(t,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(t)})))}),(function(n){r&&r(n),n&&!a.ready&&(Sn(n,xn.redirected)&&o===g||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},In.prototype.confirmTransition=function(n,e,r){var t=this,a=this.current;this.pending=n;var o=function(n){!Sn(n)&&Dn(n)&&(t.errorCbs.length?t.errorCbs.forEach((function(e){e(n)})):console.error(n)),r&&r(n)},i=n.matched.length-1,l=a.matched.length-1;if(y(n,a)&&i===l&&n.matched[i]===a.matched[l])return this.ensureURL(),n.hash&&sn(this.router,a,n,!1),o(function(n,e){var r=Cn(n,e,xn.duplicated,'Avoided redundant navigation to current location: "'+n.fullPath+'".');return r.name="NavigationDuplicated",r}(a,n));var s=function(n,e){var r,t=Math.max(n.length,e.length);for(r=0;r<t&&n[r]===e[r];r++);return{updated:e.slice(0,r),activated:e.slice(r),deactivated:n.slice(r)}}(this.current.matched,n.matched),c=s.updated,u=s.deactivated,d=s.activated,p=[].concat(function(n){return Fn(n,"beforeRouteLeave",On,!0)}(u),this.router.beforeHooks,function(n){return Fn(n,"beforeRouteUpdate",On)}(c),d.map((function(n){return n.beforeEnter})),An(d)),m=function(e,r){if(t.pending!==n)return o(kn(a,n));try{e(n,a,(function(e){!1===e?(t.ensureURL(!0),o(function(n,e){return Cn(n,e,xn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):Dn(e)?(t.ensureURL(!0),o(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(o(wn(a,n)),"object"==typeof e&&e.replace?t.replace(e):t.push(e)):r(e)}))}catch(n){o(n)}};$n(p,m,(function(){$n(function(n){return Fn(n,"beforeRouteEnter",(function(n,e,r,t){return function(n,e,r){return function(t,a,o){return n(t,a,(function(n){"function"==typeof n&&(e.enteredCbs[r]||(e.enteredCbs[r]=[]),e.enteredCbs[r].push(n)),o(n)}))}}(n,r,t)}))}(d).concat(t.router.resolveHooks),m,(function(){if(t.pending!==n)return o(kn(a,n));t.pending=null,e(n),t.router.app&&t.router.app.$nextTick((function(){w(n)}))}))}))},In.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},In.prototype.setupListeners=function(){},In.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=g,this.pending=null};var Pn=function(n){function e(e,r){n.call(this,e,r),this._startLocation=Mn(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,r=e.options.scrollBehavior,t=vn&&r;t&&this.listeners.push(ln());var a=function(){var r=n.current,a=Mn(n.base);n.current===g&&a===n._startLocation||n.transitionTo(a,(function(n){t&&sn(e,n,r,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,r){var t=this,a=this.current;this.transitionTo(n,(function(n){bn(D(t.base+n.fullPath)),sn(t.router,n,a,!1),e&&e(n)}),r)},e.prototype.replace=function(n,e,r){var t=this,a=this.current;this.transitionTo(n,(function(n){yn(D(t.base+n.fullPath)),sn(t.router,n,a,!1),e&&e(n)}),r)},e.prototype.ensureURL=function(n){if(Mn(this.base)!==this.current.fullPath){var e=D(this.base+this.current.fullPath);n?bn(e):yn(e)}},e.prototype.getCurrentLocation=function(){return Mn(this.base)},e}(In);function Mn(n){var e=window.location.pathname,r=e.toLowerCase(),t=n.toLowerCase();return!n||r!==t&&0!==r.indexOf(D(t+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ln=function(n){function e(e,r,t){n.call(this,e,r),t&&function(n){var e=Mn(n);if(!/^\/#/.test(e))return window.location.replace(D(n+"/#"+e)),!0}(this.base)||Rn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,r=vn&&e;r&&this.listeners.push(ln());var t=function(){var e=n.current;Rn()&&n.transitionTo(Bn(),(function(t){r&&sn(n.router,t,e,!0),vn||qn(t.fullPath)}))},a=vn?"popstate":"hashchange";window.addEventListener(a,t),this.listeners.push((function(){window.removeEventListener(a,t)}))}},e.prototype.push=function(n,e,r){var t=this,a=this.current;this.transitionTo(n,(function(n){Un(n.fullPath),sn(t.router,n,a,!1),e&&e(n)}),r)},e.prototype.replace=function(n,e,r){var t=this,a=this.current;this.transitionTo(n,(function(n){qn(n.fullPath),sn(t.router,n,a,!1),e&&e(n)}),r)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Bn()!==e&&(n?Un(e):qn(e))},e.prototype.getCurrentLocation=function(){return Bn()},e}(In);function Rn(){var n=Bn();return"/"===n.charAt(0)||(qn("/"+n),!1)}function Bn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Nn(n){var e=window.location.href,r=e.indexOf("#");return(r>=0?e.slice(0,r):e)+"#"+n}function Un(n){vn?bn(Nn(n)):window.location.hash=n}function qn(n){vn?yn(Nn(n)):window.location.replace(Nn(n))}var Vn=function(n){function e(e,r){n.call(this,e,r),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,r){var t=this;this.transitionTo(n,(function(n){t.stack=t.stack.slice(0,t.index+1).concat(n),t.index++,e&&e(n)}),r)},e.prototype.replace=function(n,e,r){var t=this;this.transitionTo(n,(function(n){t.stack=t.stack.slice(0,t.index).concat(n),e&&e(n)}),r)},e.prototype.go=function(n){var e=this,r=this.index+n;if(!(r<0||r>=this.stack.length)){var t=this.stack[r];this.confirmTransition(t,(function(){var n=e.current;e.index=r,e.updateRoute(t),e.router.afterHooks.forEach((function(e){e&&e(t,n)}))}),(function(n){Sn(n,xn.duplicated)&&(e.index=r)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(In),Hn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!vn&&!1!==n.fallback,this.fallback&&(e="hash"),K||(e="abstract"),this.mode=e,e){case"history":this.history=new Pn(this,n.base);break;case"hash":this.history=new Ln(this,n.base,this.fallback);break;case"abstract":this.history=new Vn(this,n.base);break;default:0}},Wn={currentRoute:{configurable:!0}};Hn.prototype.match=function(n,e,r){return this.matcher.match(n,e,r)},Wn.currentRoute.get=function(){return this.history&&this.history.current},Hn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var r=e.apps.indexOf(n);r>-1&&e.apps.splice(r,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var r=this.history;if(r instanceof Pn||r instanceof Ln){var t=function(n){r.setupListeners(),function(n){var t=r.current,a=e.options.scrollBehavior;vn&&a&&"fullPath"in n&&sn(e,n,t,!1)}(n)};r.transitionTo(r.getCurrentLocation(),t,t)}r.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Hn.prototype.beforeEach=function(n){return Qn(this.beforeHooks,n)},Hn.prototype.beforeResolve=function(n){return Qn(this.resolveHooks,n)},Hn.prototype.afterEach=function(n){return Qn(this.afterHooks,n)},Hn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Hn.prototype.onError=function(n){this.history.onError(n)},Hn.prototype.push=function(n,e,r){var t=this;if(!e&&!r&&"undefined"!=typeof Promise)return new Promise((function(e,r){t.history.push(n,e,r)}));this.history.push(n,e,r)},Hn.prototype.replace=function(n,e,r){var t=this;if(!e&&!r&&"undefined"!=typeof Promise)return new Promise((function(e,r){t.history.replace(n,e,r)}));this.history.replace(n,e,r)},Hn.prototype.go=function(n){this.history.go(n)},Hn.prototype.back=function(){this.go(-1)},Hn.prototype.forward=function(){this.go(1)},Hn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Hn.prototype.resolve=function(n,e,r){var t=V(n,e=e||this.history.current,r,this),a=this.match(t,e),o=a.redirectedFrom||a.fullPath;return{location:t,route:a,href:function(n,e,r){var t="hash"===r?"#"+e:e;return n?D(n+"/"+t):t}(this.history.base,o,this.mode),normalizedTo:t,resolved:a}},Hn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Hn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Hn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Hn.prototype,Wn);var Gn=Hn;function Qn(n,e){return n.push(e),function(){var r=n.indexOf(e);r>-1&&n.splice(r,1)}}Hn.install=function n(e){if(!n.installed||H!==e){n.installed=!0,H=e;var r=function(n){return void 0!==n},t=function(n,e){var t=n.$options._parentVnode;r(t)&&r(t=t.data)&&r(t=t.registerRouteInstance)&&t(n,e)};e.mixin({beforeCreate:function(){r(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,t(this,this)},destroyed:function(){t(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",k),e.component("RouterLink",G);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Hn.version="3.6.5",Hn.isNavigationFailure=Sn,Hn.NavigationFailureType=xn,Hn.START_LOCATION=g,K&&window.Vue&&window.Vue.use(Hn);r(61);r(128),r(16);var Kn={"components/AlgoliaSearchBox":()=>Promise.all([r.e(0),r.e(20)]).then(r.bind(null,805)),"components/Common":()=>Promise.all([r.e(0),r.e(1),r.e(2)]).then(r.bind(null,419)),"components/DropdownLink":()=>Promise.all([r.e(0),r.e(21)]).then(r.bind(null,394)),"components/DropdownTransition":()=>Promise.all([r.e(0),r.e(83)]).then(r.bind(null,352)),"components/Footer":()=>Promise.all([r.e(0),r.e(27)]).then(r.bind(null,594)),"components/FriendLink":()=>Promise.all([r.e(0),r.e(33)]).then(r.bind(null,595)),"components/Home":()=>Promise.all([r.e(0),r.e(28)]).then(r.bind(null,596)),"components/MobShare":()=>r.e(167).then(r.bind(null,806)),"components/Navbar":()=>Promise.all([r.e(0),r.e(1)]).then(r.bind(null,788)),"components/NavLink":()=>r.e(34).then(r.bind(null,342)),"components/NavLinks":()=>Promise.all([r.e(0),r.e(18)]).then(r.bind(null,420)),"components/NoteAbstract":()=>Promise.all([r.e(0),r.e(19)]).then(r.bind(null,373)),"components/NoteAbstractItem":()=>Promise.all([r.e(0),r.e(25)]).then(r.bind(null,362)),"components/Page":()=>Promise.all([r.e(0),r.e(26)]).then(r.bind(null,597)),"components/PageInfo":()=>Promise.all([r.e(0),r.e(29)]).then(r.bind(null,339)),"components/Password":()=>Promise.all([r.e(0),r.e(23)]).then(r.bind(null,593)),"components/PersonalInfo":()=>Promise.all([r.e(0),r.e(30)]).then(r.bind(null,441)),"components/SearchBox":()=>Promise.all([r.e(0),r.e(31)]).then(r.bind(null,807)),"components/Sidebar":()=>Promise.all([r.e(0),r.e(17)]).then(r.bind(null,592)),"components/SidebarButton":()=>Promise.all([r.e(0),r.e(84)]).then(r.bind(null,601)),"components/SidebarGroup":()=>Promise.all([r.e(0),r.e(10)]).then(r.bind(null,421)),"components/SidebarLink":()=>Promise.all([r.e(0),r.e(85)]).then(r.bind(null,397)),"components/SidebarLinks":()=>Promise.all([r.e(0),r.e(10)]).then(r.bind(null,385)),"components/SubSidebar":()=>Promise.all([r.e(0),r.e(41)]).then(r.bind(null,602)),"components/TagList":()=>Promise.all([r.e(0),r.e(42)]).then(r.bind(null,395)),"global-components/Badge":()=>Promise.all([r.e(0),r.e(13)]).then(r.bind(null,937)),"layouts/404":()=>Promise.all([r.e(0),r.e(11)]).then(r.bind(null,808)),"layouts/Category":()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(8)]).then(r.bind(null,809)),"layouts/Layout":()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(3),r.e(9)]).then(r.bind(null,810)),"layouts/Tag":()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(6)]).then(r.bind(null,811)),"layouts/Tags":()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(7)]).then(r.bind(null,812)),"layouts/TimeLines":()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(12)]).then(r.bind(null,813)),"components/HomeBlog/index":()=>Promise.all([r.e(0),r.e(3),r.e(24)]).then(r.bind(null,789)),"components/Mode/index":()=>Promise.all([r.e(0),r.e(22)]).then(r.bind(null,591)),"components/Mode/ModePicker":()=>Promise.all([r.e(0),r.e(40)]).then(r.bind(null,440)),NotFound:()=>Promise.all([r.e(0),r.e(11)]).then(r.bind(null,808)),Category:()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(8)]).then(r.bind(null,809)),Layout:()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(3),r.e(9)]).then(r.bind(null,810)),Tag:()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(6)]).then(r.bind(null,811)),Tags:()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(7)]).then(r.bind(null,812)),TimeLines:()=>Promise.all([r.e(0),r.e(1),r.e(2),r.e(12)]).then(r.bind(null,813))},Yn={"v-161dc804":()=>r.e(168).then(r.bind(null,938)),"v-427ebad7":()=>r.e(170).then(r.bind(null,939)),"v-9e6b663a":()=>r.e(171).then(r.bind(null,940)),"v-1493e1d2":()=>r.e(169).then(r.bind(null,941)),"v-0b30ab17":()=>r.e(172).then(r.bind(null,942)),"v-4344491d":()=>r.e(175).then(r.bind(null,943)),"v-16e3f652":()=>r.e(173).then(r.bind(null,944)),"v-5e7873c3":()=>r.e(176).then(r.bind(null,945)),"v-6510f261":()=>r.e(174).then(r.bind(null,946)),"v-5bc01633":()=>Promise.all([r.e(0),r.e(86)]).then(r.bind(null,947)),"v-4fd4e8f7":()=>r.e(177).then(r.bind(null,948)),"v-1de771f7":()=>r.e(181).then(r.bind(null,949)),"v-51203eb7":()=>r.e(178).then(r.bind(null,950)),"v-4fefb0fa":()=>r.e(179).then(r.bind(null,951)),"v-907dced2":()=>r.e(180).then(r.bind(null,952)),"v-05c1aef7":()=>r.e(182).then(r.bind(null,953)),"v-63298792":()=>r.e(184).then(r.bind(null,954)),"v-3dd5d8d3":()=>r.e(185).then(r.bind(null,955)),"v-4baf3a07":()=>r.e(183).then(r.bind(null,956)),"v-1abf8fdf":()=>r.e(188).then(r.bind(null,957)),"v-6c0f357a":()=>r.e(189).then(r.bind(null,958)),"v-38f5f4b7":()=>r.e(187).then(r.bind(null,959)),"v-322f6716":()=>r.e(190).then(r.bind(null,960)),"v-43b81a2f":()=>r.e(186).then(r.bind(null,961)),"v-c2e301b2":()=>r.e(192).then(r.bind(null,962)),"v-4d40edb7":()=>r.e(191).then(r.bind(null,963)),"v-a4ffa1d2":()=>r.e(193).then(r.bind(null,964)),"v-2608c0d7":()=>r.e(197).then(r.bind(null,965)),"v-507c3dd2":()=>r.e(195).then(r.bind(null,966)),"v-bf76f3ba":()=>r.e(196).then(r.bind(null,967)),"v-33d6c62d":()=>r.e(194).then(r.bind(null,968)),"v-28bb2c97":()=>r.e(199).then(r.bind(null,969)),"v-525cf9f7":()=>r.e(198).then(r.bind(null,970)),"v-33cfa907":()=>r.e(200).then(r.bind(null,971)),"v-c4194d52":()=>r.e(201).then(r.bind(null,972)),"v-70a9e8d2":()=>r.e(203).then(r.bind(null,973)),"v-5f30a1d2":()=>r.e(202).then(r.bind(null,974))};function Jn(n){const e=Object.create(null);return function(r){return e[r]||(e[r]=n(r))}}const Zn=/-(\w)/g,Xn=Jn(n=>n.replace(Zn,(n,e)=>e?e.toUpperCase():"")),ne=/\B([A-Z])/g,ee=Jn(n=>n.replace(ne,"-$1").toLowerCase()),re=Jn(n=>n.charAt(0).toUpperCase()+n.slice(1));function te(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(re(Xn(e))):n(re(e))||n(ee(e))}const ae=Object.assign({},Kn,Yn),oe=n=>ae[n],ie=n=>Yn[n],le=n=>Kn[n],se=n=>t.default.component(n);function ce(n){return te(ie,n)}function ue(n){return te(le,n)}function de(n){return te(oe,n)}function pe(n){return te(se,n)}function me(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!pe(n)&&de(n)){const e=await de(n)();t.default.component(n,e.default)}}))}function he(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var fe=r(122),ge=r.n(fe),ve=r(123),be=r.n(ve),ye={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(r=>{e+=` ${r}="${be()(n[r])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=we(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ke(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ge()([{name:"description",content:this.$description}],n,this.siteMeta,Ce)},updateCanonicalLink(){xe(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",we(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ke(null,this.currentMetaTags),xe()}};function xe(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function we(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ke(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(r=>{e.setAttribute(r,n[r])}),document.head.appendChild(e),e})}function Ce(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var _e=r(124),De={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:r.n(_e)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+r;for(let n=0;n<e.length;n++){const o=e[n],i=e[n+1],l=0===n&&0===r||r>=o.parentElement.offsetTop+10&&(!i||r<i.parentElement.offsetTop-10),s=decodeURIComponent(this.$route.hash);if(l&&s!==decodeURIComponent(o.hash)){const r=o;if(a===t)for(let r=n+1;r<e.length;r++)if(s===decodeURIComponent(e[r].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(r.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Se=(r(269),Object.assign||function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n}),$e=function(n){return"IMG"===n.tagName},Ae=function(n){return n&&1===n.nodeType},Te=function(n){return".svg"===(n.currentSrc||n.src).substr(-4).toLowerCase()},je=function(n){try{return Array.isArray(n)?n.filter($e):function(n){return NodeList.prototype.isPrototypeOf(n)}(n)?[].slice.call(n).filter($e):Ae(n)?[n].filter($e):"string"==typeof n?[].slice.call(document.querySelectorAll(n)).filter($e):[]}catch(n){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Ee=function(n){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=n,e},ze=function(n){var e=n.getBoundingClientRect(),r=e.top,t=e.left,a=e.width,o=e.height,i=n.cloneNode(),l=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,s=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=r+l+"px",i.style.left=t+s+"px",i.style.width=a+"px",i.style.height=o+"px",i.style.transform="",i},Ie=function(n,e){var r=Se({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(n,r);var t=document.createEvent("CustomEvent");return t.initCustomEvent(n,r.bubbles,r.cancelable,r.detail),t};!function(n,e){void 0===e&&(e={});var r=e.insertAt;if(n&&"undefined"!=typeof document){var t=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===r&&t.firstChild?t.insertBefore(a,t.firstChild):t.appendChild(a),a.styleSheet?a.styleSheet.cssText=n:a.appendChild(document.createTextNode(n))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Fe=function n(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=window.Promise||function(n){function e(){}n(e,e)},a=function(n){var e=n.target;e!==D?-1!==y.indexOf(e)&&f({target:e}):h()},o=function(){if(!w&&_.original){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(k-n)>C.scrollOffset&&setTimeout(h,150)}},i=function(n){var e=n.key||n.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||h()},l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n;if(n.background&&(D.style.background=n.background),n.container&&n.container instanceof Object&&(e.container=Se({},C.container,n.container)),n.template){var r=Ae(n.template)?n.template:document.querySelector(n.template);e.template=r}return C=Se({},C,e),y.forEach((function(n){n.dispatchEvent(Ie("medium-zoom:update",{detail:{zoom:S}}))})),S},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n(Se({},C,e))},c=function(){for(var n=arguments.length,e=Array(n),r=0;r<n;r++)e[r]=arguments[r];var t=e.reduce((function(n,e){return[].concat(n,je(e))}),[]);return t.filter((function(n){return-1===y.indexOf(n)})).forEach((function(n){y.push(n),n.classList.add("medium-zoom-image")})),x.forEach((function(n){var e=n.type,r=n.listener,a=n.options;t.forEach((function(n){n.addEventListener(e,r,a)}))})),S},u=function(){for(var n=arguments.length,e=Array(n),r=0;r<n;r++)e[r]=arguments[r];_.zoomed&&h();var t=e.length>0?e.reduce((function(n,e){return[].concat(n,je(e))}),[]):y;return t.forEach((function(n){n.classList.remove("medium-zoom-image"),n.dispatchEvent(Ie("medium-zoom:detach",{detail:{zoom:S}}))})),y=y.filter((function(n){return-1===t.indexOf(n)})),S},d=function(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(t){t.addEventListener("medium-zoom:"+n,e,r)})),x.push({type:"medium-zoom:"+n,listener:e,options:r}),S},p=function(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(t){t.removeEventListener("medium-zoom:"+n,e,r)})),x=x.filter((function(r){return!(r.type==="medium-zoom:"+n&&r.listener.toString()===e.toString())})),S},m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target,r=function(){var n={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,r=void 0;if(C.container)if(C.container instanceof Object)e=(n=Se({},n,C.container)).width-n.left-n.right-2*C.margin,r=n.height-n.top-n.bottom-2*C.margin;else{var t=(Ae(C.container)?C.container:document.querySelector(C.container)).getBoundingClientRect(),a=t.width,o=t.height,i=t.left,l=t.top;n=Se({},n,{width:a,height:o,left:i,top:l})}e=e||n.width-2*C.margin,r=r||n.height-2*C.margin;var s=_.zoomedHd||_.original,c=Te(s)?e:s.naturalWidth||e,u=Te(s)?r:s.naturalHeight||r,d=s.getBoundingClientRect(),p=d.top,m=d.left,h=d.width,f=d.height,g=Math.min(Math.max(h,c),e)/h,v=Math.min(Math.max(f,u),r)/f,b=Math.min(g,v),y="scale("+b+") translate3d("+((e-h)/2-m+C.margin+n.left)/b+"px, "+((r-f)/2-p+C.margin+n.top)/b+"px, 0)";_.zoomed.style.transform=y,_.zoomedHd&&(_.zoomedHd.style.transform=y)};return new t((function(n){if(e&&-1===y.indexOf(e))n(S);else{if(_.zoomed)n(S);else{if(e)_.original=e;else{if(!(y.length>0))return void n(S);var t=y;_.original=t[0]}if(_.original.dispatchEvent(Ie("medium-zoom:open",{detail:{zoom:S}})),k=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,w=!0,_.zoomed=ze(_.original),document.body.appendChild(D),C.template){var a=Ae(C.template)?C.template:document.querySelector(C.template);_.template=document.createElement("div"),_.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(_.template)}if(_.original.parentElement&&"PICTURE"===_.original.parentElement.tagName&&_.original.currentSrc&&(_.zoomed.src=_.original.currentSrc),document.body.appendChild(_.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),_.original.classList.add("medium-zoom-image--hidden"),_.zoomed.classList.add("medium-zoom-image--opened"),_.zoomed.addEventListener("click",h),_.zoomed.addEventListener("transitionend",(function e(){w=!1,_.zoomed.removeEventListener("transitionend",e),_.original.dispatchEvent(Ie("medium-zoom:opened",{detail:{zoom:S}})),n(S)})),_.original.getAttribute("data-zoom-src")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("srcset"),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.removeAttribute("loading"),_.zoomedHd.src=_.zoomed.getAttribute("data-zoom-src"),_.zoomedHd.onerror=function(){clearInterval(o),console.warn("Unable to reach the zoom image target "+_.zoomedHd.src),_.zoomedHd=null,r()};var o=setInterval((function(){_.zoomedHd.complete&&(clearInterval(o),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),r())}),10)}else if(_.original.hasAttribute("srcset")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.removeAttribute("loading");var i=_.zoomedHd.addEventListener("load",(function(){_.zoomedHd.removeEventListener("load",i),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),r()}))}else r()}}}))},h=function(){return new t((function(n){if(!w&&_.original){w=!0,document.body.classList.remove("medium-zoom--opened"),_.zoomed.style.transform="",_.zoomedHd&&(_.zoomedHd.style.transform=""),_.template&&(_.template.style.transition="opacity 150ms",_.template.style.opacity=0),_.original.dispatchEvent(Ie("medium-zoom:close",{detail:{zoom:S}})),_.zoomed.addEventListener("transitionend",(function e(){_.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(_.zoomed),_.zoomedHd&&document.body.removeChild(_.zoomedHd),document.body.removeChild(D),_.zoomed.classList.remove("medium-zoom-image--opened"),_.template&&document.body.removeChild(_.template),w=!1,_.zoomed.removeEventListener("transitionend",e),_.original.dispatchEvent(Ie("medium-zoom:closed",{detail:{zoom:S}})),_.original=null,_.zoomed=null,_.zoomedHd=null,_.template=null,n(S)}))}else n(S)}))},f=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target;return _.original?h():m({target:e})},g=function(){return C},v=function(){return y},b=function(){return _.original},y=[],x=[],w=!1,k=0,C=r,_={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?C=e:(e||"string"==typeof e)&&c(e),C=Se({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},C);var D=Ee(C.background);document.addEventListener("click",a),document.addEventListener("keyup",i),document.addEventListener("scroll",o),window.addEventListener("resize",h);var S={open:m,close:h,toggle:f,update:l,clone:s,attach:c,detach:u,on:d,off:p,getOptions:g,getImages:v,getZoomedImage:b};return S},Oe={data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Fe(".theme-reco-content :not(a) > img",{})},1e3)}}},Pe=r(40),Me=r.n(Pe),Le={mounted(){Me.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,r)=>{n.path===e.path||t.default.component(n.name)||Me.a.start(),r()}),this.$router.afterEach(()=>{Me.a.done(),this.isSidebarOpen=!1})}},Re=r(125),Be=r.n(Re),Ne={mounted(){Be.a.polyfill()}},Ue={props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:()=>({success:!1,originalBackground:null,originalTransition:null}),computed:{alignStyle(){let n={};return n[this.options.align]="7.5px",n},iconClass(){return this.options.staticIcon?"":"hover"}},mounted(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb(n){let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null},copyToClipboard(n){if(navigator.clipboard)navigator.clipboard.writeText(this.code).then(()=>{this.setSuccessTransitions()},()=>{});else{let n=document.createElement("textarea");document.body.appendChild(n),n.value=this.code,n.select(),document.execCommand("Copy"),n.remove(),this.setSuccessTransitions()}},setSuccessTransitions(){if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";let n=this.hexToRgb(this.options.backgroundColor);this.parent.style.background=`rgba(${n.r}, ${n.g}, ${n.b}, 0.1)`}this.success=!0,this.successTimeout=setTimeout(()=>{this.options.backgroundTransition&&(this.parent.style.background=this.originalBackground,this.parent.style.transition=this.originalTransition),this.success=!1},500)}}},qe=(r(270),r(2)),Ve=Object(qe.a)(Ue,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"code-copy"},[e("svg",{class:n.iconClass,style:n.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:n.copyToClipboard}},[e("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),n._v(" "),e("path",{attrs:{fill:n.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),n._v(" "),e("span",{class:n.success?"success":"",style:n.alignStyle},[n._v("\n        "+n._s(n.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,He=(r(271),[ye,De,Oe,Le,Ne,{updated(){this.update()},methods:{update(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"] pre').forEach(n=>{if(n.classList.contains("code-copy-added"))return;let e=new(t.default.extend(Ve));e.options={align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1},e.code=n.innerText,e.parent=n,e.$mount(),n.classList.add("code-copy-added"),n.appendChild(e.$el)})},100)}}}]),We={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return he("layout",n),t.default.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Ge=Object(qe.a)(We,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,r){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],r);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...r);break;default:throw new Error("Unknown option name.")}}(Ge,"mixins",He);const Qe=[{name:"v-161dc804",path:"/",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-161dc804").then(r)}},{path:"/index.html",redirect:"/"},{name:"v-427ebad7",path:"/guide/collapseSplitter/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-427ebad7").then(r)}},{name:"v-9e6b663a",path:"/guide/commonConfig/jsx.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-9e6b663a").then(r)}},{name:"v-1493e1d2",path:"/guide/button/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-1493e1d2").then(r)}},{name:"v-0b30ab17",path:"/guide/commonConfig/presetCodeTemplate.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-0b30ab17").then(r)}},{name:"v-4344491d",path:"/guide/crud/buttons.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-4344491d").then(r)}},{name:"v-16e3f652",path:"/guide/commonConfig/renderType.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-16e3f652").then(r)}},{name:"v-5e7873c3",path:"/guide/crud/contextMenu.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-5e7873c3").then(r)}},{name:"v-6510f261",path:"/guide/crud/areaSelection.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-6510f261").then(r)}},{name:"v-5bc01633",path:"/guide/crud/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-5bc01633").then(r)}},{name:"v-4fd4e8f7",path:"/guide/crud/dataSort.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-4fd4e8f7").then(r)}},{name:"v-1de771f7",path:"/guide/crud/renderType.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-1de771f7").then(r)}},{name:"v-51203eb7",path:"/guide/crud/expandFunction.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-51203eb7").then(r)}},{name:"v-4fefb0fa",path:"/guide/crud/genDynamicColumns.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-4fefb0fa").then(r)}},{name:"v-907dced2",path:"/guide/crud/optimize.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-907dced2").then(r)}},{name:"v-05c1aef7",path:"/guide/crud/search.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-05c1aef7").then(r)}},{name:"v-63298792",path:"/guide/crud/span.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-63298792").then(r)}},{name:"v-3dd5d8d3",path:"/guide/crud/summary.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-3dd5d8d3").then(r)}},{name:"v-4baf3a07",path:"/guide/crud/selection.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-4baf3a07").then(r)}},{name:"v-1abf8fdf",path:"/guide/dialog/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-1abf8fdf").then(r)}},{name:"v-6c0f357a",path:"/guide/dict/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-6c0f357a").then(r)}},{name:"v-38f5f4b7",path:"/guide/crud/validate.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-38f5f4b7").then(r)}},{name:"v-322f6716",path:"/guide/dict/component.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-322f6716").then(r)}},{name:"v-43b81a2f",path:"/guide/crud/tableEdit.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-43b81a2f").then(r)}},{name:"v-c2e301b2",path:"/guide/form/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-c2e301b2").then(r)}},{name:"v-4d40edb7",path:"/guide/dict/config.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-4d40edb7").then(r)}},{name:"v-a4ffa1d2",path:"/guide/form/detail.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-a4ffa1d2").then(r)}},{name:"v-2608c0d7",path:"/guide/mockData/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-2608c0d7").then(r)}},{name:"v-507c3dd2",path:"/guide/formatData/config.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-507c3dd2").then(r)}},{name:"v-bf76f3ba",path:"/guide/grid/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-bf76f3ba").then(r)}},{name:"v-33d6c62d",path:"/guide/formatData/baseUse.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-33d6c62d").then(r)}},{name:"v-28bb2c97",path:"/guide/question/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-28bb2c97").then(r)}},{name:"v-525cf9f7",path:"/guide/positionSlot/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-525cf9f7").then(r)}},{name:"v-33cfa907",path:"/guide/start/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-33cfa907").then(r)}},{name:"v-c4194d52",path:"/guide/stepForm/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-c4194d52").then(r)}},{name:"v-70a9e8d2",path:"/guide/tabs/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-70a9e8d2").then(r)}},{name:"v-5f30a1d2",path:"/guide/tableSelect/base.html",component:Ge,beforeEnter:(n,e,r)=>{me("Layout","v-5f30a1d2").then(r)}},{name:"v-b1564aac",path:"/tag/",component:Ge,beforeEnter:(n,e,r)=>{me("Tags","v-b1564aac").then(r)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:Ge,beforeEnter:(n,e,r)=>{me("FrontmatterKey","v-ef9325c4").then(r)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-6319eb4e",path:"/timeline/",component:Ge,beforeEnter:(n,e,r)=>{me("TimeLines","v-6319eb4e").then(r)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{path:"*",component:Ge}],Ke={title:"VueSuperCrud",description:"基于element-ui二次封装，快速开发CRUD业务组件库",base:"/vue-super-crud/",headTags:[["link",{rel:"shortcut icon",type:"image/x-icon",href:"/vue-super-crud/favicon.ico"}]],pages:[{title:"Home",frontmatter:{home:!0,heroImage:"/super.png",actionText:"快速上手 →",actionLink:"/guide/start/base.md",features:[{title:"快速开发",details:"基于 Element UI 二次封装，极少的代码即可完成一个crud页面"},{title:"模板复用",details:"配置并复用代码模板，减少重复开发，提升开发效率"},{title:"高度自定义",details:"支持更灵活、丰富的组件配置，以满足不同项目的高度自定义需求"},{title:"极致优化",details:"表格更新渲染性能比 avue 快 2 倍以上"}],footer:"MIT Licensed | Copyright © 2024-present Blade"},regularPath:"/",relativePath:"README.md",key:"v-161dc804",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"基本使用",frontmatter:{},regularPath:"/guide/collapseSplitter/base.html",relativePath:"guide/collapseSplitter/base.md",key:"v-427ebad7",path:"/guide/collapseSplitter/base.html",headers:[{level:2,title:"基本用法",slug:"基本用法",normalizedTitle:"基本用法",charIndex:70},{level:2,title:"垂直分割",slug:"垂直分割",normalizedTitle:"垂直分割",charIndex:44},{level:2,title:"嵌套折叠分割",slug:"嵌套折叠分割",normalizedTitle:"嵌套折叠分割",charIndex:2723},{level:2,title:"事件监听",slug:"事件监听",normalizedTitle:"事件监听",charIndex:5121},{level:2,title:"自定义折叠插槽",slug:"自定义折叠插槽",normalizedTitle:"自定义折叠插槽",charIndex:7190},{level:2,title:"API 文档",slug:"api-文档",normalizedTitle:"api 文档",charIndex:10115},{level:3,title:"CollapseSplitter 属性",slug:"collapsesplitter-属性",normalizedTitle:"collapsesplitter 属性",charIndex:10126},{level:3,title:"SplitterPanel 属性",slug:"splitterpanel-属性",normalizedTitle:"splitterpanel 属性",charIndex:10342},{level:3,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:5121},{level:3,title:"sc-splitter-panel 插槽",slug:"sc-splitter-panel-插槽",normalizedTitle:"sc-splitter-panel 插槽",charIndex:10887},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:11112}],headersStr:"基本用法 垂直分割 嵌套折叠分割 事件监听 自定义折叠插槽 API 文档 CollapseSplitter 属性 SplitterPanel 属性 事件 sc-splitter-panel 插槽 方法",content:'# 基本使用\n\nCollapseSplitter 是一个可折叠的分割面板组件。支持水平和垂直分割，适用于构建复杂的可折叠布局界面。\n\n\n# 基本用法\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter style="height: 300px">\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-1">\r\n          <h4>面板 1</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-2">\r\n          <h4>面板 2</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-3">\r\n          <h4>面板 3</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CollapseSplitterBase",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-1 {\r\n  background: #667eea;\r\n  color: white;\r\n}\r\n\r\n.panel-2 {\r\n  background: #f5576c;\r\n  color: white;\r\n}\r\n\r\n.panel-3 {\r\n  background: #25ca99;\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 垂直分割\n\n通过设置 layout="vertical" 可以创建垂直分割面板：\n\n<template>\r\n  <div class="collapse-splitter-demo">\r\n    <div class="demo-container">\r\n      <sc-collapse-splitter layout="vertical" style="height: 400px">\r\n        <sc-splitter-panel>\r\n          <div class="panel-content panel-top">\r\n            <h4>上方面板</h4>\r\n            <p>这是上方面板的内容</p>\r\n            <p>垂直布局下点击分割线可以折叠上下面板</p>\r\n          </div>\r\n        </sc-splitter-panel>\r\n        <sc-splitter-panel>\r\n          <div class="panel-content panel-bottom">\r\n            <h4>下方面板</h4>\r\n            <p>这是下方面板的内容</p>\r\n            <p>支持垂直方向的智能空间分配</p>\r\n          </div>\r\n        </sc-splitter-panel>\r\n      </sc-collapse-splitter>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CollapseSplitterVertical",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.panel-top {\r\n  background: #84fab0;\r\n  color: white;\r\n}\r\n\r\n.panel-bottom {\r\n  background: #a8edea;\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 嵌套折叠分割\n\n支持嵌套使用，创建复杂的可折叠布局结构：\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter style="height: 400px">\r\n      \x3c!-- 左侧面板 --\x3e\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-left">\r\n          <h4>左侧导航</h4>\r\n          <p>这是左侧导航面板</p>\r\n          <p>可以放置菜单、工具栏等</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n\r\n      \x3c!-- 右侧嵌套分割 --\x3e\r\n      <sc-splitter-panel>\r\n        <sc-collapse-splitter layout="vertical">\r\n          \x3c!-- 上方面板 --\x3e\r\n          <sc-splitter-panel>\r\n            <div class="panel-content panel-top">\r\n              <h4>主要内容区</h4>\r\n              <p>这是主要的内容展示区域</p>\r\n              <p>可以放置表格、图表等主要内容</p>\r\n            </div>\r\n          </sc-splitter-panel>\r\n\r\n          \x3c!-- 下方面板 --\x3e\r\n          <sc-splitter-panel>\r\n            <sc-collapse-splitter>\r\n              \x3c!-- 下左面板 --\x3e\r\n              <sc-splitter-panel>\r\n                <div class="panel-content panel-bottom-left">\r\n                  <h4>下左面板</h4>\r\n                </div>\r\n              </sc-splitter-panel>\r\n\r\n              \x3c!-- 下右面板 --\x3e\r\n              <sc-splitter-panel>\r\n                <div class="panel-content panel-bottom-right">\r\n                  <h4>下右面板</h4>\r\n                </div>\r\n              </sc-splitter-panel>\r\n            </sc-collapse-splitter>\r\n          </sc-splitter-panel>\r\n        </sc-collapse-splitter>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CollapseSplitterNested",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-left {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-top {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-bottom-left {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-bottom-right {\r\n  background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 8px 0;\r\n  line-height: 1.5;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n\n\n\n# 事件监听\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter\r\n      ref="collapseSplitter"\r\n      style="height: 300px"\r\n      @panel-collapse="onPanelCollapse"\r\n      @panel-expand="onPanelExpand"\r\n      @all-panels-expanded="onAllPanelsExpanded"\r\n    >\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-left">\r\n          <h4>面板 A</h4>\r\n          <p>左侧面板内容</p>\r\n          <p>折叠/展开操作会触发相应事件</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-center">\r\n          <h4>面板 B</h4>\r\n          <p>中间面板内容</p>\r\n          <p>查看右侧事件日志</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-right">\r\n          <h4>面板 C</h4>\r\n          <p>右侧面板内容</p>\r\n          <p>所有事件都会被记录</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CollapseSplitterEvents",\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    onPanelCollapse(event) {\r\n      console.log("onPanelCollapse", event);\r\n    },\r\n    onPanelExpand(event) {\r\n      console.log("onPanelExpand", event);\r\n    },\r\n    onAllPanelsExpanded(event) {\r\n      console.log("onAllPanelsExpanded", event);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-left {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-center {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-right {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 自定义折叠插槽\n\n通过在 sc-splitter-panel 组件内定义插槽可以自定义折叠状态下的显示内容，提供更丰富的交互体验：\n\n<template>\r\n  <sc-collapse-splitter\r\n    :panels="panels"\r\n    direction="horizontal"\r\n    :gutter-size="8"\r\n    style="height: 300px; border: 1px solid #ddd"\r\n  >\r\n    \x3c!-- 第一个面板：在panel组件内定义折叠插槽 --\x3e\r\n    <sc-splitter-panel :size="30">\r\n      <div class="panel-content">\r\n        <h4>面板 1</h4>\r\n        <p>这是第一个面板的内容</p>\r\n        <el-button type="primary" size="small">操作按钮</el-button>\r\n      </div>\r\n\r\n      \x3c!-- 在panel组件内定义折叠状态的显示内容 --\x3e\r\n      <template #collapsed>\r\n        <div class="custom-collapsed">\r\n          <i class="el-icon-folder"></i>\r\n          <span>展开 面板1</span>\r\n        </div>\r\n      </template>\r\n      <template #collapsed-append>\r\n        <div class="append-content">\r\n          <el-badge :value="3" class="notification-badge">\r\n            <i class="el-icon-message"></i>\r\n          </el-badge>\r\n        </div>\r\n      </template>\r\n    </sc-splitter-panel>\r\n\r\n    \x3c!-- 第二个面板：使用追加插槽 --\x3e\r\n    <sc-splitter-panel :size="70" :collapsed="true">\r\n      <div class="panel-content">\r\n        <h4>面板 2</h4>\r\n        <p>这是第二个面板的内容，折叠时会显示默认图标加上追加内容</p>\r\n        <el-tag type="success">重要内容</el-tag>\r\n      </div>\r\n\r\n      \x3c!-- 在panel组件内定义追加内容 --\x3e\r\n      <template #collapsed-append>\r\n        <div class="append-content">\r\n          <el-badge :value="3" class="notification-badge">\r\n            <i class="el-icon-message"></i>\r\n          </el-badge>\r\n        </div>\r\n      </template>\r\n    </sc-splitter-panel>\r\n  </sc-collapse-splitter>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CollapseSplitterSlots",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.panel-content {\r\n  padding: 20px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 15px 0;\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n.stats {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  padding: 10px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-value {\r\n  display: block;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409eff;\r\n}\r\n\r\n.stat-label {\r\n  display: block;\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 自定义折叠面板样式 */\r\n.custom-collapsed-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.custom-collapsed-panel:hover {\r\n  background-color: rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n.collapsed-text {\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  color: #666;\r\n  writing-mode: vertical-lr;\r\n  text-orientation: mixed;\r\n}\r\n\r\n.append-content {\r\n  width: 25px;\r\n}\r\n\r\n.notification-badge {\r\n  cursor: pointer;\r\n}\r\n\r\n.notification-badge i {\r\n  font-size: 16px;\r\n  color: #f56c6c;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.notification-badge:hover i {\r\n  color: #f78989;\r\n}\r\n</style>\r\n\n\n\n# API 文档\n\n\n# CollapseSplitter 属性\n\n属性名           说明       类型        默认值\nlayout        分割方向     String    \'horizontal\'\ngutterSize    分割线宽度    Number    8\ngutterColor   分割线颜色    String    \ndisabled      是否禁用交互   Boolean   false\n\n\n# SplitterPanel 属性\n\n属性名         说明          类型        默认值\nsize        面板大小（百分比）   Number    null\ncollapsed   面板是否折叠      Boolean   false\n\n\n# 事件\n\n事件名                   说明          参数\npanel-collapse        面板折叠时触发     { index: Number, collapsed: Boolean, collapsedPanels: Array,\n                                  panelStates: Array }\npanel-expand          面板展开时触发     { index: Number, collapsed: Boolean, collapsedPanels: Array,\n                                  panelStates: Array }\nall-panels-expanded   所有面板展开时触发   { collapsedPanels: Array }\n\n\n# sc-splitter-panel 插槽\n\n在 sc-splitter-panel 组件内可以定义以下插槽来自定义折叠状态：\n\n插槽名                说明                            作用域参数\ncollapsed          完全自定义面板折叠状态下的显示内容，替换默认的折叠图标   无\ncollapsed-append   在默认折叠图标基础上追加内容，保留默认样式         无\n\n\n# 方法\n\n方法名               说明       参数              返回值\ncollapsePanel     折叠指定面板   index: Number   -\nexpandPanel       展开指定面板   index: Number   -\ntogglePanel       切换面板状态   index: Number   -\nexpandAllPanels   展开所有面板   -               -\ngetPanelStates    获取面板状态   -               Array',normalizedContent:'# 基本使用\n\ncollapsesplitter 是一个可折叠的分割面板组件。支持水平和垂直分割，适用于构建复杂的可折叠布局界面。\n\n\n# 基本用法\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter style="height: 300px">\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-1">\r\n          <h4>面板 1</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-2">\r\n          <h4>面板 2</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-3">\r\n          <h4>面板 3</h4>\r\n        </div>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "collapsesplitterbase",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-1 {\r\n  background: #667eea;\r\n  color: white;\r\n}\r\n\r\n.panel-2 {\r\n  background: #f5576c;\r\n  color: white;\r\n}\r\n\r\n.panel-3 {\r\n  background: #25ca99;\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 垂直分割\n\n通过设置 layout="vertical" 可以创建垂直分割面板：\n\n<template>\r\n  <div class="collapse-splitter-demo">\r\n    <div class="demo-container">\r\n      <sc-collapse-splitter layout="vertical" style="height: 400px">\r\n        <sc-splitter-panel>\r\n          <div class="panel-content panel-top">\r\n            <h4>上方面板</h4>\r\n            <p>这是上方面板的内容</p>\r\n            <p>垂直布局下点击分割线可以折叠上下面板</p>\r\n          </div>\r\n        </sc-splitter-panel>\r\n        <sc-splitter-panel>\r\n          <div class="panel-content panel-bottom">\r\n            <h4>下方面板</h4>\r\n            <p>这是下方面板的内容</p>\r\n            <p>支持垂直方向的智能空间分配</p>\r\n          </div>\r\n        </sc-splitter-panel>\r\n      </sc-collapse-splitter>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "collapsesplittervertical",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.panel-top {\r\n  background: #84fab0;\r\n  color: white;\r\n}\r\n\r\n.panel-bottom {\r\n  background: #a8edea;\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 嵌套折叠分割\n\n支持嵌套使用，创建复杂的可折叠布局结构：\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter style="height: 400px">\r\n      \x3c!-- 左侧面板 --\x3e\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-left">\r\n          <h4>左侧导航</h4>\r\n          <p>这是左侧导航面板</p>\r\n          <p>可以放置菜单、工具栏等</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n\r\n      \x3c!-- 右侧嵌套分割 --\x3e\r\n      <sc-splitter-panel>\r\n        <sc-collapse-splitter layout="vertical">\r\n          \x3c!-- 上方面板 --\x3e\r\n          <sc-splitter-panel>\r\n            <div class="panel-content panel-top">\r\n              <h4>主要内容区</h4>\r\n              <p>这是主要的内容展示区域</p>\r\n              <p>可以放置表格、图表等主要内容</p>\r\n            </div>\r\n          </sc-splitter-panel>\r\n\r\n          \x3c!-- 下方面板 --\x3e\r\n          <sc-splitter-panel>\r\n            <sc-collapse-splitter>\r\n              \x3c!-- 下左面板 --\x3e\r\n              <sc-splitter-panel>\r\n                <div class="panel-content panel-bottom-left">\r\n                  <h4>下左面板</h4>\r\n                </div>\r\n              </sc-splitter-panel>\r\n\r\n              \x3c!-- 下右面板 --\x3e\r\n              <sc-splitter-panel>\r\n                <div class="panel-content panel-bottom-right">\r\n                  <h4>下右面板</h4>\r\n                </div>\r\n              </sc-splitter-panel>\r\n            </sc-collapse-splitter>\r\n          </sc-splitter-panel>\r\n        </sc-collapse-splitter>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "collapsesplitternested",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-left {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-top {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-bottom-left {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-bottom-right {\r\n  background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 8px 0;\r\n  line-height: 1.5;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n\n\n\n# 事件监听\n\n<template>\r\n  <div class="demo-container">\r\n    <sc-collapse-splitter\r\n      ref="collapsesplitter"\r\n      style="height: 300px"\r\n      @panel-collapse="onpanelcollapse"\r\n      @panel-expand="onpanelexpand"\r\n      @all-panels-expanded="onallpanelsexpanded"\r\n    >\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-left">\r\n          <h4>面板 a</h4>\r\n          <p>左侧面板内容</p>\r\n          <p>折叠/展开操作会触发相应事件</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-center">\r\n          <h4>面板 b</h4>\r\n          <p>中间面板内容</p>\r\n          <p>查看右侧事件日志</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n      <sc-splitter-panel>\r\n        <div class="panel-content panel-right">\r\n          <h4>面板 c</h4>\r\n          <p>右侧面板内容</p>\r\n          <p>所有事件都会被记录</p>\r\n        </div>\r\n      </sc-splitter-panel>\r\n    </sc-collapse-splitter>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "collapsesplitterevents",\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    onpanelcollapse(event) {\r\n      console.log("onpanelcollapse", event);\r\n    },\r\n    onpanelexpand(event) {\r\n      console.log("onpanelexpand", event);\r\n    },\r\n    onallpanelsexpanded(event) {\r\n      console.log("onallpanelsexpanded", event);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-container {\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.panel-content {\r\n  height: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-left {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-center {\r\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-right {\r\n  background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);\r\n  color: white;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 10px 0;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 自定义折叠插槽\n\n通过在 sc-splitter-panel 组件内定义插槽可以自定义折叠状态下的显示内容，提供更丰富的交互体验：\n\n<template>\r\n  <sc-collapse-splitter\r\n    :panels="panels"\r\n    direction="horizontal"\r\n    :gutter-size="8"\r\n    style="height: 300px; border: 1px solid #ddd"\r\n  >\r\n    \x3c!-- 第一个面板：在panel组件内定义折叠插槽 --\x3e\r\n    <sc-splitter-panel :size="30">\r\n      <div class="panel-content">\r\n        <h4>面板 1</h4>\r\n        <p>这是第一个面板的内容</p>\r\n        <el-button type="primary" size="small">操作按钮</el-button>\r\n      </div>\r\n\r\n      \x3c!-- 在panel组件内定义折叠状态的显示内容 --\x3e\r\n      <template #collapsed>\r\n        <div class="custom-collapsed">\r\n          <i class="el-icon-folder"></i>\r\n          <span>展开 面板1</span>\r\n        </div>\r\n      </template>\r\n      <template #collapsed-append>\r\n        <div class="append-content">\r\n          <el-badge :value="3" class="notification-badge">\r\n            <i class="el-icon-message"></i>\r\n          </el-badge>\r\n        </div>\r\n      </template>\r\n    </sc-splitter-panel>\r\n\r\n    \x3c!-- 第二个面板：使用追加插槽 --\x3e\r\n    <sc-splitter-panel :size="70" :collapsed="true">\r\n      <div class="panel-content">\r\n        <h4>面板 2</h4>\r\n        <p>这是第二个面板的内容，折叠时会显示默认图标加上追加内容</p>\r\n        <el-tag type="success">重要内容</el-tag>\r\n      </div>\r\n\r\n      \x3c!-- 在panel组件内定义追加内容 --\x3e\r\n      <template #collapsed-append>\r\n        <div class="append-content">\r\n          <el-badge :value="3" class="notification-badge">\r\n            <i class="el-icon-message"></i>\r\n          </el-badge>\r\n        </div>\r\n      </template>\r\n    </sc-splitter-panel>\r\n  </sc-collapse-splitter>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "collapsesplitterslots",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.panel-content {\r\n  padding: 20px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n}\r\n\r\n.panel-content h4 {\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.panel-content p {\r\n  margin: 0 0 15px 0;\r\n  color: #666;\r\n  line-height: 1.5;\r\n}\r\n\r\n.stats {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  padding: 10px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-value {\r\n  display: block;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #409eff;\r\n}\r\n\r\n.stat-label {\r\n  display: block;\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 自定义折叠面板样式 */\r\n.custom-collapsed-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.custom-collapsed-panel:hover {\r\n  background-color: rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n.collapsed-text {\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  color: #666;\r\n  writing-mode: vertical-lr;\r\n  text-orientation: mixed;\r\n}\r\n\r\n.append-content {\r\n  width: 25px;\r\n}\r\n\r\n.notification-badge {\r\n  cursor: pointer;\r\n}\r\n\r\n.notification-badge i {\r\n  font-size: 16px;\r\n  color: #f56c6c;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.notification-badge:hover i {\r\n  color: #f78989;\r\n}\r\n</style>\r\n\n\n\n# api 文档\n\n\n# collapsesplitter 属性\n\n属性名           说明       类型        默认值\nlayout        分割方向     string    \'horizontal\'\nguttersize    分割线宽度    number    8\nguttercolor   分割线颜色    string    \ndisabled      是否禁用交互   boolean   false\n\n\n# splitterpanel 属性\n\n属性名         说明          类型        默认值\nsize        面板大小（百分比）   number    null\ncollapsed   面板是否折叠      boolean   false\n\n\n# 事件\n\n事件名                   说明          参数\npanel-collapse        面板折叠时触发     { index: number, collapsed: boolean, collapsedpanels: array,\n                                  panelstates: array }\npanel-expand          面板展开时触发     { index: number, collapsed: boolean, collapsedpanels: array,\n                                  panelstates: array }\nall-panels-expanded   所有面板展开时触发   { collapsedpanels: array }\n\n\n# sc-splitter-panel 插槽\n\n在 sc-splitter-panel 组件内可以定义以下插槽来自定义折叠状态：\n\n插槽名                说明                            作用域参数\ncollapsed          完全自定义面板折叠状态下的显示内容，替换默认的折叠图标   无\ncollapsed-append   在默认折叠图标基础上追加内容，保留默认样式         无\n\n\n# 方法\n\n方法名               说明       参数              返回值\ncollapsepanel     折叠指定面板   index: number   -\nexpandpanel       展开指定面板   index: number   -\ntogglepanel       切换面板状态   index: number   -\nexpandallpanels   展开所有面板   -               -\ngetpanelstates    获取面板状态   -               array',charsets:{cjk:!0}},{title:"JSX 语法",frontmatter:{},regularPath:"/guide/commonConfig/jsx.html",relativePath:"guide/commonConfig/jsx.md",key:"v-9e6b663a",path:"/guide/commonConfig/jsx.html",headers:[{level:2,title:"内容",slug:"内容",normalizedTitle:"内容",charIndex:13},{level:3,title:"具有动态内容:",slug:"具有动态内容",normalizedTitle:"具有动态内容:",charIndex:57},{level:3,title:"单标签:",slug:"单标签",normalizedTitle:"单标签:",charIndex:123},{level:3,title:"使用组件:",slug:"使用组件",normalizedTitle:"使用组件:",charIndex:166},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:301},{level:3,title:"使用动态绑定:",slug:"使用动态绑定",normalizedTitle:"使用动态绑定:",charIndex:355},{level:3,title:"绑定事件:",slug:"绑定事件",normalizedTitle:"绑定事件:",charIndex:459},{level:3,title:"动态绑定事件:",slug:"动态绑定事件",normalizedTitle:"动态绑定事件:",charIndex:530},{level:3,title:"动态属性:",slug:"动态属性",normalizedTitle:"动态属性:",charIndex:687},{level:3,title:"使用扩展运算符:",slug:"使用扩展运算符",normalizedTitle:"使用扩展运算符:",charIndex:823},{level:2,title:"插槽",slug:"插槽",normalizedTitle:"插槽",charIndex:980},{level:3,title:"命名插槽：",slug:"命名插槽",normalizedTitle:"命名插槽：",charIndex:987},{level:3,title:"作用域插槽：",slug:"作用域插槽",normalizedTitle:"作用域插槽：",charIndex:1152},{level:2,title:"指令",slug:"指令",normalizedTitle:"指令",charIndex:1343},{level:3,title:"使用修饰符:",slug:"使用修饰符",normalizedTitle:"使用修饰符:",charIndex:1431},{level:3,title:"带有参数：",slug:"带有参数",normalizedTitle:"带有参数：",charIndex:1485},{level:3,title:"带有参数和修饰符:",slug:"带有参数和修饰符",normalizedTitle:"带有参数和修饰符:",charIndex:1536},{level:3,title:"v-html:",slug:"v-html",normalizedTitle:"v-html:",charIndex:1604}],headersStr:"内容 具有动态内容: 单标签: 使用组件: 属性 使用动态绑定: 绑定事件: 动态绑定事件: 动态属性: 使用扩展运算符: 插槽 命名插槽： 作用域插槽： 指令 使用修饰符: 带有参数： 带有参数和修饰符: v-html:",content:'# JSX 语法\n\n\n# 内容\n\nrender() {\n  return <p>hello</p>\n}\n\n\n\n# 具有动态内容:\n\nrender() {\n  return <p>hello { this.message }</p>\n}\n\n\n\n# 单标签:\n\nrender() {\n  return <input />\n}\n\n\n\n# 使用组件:\n\nimport MyComponent from \'./my-component\'\n\nexport default {\n  render() {\n    return <MyComponent>hello</MyComponent>\n  },\n}\n\n\n\n# 属性\n\nrender() {\n  return <input type="email" />\n}\n\n\n\n# 使用动态绑定:\n\nrender() {\n  return <input\n    type="email"\n    placeholder={this.placeholderText}\n  />\n}\n\n\n\n# 绑定事件:\n\nrender() {\n  return <input onInput={this.handleInput} />\n}\n\n\n\n# 动态绑定事件:\n\nrender() {\n  const events = {\n    "visible-change": () => {\n       console.log("visible-change");\n     },\n  }\n  return <input on={events} />\n}\n\n\n\n# 动态属性:\n\nrender() {\n  const props = {\n    type: \'email\',\n    placeholder: \'Enter your email\'\n  }\n\n  return <input props={props} />\n}\n\n\n\n# 使用扩展运算符:\n\nrender() {\n  const inputAttrs = {\n    type: \'email\',\n    placeholder: \'Enter your email\'\n  }\n\n  return <input {...{ attrs: inputAttrs }} />\n}\n\n\n\n# 插槽\n\n\n# 命名插槽：\n\nrender() {\n  return (\n    <MyComponent>\n      <header slot="header">header</header>\n      <footer slot="footer">footer</footer>\n    </MyComponent>\n  )\n}\n\n\n\n# 作用域插槽：\n\nrender() {\n  const scopedSlots = {\n    header: () => <header>header</header>,\n    footer: () => <footer>footer</footer>\n  }\n\n  return <MyComponent scopedSlots={scopedSlots} />\n}\n\n\n\n# 指令\n\n<input vModel={this.newTodoText} />\n// or\n<input v-model={this.newTodoText} />\n\n\n\n# 使用修饰符:\n\n<input vModel_trim={this.newTodoText} />\n\n\n\n# 带有参数：\n\n<input vOn:click={this.newTodoText} />\n\n\n\n# 带有参数和修饰符:\n\n<input vOn:click_stop_prevent={this.newTodoText} />\n\n\n\n# v-html:\n\n<p domPropsInnerHTML={html} />\n',normalizedContent:'# jsx 语法\n\n\n# 内容\n\nrender() {\n  return <p>hello</p>\n}\n\n\n\n# 具有动态内容:\n\nrender() {\n  return <p>hello { this.message }</p>\n}\n\n\n\n# 单标签:\n\nrender() {\n  return <input />\n}\n\n\n\n# 使用组件:\n\nimport mycomponent from \'./my-component\'\n\nexport default {\n  render() {\n    return <mycomponent>hello</mycomponent>\n  },\n}\n\n\n\n# 属性\n\nrender() {\n  return <input type="email" />\n}\n\n\n\n# 使用动态绑定:\n\nrender() {\n  return <input\n    type="email"\n    placeholder={this.placeholdertext}\n  />\n}\n\n\n\n# 绑定事件:\n\nrender() {\n  return <input oninput={this.handleinput} />\n}\n\n\n\n# 动态绑定事件:\n\nrender() {\n  const events = {\n    "visible-change": () => {\n       console.log("visible-change");\n     },\n  }\n  return <input on={events} />\n}\n\n\n\n# 动态属性:\n\nrender() {\n  const props = {\n    type: \'email\',\n    placeholder: \'enter your email\'\n  }\n\n  return <input props={props} />\n}\n\n\n\n# 使用扩展运算符:\n\nrender() {\n  const inputattrs = {\n    type: \'email\',\n    placeholder: \'enter your email\'\n  }\n\n  return <input {...{ attrs: inputattrs }} />\n}\n\n\n\n# 插槽\n\n\n# 命名插槽：\n\nrender() {\n  return (\n    <mycomponent>\n      <header slot="header">header</header>\n      <footer slot="footer">footer</footer>\n    </mycomponent>\n  )\n}\n\n\n\n# 作用域插槽：\n\nrender() {\n  const scopedslots = {\n    header: () => <header>header</header>,\n    footer: () => <footer>footer</footer>\n  }\n\n  return <mycomponent scopedslots={scopedslots} />\n}\n\n\n\n# 指令\n\n<input vmodel={this.newtodotext} />\n// or\n<input v-model={this.newtodotext} />\n\n\n\n# 使用修饰符:\n\n<input vmodel_trim={this.newtodotext} />\n\n\n\n# 带有参数：\n\n<input von:click={this.newtodotext} />\n\n\n\n# 带有参数和修饰符:\n\n<input von:click_stop_prevent={this.newtodotext} />\n\n\n\n# v-html:\n\n<p dompropsinnerhtml={html} />\n',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/button/base.html",relativePath:"guide/button/base.md",key:"v-1493e1d2",path:"/guide/button/base.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:64},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:1754}],headersStr:"概述 示例 API",content:'# 基本使用\n\n\n# 概述\n\n基于 el-button 的增强型按钮组件，提供了防抖、确认框、下拉菜单等多种交互功能。\n\n\n# 示例\n\n<template>\r\n  <div>\r\n    \x3c!-- 基础按钮 --\x3e\r\n    <sc-button @click="handleClick">基础</sc-button>\r\n\r\n    \x3c!-- 下拉菜单按钮 --\x3e\r\n    <sc-button\r\n      type="primary"\r\n      label="下拉按钮"\r\n      :children="[\r\n        {\r\n          label: \'编辑\',\r\n          onClick: handleClick,\r\n        },\r\n        {\r\n          label: \'删除\',\r\n          onClick: handleClick,\r\n          confirm: true,\r\n          type: \'danger\',\r\n        },\r\n      ]"\r\n    />\r\n\r\n    \x3c!-- 带输入框的提交 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="文本提交"\r\n      :textSubmit="{\r\n        title: \'驳回原因\',\r\n        label: \'驳回原因\',\r\n        rows: 4, // 默认值\r\n        required: true, // 默认值\r\n      }"\r\n      @click="handleReject"\r\n    />\r\n\r\n    \x3c!-- 带确认框的按钮 --\x3e\r\n    <sc-button\r\n      type="danger"\r\n      label="确认操作"\r\n      confirm="确认操作"\r\n      @click="handleClick"\r\n    />\r\n\r\n    \x3c!-- 使用对象配置确认框 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="对象配置确认框"\r\n      :confirm="{\r\n        title: \'对象配置确认框\',\r\n        label: \'确定要执行此操作吗？\',\r\n        confirmButtonText: \'通过\',\r\n        cancelButtonText: \'拒绝\',\r\n        type: \'warning\',\r\n      }"\r\n      @click="handleClick"\r\n    />\r\n\r\n    \x3c!-- 带自定义确认框的按钮 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="自定义确认框"\r\n      :customConfirm="{\r\n        title: \'自定义确认框\',\r\n        label: \'确定要执行此操作吗？\',\r\n        content: renderContent,\r\n      }"\r\n      @click="handleClick"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    handleClick() {\r\n      console.log("click");\r\n    },\r\n    handleReject(cb, reason) {\r\n      console.log("驳回原因:", cb, reason);\r\n      cb(); // 完成后调用回调\r\n    },\r\n    renderContent(h) {\r\n      return <div>111</div>;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n属性              说明         类型                      默认值\ntype            按钮类型       String                  -\nsize            按钮大小       String                  mini\ndisabled        是否禁用       Boolean                 false\nlabel           按钮文本       String                  -\nhidden          是否隐藏       Boolean                 -\nshow            是否显示       Boolean                 -\nchildren        下拉菜单项      Array                   -\ntime            防抖时间(ms)   Number                  300\nconfirm         确认框配置      Boolean/String/Object   -\ncustomConfirm   自定义确认框配置   Object                  -\ntextSubmit      文本提交配置     Object                  -',normalizedContent:'# 基本使用\n\n\n# 概述\n\n基于 el-button 的增强型按钮组件，提供了防抖、确认框、下拉菜单等多种交互功能。\n\n\n# 示例\n\n<template>\r\n  <div>\r\n    \x3c!-- 基础按钮 --\x3e\r\n    <sc-button @click="handleclick">基础</sc-button>\r\n\r\n    \x3c!-- 下拉菜单按钮 --\x3e\r\n    <sc-button\r\n      type="primary"\r\n      label="下拉按钮"\r\n      :children="[\r\n        {\r\n          label: \'编辑\',\r\n          onclick: handleclick,\r\n        },\r\n        {\r\n          label: \'删除\',\r\n          onclick: handleclick,\r\n          confirm: true,\r\n          type: \'danger\',\r\n        },\r\n      ]"\r\n    />\r\n\r\n    \x3c!-- 带输入框的提交 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="文本提交"\r\n      :textsubmit="{\r\n        title: \'驳回原因\',\r\n        label: \'驳回原因\',\r\n        rows: 4, // 默认值\r\n        required: true, // 默认值\r\n      }"\r\n      @click="handlereject"\r\n    />\r\n\r\n    \x3c!-- 带确认框的按钮 --\x3e\r\n    <sc-button\r\n      type="danger"\r\n      label="确认操作"\r\n      confirm="确认操作"\r\n      @click="handleclick"\r\n    />\r\n\r\n    \x3c!-- 使用对象配置确认框 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="对象配置确认框"\r\n      :confirm="{\r\n        title: \'对象配置确认框\',\r\n        label: \'确定要执行此操作吗？\',\r\n        confirmbuttontext: \'通过\',\r\n        cancelbuttontext: \'拒绝\',\r\n        type: \'warning\',\r\n      }"\r\n      @click="handleclick"\r\n    />\r\n\r\n    \x3c!-- 带自定义确认框的按钮 --\x3e\r\n    <sc-button\r\n      type="warning"\r\n      label="自定义确认框"\r\n      :customconfirm="{\r\n        title: \'自定义确认框\',\r\n        label: \'确定要执行此操作吗？\',\r\n        content: rendercontent,\r\n      }"\r\n      @click="handleclick"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    handleclick() {\r\n      console.log("click");\r\n    },\r\n    handlereject(cb, reason) {\r\n      console.log("驳回原因:", cb, reason);\r\n      cb(); // 完成后调用回调\r\n    },\r\n    rendercontent(h) {\r\n      return <div>111</div>;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n属性              说明         类型                      默认值\ntype            按钮类型       string                  -\nsize            按钮大小       string                  mini\ndisabled        是否禁用       boolean                 false\nlabel           按钮文本       string                  -\nhidden          是否隐藏       boolean                 -\nshow            是否显示       boolean                 -\nchildren        下拉菜单项      array                   -\ntime            防抖时间(ms)   number                  300\nconfirm         确认框配置      boolean/string/object   -\ncustomconfirm   自定义确认框配置   object                  -\ntextsubmit      文本提交配置     object                  -',charsets:{cjk:!0}},{title:"预设配置模板",frontmatter:{},regularPath:"/guide/commonConfig/presetCodeTemplate.html",relativePath:"guide/commonConfig/presetCodeTemplate.md",key:"v-0b30ab17",path:"/guide/commonConfig/presetCodeTemplate.html",headers:[{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:13},{level:2,title:"预设配置的动态化",slug:"预设配置的动态化",normalizedTitle:"预设配置的动态化",charIndex:1514}],headersStr:"基本使用 预设配置的动态化",content:'# 预设配置模板\n\n\n# 基本使用\n\npresetType 匹配预设的配置，实现配置复用。\n\n\n通用presetType 匹配到的配置对象会与原有的配置合并，形成一个新的配置对象，达到配置复用的效果。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/***\r\n * date 匹配到的全局配置对象\r\n * \r\n *date: {\r\n    comp: {\r\n      name: "el-date-picker",\r\n      type: "date",\r\n      valueFormat: "yyyy-MM-dd",\r\n    },\r\n  }\r\n * * */\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称" },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "createTime",\r\n            label: "模板复用示例",\r\n            presetType: "date", // 使用模板\r\n          },\r\n          {\r\n            prop: "createTime",\r\n            label: "不使用模板，效果与模板等价",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              valueFormat: "yyyy-MM-dd",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 预设配置的动态化\n\n预设的配置如果是一个函数，接收的参数为原有的配置对象item，可以动态的返回一个配置对象，实现配置的动态化。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/***\r\n * "testCodeTemplate" 匹配到的配置对象\r\n * @param {Object} item - 当前配置对象\r\n * \r\n *testCodeTemplate: (item) => ({\r\n    search: {\r\n      comp: {\r\n        name: item.searchCompName,\r\n        type: item.SearchCompType,\r\n      },\r\n    },\r\n    form: {\r\n      comp: {\r\n        name: item.formCompName,\r\n      },\r\n    },\r\n    formatter: (row) => row[item.prop] + "自定义格式化",\r\n  }),\r\n * * */\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        rowEdit: true,\r\n        searchHeader: true,\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            presetType: "testCodeTemplate",\r\n            searchCompName: "el-select",\r\n            formCompName: "el-select",\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            presetType: "testCodeTemplate",\r\n            searchCompName: "el-input",\r\n            formCompName: "el-input",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 自定义预设配置\n\n在全局配置对象 template 下添加新的预设配置 。\n\n\nVue.use(superCrud, {\n  template: {\n    render: { // 渲染模板\n      dateRange: () => ({\n        comp: {\n          name: "el-date-picker",\n          type: "daterange",\n          "range-separator": "-",\n          "start-placeholder": "开始",\n          "end-placeholder": "结束",\n          valueFormat: "yyyy-MM-dd",\n        },\n      }),\n    },\n    rules: { // 校验模板\n       required: (rules, { item }) => {\n          return {\n            required: true,\n            message: item.label + "不能为空",\n            trigger: item.rules.trigger,\n          };\n        },\n    },\n    dict: { // 字典模板\n      ...\n    },\n  }})\n',normalizedContent:'# 预设配置模板\n\n\n# 基本使用\n\npresettype 匹配预设的配置，实现配置复用。\n\n\n通用presettype 匹配到的配置对象会与原有的配置合并，形成一个新的配置对象，达到配置复用的效果。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/***\r\n * date 匹配到的全局配置对象\r\n * \r\n *date: {\r\n    comp: {\r\n      name: "el-date-picker",\r\n      type: "date",\r\n      valueformat: "yyyy-mm-dd",\r\n    },\r\n  }\r\n * * */\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称" },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "createtime",\r\n            label: "模板复用示例",\r\n            presettype: "date", // 使用模板\r\n          },\r\n          {\r\n            prop: "createtime",\r\n            label: "不使用模板，效果与模板等价",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              valueformat: "yyyy-mm-dd",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 预设配置的动态化\n\n预设的配置如果是一个函数，接收的参数为原有的配置对象item，可以动态的返回一个配置对象，实现配置的动态化。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/***\r\n * "testcodetemplate" 匹配到的配置对象\r\n * @param {object} item - 当前配置对象\r\n * \r\n *testcodetemplate: (item) => ({\r\n    search: {\r\n      comp: {\r\n        name: item.searchcompname,\r\n        type: item.searchcomptype,\r\n      },\r\n    },\r\n    form: {\r\n      comp: {\r\n        name: item.formcompname,\r\n      },\r\n    },\r\n    formatter: (row) => row[item.prop] + "自定义格式化",\r\n  }),\r\n * * */\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        rowedit: true,\r\n        searchheader: true,\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            presettype: "testcodetemplate",\r\n            searchcompname: "el-select",\r\n            formcompname: "el-select",\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            presettype: "testcodetemplate",\r\n            searchcompname: "el-input",\r\n            formcompname: "el-input",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 自定义预设配置\n\n在全局配置对象 template 下添加新的预设配置 。\n\n\nvue.use(supercrud, {\n  template: {\n    render: { // 渲染模板\n      daterange: () => ({\n        comp: {\n          name: "el-date-picker",\n          type: "daterange",\n          "range-separator": "-",\n          "start-placeholder": "开始",\n          "end-placeholder": "结束",\n          valueformat: "yyyy-mm-dd",\n        },\n      }),\n    },\n    rules: { // 校验模板\n       required: (rules, { item }) => {\n          return {\n            required: true,\n            message: item.label + "不能为空",\n            trigger: item.rules.trigger,\n          };\n        },\n    },\n    dict: { // 字典模板\n      ...\n    },\n  }})\n',charsets:{cjk:!0}},{title:"按钮配置",frontmatter:{},regularPath:"/guide/crud/buttons.html",relativePath:"guide/crud/buttons.md",key:"v-4344491d",path:"/guide/crud/buttons.html",headersStr:null,content:'# 按钮配置\n\n\n# 通用配置\n\n按钮配置对象接收el-button属性, 详情参考element-ui\nbutton.handles 添加自定义按钮\nbutton.hidden 自定义按钮隐藏, 可接收函数, 在操作列action按钮中使用可获取行数据\nbutton.children 为折叠按钮,可配置多个子按钮\n\n\ncontrolButton 控制所有按钮，返回所需的按钮组\n\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        action: {\r\n          handles: [\r\n            {\r\n              icon: "el-icon-search",\r\n              label: "自定义按钮隐藏",\r\n              hidden: (scope) => {\r\n                return scope.$index === 0;\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        handleRow: {\r\n          tempGlobalButton: {\r\n            label: "自定义temp按钮",\r\n          },\r\n          handles: [\r\n            {\r\n              label: "自定义按钮",\r\n              icon: "el-icon-edit",\r\n              type: "primary",\r\n              hidden: false,\r\n              onClick: () => {\r\n                this.$message.success("自定义按钮");\r\n              },\r\n            },\r\n            {\r\n              label: "自定义按钮1",\r\n              icon: "el-icon-edit",\r\n              type: "primary",\r\n              round: true,\r\n            },\r\n            {\r\n              label: "折叠按钮",\r\n              children: [\r\n                {\r\n                  label: "折叠按钮1",\r\n                  icon: "el-icon-search",\r\n                  onClick: () => {\r\n                    console.log("折叠按钮1");\r\n                  },\r\n                },\r\n                {\r\n                  presetType: "add",\r\n                  label: "自定义新增",\r\n                  onClick: (scope, rawClick) => {\r\n                    console.log("自定义新增", rawClick);\r\n                  },\r\n                },\r\n                "add",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n',normalizedContent:'# 按钮配置\n\n\n# 通用配置\n\n按钮配置对象接收el-button属性, 详情参考element-ui\nbutton.handles 添加自定义按钮\nbutton.hidden 自定义按钮隐藏, 可接收函数, 在操作列action按钮中使用可获取行数据\nbutton.children 为折叠按钮,可配置多个子按钮\n\n\ncontrolbutton 控制所有按钮，返回所需的按钮组\n\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        action: {\r\n          handles: [\r\n            {\r\n              icon: "el-icon-search",\r\n              label: "自定义按钮隐藏",\r\n              hidden: (scope) => {\r\n                return scope.$index === 0;\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        handlerow: {\r\n          tempglobalbutton: {\r\n            label: "自定义temp按钮",\r\n          },\r\n          handles: [\r\n            {\r\n              label: "自定义按钮",\r\n              icon: "el-icon-edit",\r\n              type: "primary",\r\n              hidden: false,\r\n              onclick: () => {\r\n                this.$message.success("自定义按钮");\r\n              },\r\n            },\r\n            {\r\n              label: "自定义按钮1",\r\n              icon: "el-icon-edit",\r\n              type: "primary",\r\n              round: true,\r\n            },\r\n            {\r\n              label: "折叠按钮",\r\n              children: [\r\n                {\r\n                  label: "折叠按钮1",\r\n                  icon: "el-icon-search",\r\n                  onclick: () => {\r\n                    console.log("折叠按钮1");\r\n                  },\r\n                },\r\n                {\r\n                  presettype: "add",\r\n                  label: "自定义新增",\r\n                  onclick: (scope, rawclick) => {\r\n                    console.log("自定义新增", rawclick);\r\n                  },\r\n                },\r\n                "add",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n',charsets:{cjk:!0}},{title:"渲染配置",frontmatter:{},regularPath:"/guide/commonConfig/renderType.html",relativePath:"guide/commonConfig/renderType.md",key:"v-16e3f652",path:"/guide/commonConfig/renderType.html",headers:[{level:2,title:"格式化渲染",slug:"格式化渲染",normalizedTitle:"格式化渲染",charIndex:11},{level:2,title:"插槽渲染",slug:"插槽渲染",normalizedTitle:"插槽渲染",charIndex:1203},{level:2,title:"render函数渲染",slug:"render函数渲染",normalizedTitle:"render函数渲染",charIndex:2589},{level:2,title:"组件配置渲染",slug:"组件配置渲染",normalizedTitle:"组件配置渲染",charIndex:5020},{level:3,title:"组件类型转换",slug:"组件类型转换",normalizedTitle:"组件类型转换",charIndex:9185},{level:3,title:"组件属性设置",slug:"组件属性设置",normalizedTitle:"组件属性设置",charIndex:9446},{level:3,title:"事件处理配置",slug:"事件处理配置",normalizedTitle:"事件处理配置",charIndex:9683},{level:3,title:"children 属性详细说明",slug:"children-属性详细说明",normalizedTitle:"children 属性详细说明",charIndex:10059},{level:2,title:"prop 深度数据绑定",slug:"prop-深度数据绑定",normalizedTitle:"prop 深度数据绑定",charIndex:10597},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:10727},{level:3,title:"renderColumns 通用列配置",slug:"rendercolumns-通用列配置",normalizedTitle:"rendercolumns 通用列配置",charIndex:10735},{level:3,title:"comp 配置项",slug:"comp-配置项",normalizedTitle:"comp 配置项",charIndex:11848},{level:3,title:"scope 作用域对象",slug:"scope-作用域对象",normalizedTitle:"scope 作用域对象",charIndex:12543}],headersStr:"格式化渲染 插槽渲染 render函数渲染 组件配置渲染 组件类型转换 组件属性设置 事件处理配置 children 属性详细说明 prop 深度数据绑定 API renderColumns 通用列配置 comp 配置项 scope 作用域对象",content:'# 渲染配置\n\n\n# 格式化渲染\n\nformatter 用于格式化数据，返回处理后的文本内容\nhtml 配合 formatter 使用，可以渲染 HTML 字符串\n\n<template>\r\n  <sc-crud :options="options" :data="data"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称" },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            formatter: (row) => row.username + " formatter",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            html: true,\r\n            formatter: (row) => {\r\n              return `<span style="color:red">${row.gender}</span>`;\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 插槽渲染\n\n#[prop] 插槽名称与 renderColumns 的 prop 属性对应\n插槽可以接收scope作为作用域参数\n\n<template>\r\n  <sc-crud :options="options" :data="data">\r\n    \x3c!-- 根据prop渲染插槽 --\x3e\r\n    <template #name="{row}">\r\n      {{ row.name + "slot" }}\r\n    </template>\r\n    <template #username="{row}">\r\n      {{ row.username + "slot" }}\r\n    </template>\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        pagination: true,\r\n        action: [\r\n          {\r\n            label: "操作",\r\n            icon: "el-icon-edit",\r\n            onClick: () => {},\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "名称",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# render函数渲染\n\n使用 render 函数或 JSX 语法进行渲染\n\n\n<template>\r\n  <sc-crud :options="options" :data="data"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        pagination: true,\r\n        action: [\r\n          {\r\n            label: "操作",\r\n            icon: "el-icon-edit",\r\n            onClick: () => {},\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            render: (h, scope) => {\r\n              // 安装了jsx相关转换插件可以使用vue-jsx语法\r\n              return <div>{scope.row.name + "render"}</div>;\r\n            },\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "名称",\r\n            render: (h, scope) => {\r\n              // 否则使用h函数渲染\r\n              return h("div", {}, scope.row.username + "h");\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            render: (h, scope) => {\r\n              return (\r\n                <el-select\r\n                  v-model={scope.row.gender} // 与v-model相同\r\n                  onChange={() => {\r\n                    console.log("change");\r\n                  }} // 事件加on前缀\r\n                  clearable // 组件的属性\r\n                  props={{\r\n                    // 约等于模板语法的v-bind\r\n                    multiple: true,\r\n                  }}\r\n                  on={{\r\n                    // 约等于模板语法的v-on\r\n                    "visible-change": () => {\r\n                      console.log("visible-change");\r\n                    },\r\n                  }}\r\n                  scopedSlots={{\r\n                    // 作用域插槽\r\n                    prefix: () => "prefix",\r\n                  }}\r\n                >\r\n                  <i slot="prefix">具名插槽</i>\r\n                  <el-option value="111" label="111"></el-option>\r\n                </el-select>\r\n              );\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 组件配置渲染\n\n通过配置对象comp来定义组件的各种行为和属性\n\n\n默认配置：\n\n * clearable: 默认为 true\n   \n * placeholder: 默认为"请输入/请选择" + 列标签\n   \n * size: 继承父组件的 size 配置\n   \n\n<template>\r\n  <sc-form v-model="form" :options="options"> </sc-form>\r\n</template>\r\n\r\n<script>\r\nimport customComVue from "./customCom.vue";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        renderColumns: [\r\n          // 1. Select选择器示例\r\n          {\r\n            prop: "type",\r\n            label: "下拉选择",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              // 动态属性配置\r\n              bind: (scope) => ({\r\n                disabled: scope.row.status === "disabled",\r\n              }),\r\n              // 子组件配置\r\n              children: [\r\n                { name: "el-option", label: "类型1", value: "1" },\r\n                { name: "el-option", label: "类型2", value: "2" },\r\n              ],\r\n              // 事件处理\r\n              on: {\r\n                change: (val, scope) => {\r\n                  console.log("选择值:", val);\r\n                  console.log("当前行:", scope.row);\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 2. Input输入框示例\r\n          {\r\n            prop: "name",\r\n            label: "输入框",\r\n            comp: {\r\n              name: "el-input",\r\n              // 直接属性配置\r\n              clearable: true,\r\n              maxlength: 20,\r\n              "show-word-limit": true,\r\n              // 插槽配置\r\n              slots: {\r\n                prefix: () => <i class="el-icon-search" />,\r\n                suffix: () => <i class="el-icon-date" />,\r\n              },\r\n              // 事件监听\r\n              on: {\r\n                input: (val, scope) => {\r\n                  console.log("输入值:", val);\r\n                },\r\n                focus: (event, scope) => {\r\n                  console.log("获得焦点");\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 3. Radio单选组示例\r\n          {\r\n            prop: "gender",\r\n            label: "单选组",\r\n            comp: {\r\n              name: "el-radio-group",\r\n              // 动态生成选项\r\n              children: (scope) => {\r\n                const options = [\r\n                  { label: "男", value: "male" },\r\n                  { label: "女", value: "female" },\r\n                ];\r\n                return options.map((item) => ({\r\n                  name: "el-radio",\r\n                  label: item.value,\r\n                  children: item.label,\r\n                }));\r\n              },\r\n              // 组件挂载后的回调\r\n              mounted: (scope, ref) => {\r\n                console.log("单选组已挂载:", ref);\r\n              },\r\n            },\r\n          },\r\n\r\n          // 4. 自定义组件示例\r\n          {\r\n            prop: "custom",\r\n            label: "自定义组件",\r\n            comp: {\r\n              name: customComVue,\r\n              // 原生事件\r\n              nativeOn: {\r\n                click: () => {\r\n                  console.log("点击自定义组件");\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 5. 级联选择器示例\r\n          {\r\n            prop: "region",\r\n            label: "地区选择",\r\n            comp: {\r\n              name: "el-cascader",\r\n              // 属性配置\r\n              options: [\r\n                {\r\n                  value: "zhejiang",\r\n                  label: "浙江",\r\n                  children: [\r\n                    {\r\n                      value: "hangzhou",\r\n                      label: "杭州",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n              // 条件属性\r\n              bind: (scope) => ({\r\n                disabled: !scope.row.type,\r\n                placeholder: `请选择${scope.item.label}`,\r\n              }),\r\n              // 值变化事件\r\n              on: {\r\n                change: (value, scope) => {\r\n                  console.log("选择的地区:", value);\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      // 表格数据\r\n      form: {\r\n        id: 1,\r\n        type: ["1"],\r\n        name: "测试数据",\r\n        gender: "male",\r\n        custom: "",\r\n        region: ["zhejiang", "hangzhou"],\r\n        status: "normal",\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 组件类型转换\n\n原先名字为 el-select 的组件会转化为封装的 sc-select 组件，支持 options 配置, 快速生成选项，字典组件配置\n\n原组件                 转换后组件\nel-select           sc-select\nel-checkbox-group   sc-checkbox\nel-radio-group      sc-radio\nel-switch           sc-switch\nel-cascader         sc-cascader\n\n\n# 组件属性设置\n\n支持两种方式设置组件属性：\n\n 1. 直接属性配置\n\n{\n  name: \'el-input\',\n  type: \'text\',\n  placeholder: \'请输入\',\n  clearable: true\n}\n\n\n 2. bind 配置，支持函数形式，可获取 scope 参数\n\n{\n  name: \'el-input\',\n  bind: {\n    placeholder: \'请输入\',\n    clearable: true\n  }\n}\n\n\n\n# 事件处理配置\n\n组件支持两种事件配置方式：\n\n 1. on 对象配置\n\n{\n  name: \'el-input\',\n  on: {\n    change: (val, scope) => {\n      console.log(\'值变化:\', val)\n    },\n    input: (val, scope) => {\n      console.log(\'输入值:\', val)\n    }\n  }\n}\n\n\n 2. on 前缀配置\n\n{\n  name: \'el-input\',\n  onChange: (val, scope) => {\n    console.log(\'值变化:\', val)\n  },\n  onInput: (val, scope) => {\n    console.log(\'输入值:\', val)\n  }\n}\n\n\n\n# children 属性详细说明\n\nchildren 属性用于配置组件的子元素，支持多种配置方式，常用于下拉选择、单选组、复选组等需要子组件、子元素的场景。\n\n 1. 返回子组件，支持数组与对象\n\n{\n  name: \'el-select\',\n  children: [\n    { name: \'el-option\', label: \'选项1\', value: 1 },\n    { name: \'el-option\', label: \'选项2\', value: 2 }\n  ] // { name: \'el-option\', label: \'选项1\', value: 1 }\n}\n\n\n 2. 函数形式\n\n{\n  name: \'el-select\',\n  children: (scope) => {\n    return scope.dict.map(item => ({\n      name: \'el-option\',\n      label: item.label,\n      value: item.value\n    }))\n  }\n}\n\n\n\n 3. 返回子元素\n\n{\n  name: \'el-button\',\n  children: \'按钮\'\n}\n\n\n\n\n# prop 深度数据绑定\n\nprop 支持·语法深度绑定对象\n\n // 绑定的对象为 { deep1: { deep2: { name: \'名称\' } } }\n{\n  prop: "deep1.deep2.name",\n  label: "名称"\n}\n\n\n\n# API\n\n\n# renderColumns 通用列配置\n\n属性名          说明                类型                        可选值     默认值\nprop         字段名               String                    -       必填，用于数据绑定\nlabel        列标题               String                    -       显示在表头的文本\nshow         是否显示              Boolean/Function          true    支持函数形式，可动态控制显示\nhidden       是否隐藏              Boolean/Function          false   支持函数形式，可动态控制隐藏\nrequired     是否必填              Boolean/Object/Function   false   支持函数形式，可动态控制必填状态\nrules        验证规则配置            Array/Function                    支持函数形式\ndict         字典配置，支持字符串或对象形式   Object/String                     支持函数形式\nformatData   响应式数据格式化          Object                            \nposition     是否开启位置渲染          Boolean                   false   用于特殊的位置渲染场景\nformatter    格式化函数             Function                  -       用于格式化数据，返回处理后的文本内容\nhtml         是否开启HTML渲染        Boolean                   false   配合 formatter 使用，可以渲染 HTML 字符串\nrender       渲染函数              Function                  -       (h, scope) => {}\ncomp         组件配置              Object/Function           -       用于配置组件的各种行为和属性\n\n\n# comp 配置项\n\n配置项        类型                      说明                          示例\nname       String/Component        组件名称或组件对象。字符串时必须为已注册的全局组件   \'el-input\' 或 导入的组件\nbind       Object/Function         组件的属性配置，函数时可获取 scope 参数     {placeholder: \'请输入\'} 或 (scope) => ({})\non         Object                  组件的事件监听配置                   {change: (val, scope) => {}}\nslots      Object                  组件的插槽配置，接收render函数          {default: (h, scope) => []}\nchildren   Array/Object/Function   子组件配置或默认插槽内容                [{name: \'el-option\'}]\nnativeOn   Object                  原生事件监听                      {click: () => {}}\nmounted    Function(scope, ref)    组件挂载后调用                     (scope, ref) => {}\n\n\n# scope 作用域对象\n\n属性       说明\nrow      当前行数据\nself     当前组件实例\ndict     字典数据\n$value   格式化值的 get/set，{ get: () => {} , set: (val) => {} }',normalizedContent:'# 渲染配置\n\n\n# 格式化渲染\n\nformatter 用于格式化数据，返回处理后的文本内容\nhtml 配合 formatter 使用，可以渲染 html 字符串\n\n<template>\r\n  <sc-crud :options="options" :data="data"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称" },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            formatter: (row) => row.username + " formatter",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            html: true,\r\n            formatter: (row) => {\r\n              return `<span style="color:red">${row.gender}</span>`;\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 插槽渲染\n\n#[prop] 插槽名称与 rendercolumns 的 prop 属性对应\n插槽可以接收scope作为作用域参数\n\n<template>\r\n  <sc-crud :options="options" :data="data">\r\n    \x3c!-- 根据prop渲染插槽 --\x3e\r\n    <template #name="{row}">\r\n      {{ row.name + "slot" }}\r\n    </template>\r\n    <template #username="{row}">\r\n      {{ row.username + "slot" }}\r\n    </template>\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        pagination: true,\r\n        action: [\r\n          {\r\n            label: "操作",\r\n            icon: "el-icon-edit",\r\n            onclick: () => {},\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "名称",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# render函数渲染\n\n使用 render 函数或 jsx 语法进行渲染\n\n\n<template>\r\n  <sc-crud :options="options" :data="data"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        pagination: true,\r\n        action: [\r\n          {\r\n            label: "操作",\r\n            icon: "el-icon-edit",\r\n            onclick: () => {},\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            render: (h, scope) => {\r\n              // 安装了jsx相关转换插件可以使用vue-jsx语法\r\n              return <div>{scope.row.name + "render"}</div>;\r\n            },\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "名称",\r\n            render: (h, scope) => {\r\n              // 否则使用h函数渲染\r\n              return h("div", {}, scope.row.username + "h");\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            render: (h, scope) => {\r\n              return (\r\n                <el-select\r\n                  v-model={scope.row.gender} // 与v-model相同\r\n                  onchange={() => {\r\n                    console.log("change");\r\n                  }} // 事件加on前缀\r\n                  clearable // 组件的属性\r\n                  props={{\r\n                    // 约等于模板语法的v-bind\r\n                    multiple: true,\r\n                  }}\r\n                  on={{\r\n                    // 约等于模板语法的v-on\r\n                    "visible-change": () => {\r\n                      console.log("visible-change");\r\n                    },\r\n                  }}\r\n                  scopedslots={{\r\n                    // 作用域插槽\r\n                    prefix: () => "prefix",\r\n                  }}\r\n                >\r\n                  <i slot="prefix">具名插槽</i>\r\n                  <el-option value="111" label="111"></el-option>\r\n                </el-select>\r\n              );\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 组件配置渲染\n\n通过配置对象comp来定义组件的各种行为和属性\n\n\n默认配置：\n\n * clearable: 默认为 true\n   \n * placeholder: 默认为"请输入/请选择" + 列标签\n   \n * size: 继承父组件的 size 配置\n   \n\n<template>\r\n  <sc-form v-model="form" :options="options"> </sc-form>\r\n</template>\r\n\r\n<script>\r\nimport customcomvue from "./customcom.vue";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        rendercolumns: [\r\n          // 1. select选择器示例\r\n          {\r\n            prop: "type",\r\n            label: "下拉选择",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              // 动态属性配置\r\n              bind: (scope) => ({\r\n                disabled: scope.row.status === "disabled",\r\n              }),\r\n              // 子组件配置\r\n              children: [\r\n                { name: "el-option", label: "类型1", value: "1" },\r\n                { name: "el-option", label: "类型2", value: "2" },\r\n              ],\r\n              // 事件处理\r\n              on: {\r\n                change: (val, scope) => {\r\n                  console.log("选择值:", val);\r\n                  console.log("当前行:", scope.row);\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 2. input输入框示例\r\n          {\r\n            prop: "name",\r\n            label: "输入框",\r\n            comp: {\r\n              name: "el-input",\r\n              // 直接属性配置\r\n              clearable: true,\r\n              maxlength: 20,\r\n              "show-word-limit": true,\r\n              // 插槽配置\r\n              slots: {\r\n                prefix: () => <i class="el-icon-search" />,\r\n                suffix: () => <i class="el-icon-date" />,\r\n              },\r\n              // 事件监听\r\n              on: {\r\n                input: (val, scope) => {\r\n                  console.log("输入值:", val);\r\n                },\r\n                focus: (event, scope) => {\r\n                  console.log("获得焦点");\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 3. radio单选组示例\r\n          {\r\n            prop: "gender",\r\n            label: "单选组",\r\n            comp: {\r\n              name: "el-radio-group",\r\n              // 动态生成选项\r\n              children: (scope) => {\r\n                const options = [\r\n                  { label: "男", value: "male" },\r\n                  { label: "女", value: "female" },\r\n                ];\r\n                return options.map((item) => ({\r\n                  name: "el-radio",\r\n                  label: item.value,\r\n                  children: item.label,\r\n                }));\r\n              },\r\n              // 组件挂载后的回调\r\n              mounted: (scope, ref) => {\r\n                console.log("单选组已挂载:", ref);\r\n              },\r\n            },\r\n          },\r\n\r\n          // 4. 自定义组件示例\r\n          {\r\n            prop: "custom",\r\n            label: "自定义组件",\r\n            comp: {\r\n              name: customcomvue,\r\n              // 原生事件\r\n              nativeon: {\r\n                click: () => {\r\n                  console.log("点击自定义组件");\r\n                },\r\n              },\r\n            },\r\n          },\r\n\r\n          // 5. 级联选择器示例\r\n          {\r\n            prop: "region",\r\n            label: "地区选择",\r\n            comp: {\r\n              name: "el-cascader",\r\n              // 属性配置\r\n              options: [\r\n                {\r\n                  value: "zhejiang",\r\n                  label: "浙江",\r\n                  children: [\r\n                    {\r\n                      value: "hangzhou",\r\n                      label: "杭州",\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n              // 条件属性\r\n              bind: (scope) => ({\r\n                disabled: !scope.row.type,\r\n                placeholder: `请选择${scope.item.label}`,\r\n              }),\r\n              // 值变化事件\r\n              on: {\r\n                change: (value, scope) => {\r\n                  console.log("选择的地区:", value);\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      // 表格数据\r\n      form: {\r\n        id: 1,\r\n        type: ["1"],\r\n        name: "测试数据",\r\n        gender: "male",\r\n        custom: "",\r\n        region: ["zhejiang", "hangzhou"],\r\n        status: "normal",\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 组件类型转换\n\n原先名字为 el-select 的组件会转化为封装的 sc-select 组件，支持 options 配置, 快速生成选项，字典组件配置\n\n原组件                 转换后组件\nel-select           sc-select\nel-checkbox-group   sc-checkbox\nel-radio-group      sc-radio\nel-switch           sc-switch\nel-cascader         sc-cascader\n\n\n# 组件属性设置\n\n支持两种方式设置组件属性：\n\n 1. 直接属性配置\n\n{\n  name: \'el-input\',\n  type: \'text\',\n  placeholder: \'请输入\',\n  clearable: true\n}\n\n\n 2. bind 配置，支持函数形式，可获取 scope 参数\n\n{\n  name: \'el-input\',\n  bind: {\n    placeholder: \'请输入\',\n    clearable: true\n  }\n}\n\n\n\n# 事件处理配置\n\n组件支持两种事件配置方式：\n\n 1. on 对象配置\n\n{\n  name: \'el-input\',\n  on: {\n    change: (val, scope) => {\n      console.log(\'值变化:\', val)\n    },\n    input: (val, scope) => {\n      console.log(\'输入值:\', val)\n    }\n  }\n}\n\n\n 2. on 前缀配置\n\n{\n  name: \'el-input\',\n  onchange: (val, scope) => {\n    console.log(\'值变化:\', val)\n  },\n  oninput: (val, scope) => {\n    console.log(\'输入值:\', val)\n  }\n}\n\n\n\n# children 属性详细说明\n\nchildren 属性用于配置组件的子元素，支持多种配置方式，常用于下拉选择、单选组、复选组等需要子组件、子元素的场景。\n\n 1. 返回子组件，支持数组与对象\n\n{\n  name: \'el-select\',\n  children: [\n    { name: \'el-option\', label: \'选项1\', value: 1 },\n    { name: \'el-option\', label: \'选项2\', value: 2 }\n  ] // { name: \'el-option\', label: \'选项1\', value: 1 }\n}\n\n\n 2. 函数形式\n\n{\n  name: \'el-select\',\n  children: (scope) => {\n    return scope.dict.map(item => ({\n      name: \'el-option\',\n      label: item.label,\n      value: item.value\n    }))\n  }\n}\n\n\n\n 3. 返回子元素\n\n{\n  name: \'el-button\',\n  children: \'按钮\'\n}\n\n\n\n\n# prop 深度数据绑定\n\nprop 支持·语法深度绑定对象\n\n // 绑定的对象为 { deep1: { deep2: { name: \'名称\' } } }\n{\n  prop: "deep1.deep2.name",\n  label: "名称"\n}\n\n\n\n# api\n\n\n# rendercolumns 通用列配置\n\n属性名          说明                类型                        可选值     默认值\nprop         字段名               string                    -       必填，用于数据绑定\nlabel        列标题               string                    -       显示在表头的文本\nshow         是否显示              boolean/function          true    支持函数形式，可动态控制显示\nhidden       是否隐藏              boolean/function          false   支持函数形式，可动态控制隐藏\nrequired     是否必填              boolean/object/function   false   支持函数形式，可动态控制必填状态\nrules        验证规则配置            array/function                    支持函数形式\ndict         字典配置，支持字符串或对象形式   object/string                     支持函数形式\nformatdata   响应式数据格式化          object                            \nposition     是否开启位置渲染          boolean                   false   用于特殊的位置渲染场景\nformatter    格式化函数             function                  -       用于格式化数据，返回处理后的文本内容\nhtml         是否开启html渲染        boolean                   false   配合 formatter 使用，可以渲染 html 字符串\nrender       渲染函数              function                  -       (h, scope) => {}\ncomp         组件配置              object/function           -       用于配置组件的各种行为和属性\n\n\n# comp 配置项\n\n配置项        类型                      说明                          示例\nname       string/component        组件名称或组件对象。字符串时必须为已注册的全局组件   \'el-input\' 或 导入的组件\nbind       object/function         组件的属性配置，函数时可获取 scope 参数     {placeholder: \'请输入\'} 或 (scope) => ({})\non         object                  组件的事件监听配置                   {change: (val, scope) => {}}\nslots      object                  组件的插槽配置，接收render函数          {default: (h, scope) => []}\nchildren   array/object/function   子组件配置或默认插槽内容                [{name: \'el-option\'}]\nnativeon   object                  原生事件监听                      {click: () => {}}\nmounted    function(scope, ref)    组件挂载后调用                     (scope, ref) => {}\n\n\n# scope 作用域对象\n\n属性       说明\nrow      当前行数据\nself     当前组件实例\ndict     字典数据\n$value   格式化值的 get/set，{ get: () => {} , set: (val) => {} }',charsets:{cjk:!0}},{title:"右键菜单",frontmatter:{},regularPath:"/guide/crud/contextMenu.html",relativePath:"guide/crud/contextMenu.md",key:"v-5e7873c3",path:"/guide/crud/contextMenu.html",headers:[{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:1650},{level:3,title:"contextMenu 配置",slug:"contextmenu-配置",normalizedTitle:"contextmenu 配置",charIndex:1658}],headersStr:"API contextMenu 配置",content:'# 右键菜单\n\n需要安装 vue-contextmenujs\n\ncontextMenu.actionBtn 继承操作列 action 上的所有按钮\ncontextMenu.handles 自定义右键菜单\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        action: [\r\n          "delete",\r\n          "edit",\r\n          {\r\n            label: "自定义action",\r\n          },\r\n        ],\r\n        contextMenu: {\r\n          actionBtn: true,\r\n          copy: true,\r\n          handles: [\r\n            {\r\n              label: "自定义",\r\n              icon: "el-icon-document-copy",\r\n              onClick: () => {\r\n                console.log("自定义");\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# contextMenu 配置\n\n属性名         说明           类型        可选值          默认值\nshow        是否显示         Boolean   true/false   -\ncopy        是否启用复制功能     Boolean   true/false   true\nactionBtn   是否显示操作列按钮    Boolean   true/false   true\nmock        是否启用数据模拟功能   Boolean   true/false   true\nreset       是否启用重置表格功能   Boolean   true/false   true\nhandles     自定义菜单项       Array     -            []',normalizedContent:'# 右键菜单\n\n需要安装 vue-contextmenujs\n\ncontextmenu.actionbtn 继承操作列 action 上的所有按钮\ncontextmenu.handles 自定义右键菜单\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        action: [\r\n          "delete",\r\n          "edit",\r\n          {\r\n            label: "自定义action",\r\n          },\r\n        ],\r\n        contextmenu: {\r\n          actionbtn: true,\r\n          copy: true,\r\n          handles: [\r\n            {\r\n              label: "自定义",\r\n              icon: "el-icon-document-copy",\r\n              onclick: () => {\r\n                console.log("自定义");\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# contextmenu 配置\n\n属性名         说明           类型        可选值          默认值\nshow        是否显示         boolean   true/false   -\ncopy        是否启用复制功能     boolean   true/false   true\nactionbtn   是否显示操作列按钮    boolean   true/false   true\nmock        是否启用数据模拟功能   boolean   true/false   true\nreset       是否启用重置表格功能   boolean   true/false   true\nhandles     自定义菜单项       array     -            []',charsets:{cjk:!0}},{title:"类 Excel 区域选择",frontmatter:{},regularPath:"/guide/crud/areaSelection.html",relativePath:"guide/crud/areaSelection.md",key:"v-6510f261",path:"/guide/crud/areaSelection.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:19},{level:2,title:"功能特性",slug:"功能特性",normalizedTitle:"功能特性",charIndex:103},{level:2,title:"快捷键操作",slug:"快捷键操作",normalizedTitle:"快捷键操作",charIndex:393},{level:2,title:"复制粘贴操作",slug:"复制粘贴操作",normalizedTitle:"复制粘贴操作",charIndex:841},{level:3,title:"粘贴模式",slug:"粘贴模式",normalizedTitle:"粘贴模式",charIndex:913},{level:2,title:"智能填充",slug:"智能填充",normalizedTitle:"智能填充",charIndex:65},{level:3,title:"操作说明",slug:"操作说明",normalizedTitle:"操作说明",charIndex:7807},{level:3,title:"支持的填充模式",slug:"支持的填充模式",normalizedTitle:"支持的填充模式",charIndex:7878},{level:2,title:"自定义填充列表",slug:"自定义填充列表",normalizedTitle:"自定义填充列表",charIndex:339},{level:2,title:"撤销重做",slug:"撤销重做",normalizedTitle:"撤销重做",charIndex:70},{level:2,title:"复杂表格支持",slug:"复杂表格支持",normalizedTitle:"复杂表格支持",charIndex:15364},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:28395},{level:3,title:"areaSelection 配置项",slug:"areaselection-配置项",normalizedTitle:"areaselection 配置项",charIndex:28403}],headersStr:"概述 功能特性 快捷键操作 复制粘贴操作 粘贴模式 智能填充 操作说明 支持的填充模式 自定义填充列表 撤销重做 复杂表格支持 API areaSelection 配置项",content:'# 类 Excel 区域选择\n\n\n# 概述\n\n区域选择功能为表格提供了类似 Excel 的操作体验，支持单元格区域选择、复制粘贴、智能填充、撤销重做等功能。该功能特别适用于需要批量编辑数据的场景。\n\n\n# 功能特性\n\n * 区域选择：支持鼠标拖拽选择单元格区域\n * 整列选择：点击、拖拽表头可选择整列数据\n * 整行选择：序号列支持点击、拖拽选择整行\n * 键盘操作：支持 Ctrl+A 全选、Ctrl+C 复制、Ctrl+V 粘贴、Ctrl+X 剪切等快捷键\n * 智能填充：支持数值序列、日期序列、文本序列的智能识别和填充\n * 撤销重做：支持 Ctrl+Z 撤销和 Ctrl+Y 重做操作\n * 复制粘贴：支持单元格数据的复制粘贴，包括跨表格操作\n * 自定义填充：支持自定义填充列表，如星期、月份等\n * 复杂表格兼容：兼容固定列、合并单元格、树级折叠等复杂表格结构\n\n\n# 快捷键操作\n\n区域选择功能支持以下快捷键操作：\n\n快捷键                         功能      说明\nCtrl + A                    全选      选择表格中所有可编辑的单元格\nCtrl + C                    复制      复制选中区域的数据\nCtrl + Shift + C            复制带表头   复制选中区域的数据并携带表头\nCtrl + V                    粘贴      粘贴剪贴板数据到选中区域\nDelete                      清空      清空选中单元格内容\nCtrl + X                    剪切      剪切选中区域的数据\nCtrl + Z                    撤销      撤销上一步操作\nCtrl + Y、Ctrl + Shift + Z   重做      重做上一步撤销的操作\n\n\n# 复制粘贴操作\n\n支持单元格数据的复制粘贴，包括表格内部和外部应用程序（如Excel）之间的数据交换。 黏贴时，支持智能填充和循环填充。\n\n\n# 粘贴模式\n\n * 智能粘贴：根据目标单元格的组件类型自动格式化数据\n * 循环填充：当选中区域数倍于复制区域时，自动循环填充\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :data="tableData"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      @area-copy="handleCopy"\r\n      @area-paste="handlePaste"\r\n      @area-cut="handleCut"\r\n      @area-selection-change="handleSelectionChange"\r\n    >\r\n    </sc-crud>\r\n\r\n    <div style="margin-top: 20px">\r\n      <el-card header="外部数据测试">\r\n        <p style="margin-bottom: 10px">\r\n          可以从下面的文本框复制数据，然后粘贴到表格中测试：\r\n        </p>\r\n        <el-input\r\n          type="textarea"\r\n          :rows="6"\r\n          v-model="externalData"\r\n          placeholder="可以粘贴Excel数据到这里，然后复制到表格中测试"\r\n        ></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CrudAreaSelectionCopyPaste",\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      selectedInfo: {\r\n        count: 0,\r\n        range: "",\r\n        dataTypes: [],\r\n      },\r\n      clipboardData: null,\r\n      clipboardPreview: "",\r\n      hasSelection: false,\r\n      externalData: `产品名称\\t价格\\t库存\\t状态\\n笔记本电脑\\t5999\\t50\\t在售\\n台式机\\t3999\\t30\\t在售\\n显示器\\t1299\\t100\\t在售\\n键盘\\t299\\t200\\t在售`,\r\n      tableData: [\r\n        {\r\n          id: 1,\r\n          name: "产品A",\r\n          price: 1299,\r\n          stock: 100,\r\n          status: "1",\r\n          category: "1",\r\n          supplier: "供应商A",\r\n          date: "2024-01-15",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "产品B",\r\n          price: 2599,\r\n          stock: 50,\r\n          status: "2",\r\n          category: "2",\r\n          supplier: "供应商B",\r\n          date: "2024-01-16",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 7,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 8,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        index: true,\r\n        areaSelection: {},\r\n        editConfig: {\r\n          mode: "cell",\r\n        },\r\n        height: "400px",\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "产品名称",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "请输入产品名称",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "price",\r\n            label: "价格",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                precision: 2,\r\n                placeholder: "请输入价格",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "stock",\r\n            label: "库存",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                placeholder: "请输入库存",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            width: 100,\r\n            comp: {\r\n              name: "sc-value-format",\r\n              options: [\r\n                { label: "在售", value: "1" },\r\n                { label: "下架", value: "2" },\r\n                { label: "缺货", value: "3" },\r\n              ],\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "请选择状态",\r\n                options: [\r\n                  { label: "在售", value: "1" },\r\n                  { label: "下架", value: "2" },\r\n                  { label: "缺货", value: "3" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "category",\r\n            label: "分类",\r\n            width: 120,\r\n            comp: {\r\n              name: "sc-value-format",\r\n              options: [\r\n                { label: "电子产品", value: "1" },\r\n                { label: "服装", value: "2" },\r\n                { label: "食品", value: "3" },\r\n                { label: "图书", value: "4" },\r\n              ],\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "请选择分类",\r\n                options: [\r\n                  { label: "电子产品", value: "1" },\r\n                  { label: "服装", value: "2" },\r\n                  { label: "食品", value: "3" },\r\n                  { label: "图书", value: "4" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "supplier",\r\n            label: "供应商",\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "请输入供应商",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                placeholder: "请选择日期",\r\n                format: "yyyy-MM-dd",\r\n                "value-format": "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    handleCopy(data) {\r\n      console.log("handleCopy", data);\r\n    },\r\n\r\n    handlePaste(data) {\r\n      console.log("handlePaste", data);\r\n    },\r\n\r\n    handleCut(data) {\r\n      console.log("handleCut", data);\r\n    },\r\n\r\n    handleSelectionChange(selectedCells) {\r\n      console.log("selectedCells", selectedCells);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.el-alert {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-alert p {\r\n  margin: 2px 0;\r\n  font-size: 13px;\r\n}\r\n\r\n.el-card p {\r\n  margin: 5px 0;\r\n  font-size: 13px;\r\n}\r\n\r\npre {\r\n  background: #f5f5f5;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  margin: 0;\r\n}\r\n\r\n.el-button-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.el-button-group .el-button {\r\n  margin-bottom: 5px;\r\n}\r\n</style>\r\n\n\n\n# 智能填充\n\n智能填充功能可以自动识别数据模式并生成序列数据。\n\n\n# 操作说明\n\n 1. 选择包含模式数据的单元格（至少2个）\n 2. 拖拽选择区域右下角的填充手柄\n 3. 系统会自动识别数据模式并填充\n\n\n# 支持的填充模式\n\n 1. 数值序列：如 1, 2, 3... 或 10, 20, 30...\n 2. 日期序列：如 2024-01-01, 2024-01-02...\n 3. 文本+数字序列：如 项目1, 项目2, 项目3...\n 4. 自定义列表：如星期一, 星期二... 或一月, 二月...\n 5. 复制模式：当无法识别模式时，重复复制源数据。\n\n按住 Ctrl 键时，强制使用复制模式。\n\n\n# 自定义填充列表\n\n可以通过 fillCustomLists 配置自定义的填充序列：\n\n// 配置自定义填充列表\nareaSelection: {\n  fillCustomLists: [\n    [\'星期一\', \'星期二\', \'星期三\', \'星期四\', \'星期五\', \'星期六\', \'星期日\'],\n    [\'一月\', \'二月\', \'三月\', \'四月\', \'五月\', \'六月\', \'七月\', \'八月\', \'九月\', \'十月\', \'十一月\', \'十二月\'],\n    [\'第一季度\', \'第二季度\', \'第三季度\', \'第四季度\']\n  ]\n}\n\n\n<template>\r\n  <sc-crud\r\n    ref="crud"\r\n    :search.sync="searchForm"\r\n    :options="options"\r\n    :data="tableData"\r\n    @area-fill="handleFill"\r\n    @area-selection-change="handleSelectionChange"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "CrudAreaSelectionSmartFill",\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      tableData: [\r\n        {\r\n          id: 1,\r\n          sequence: 1,\r\n          project: "项目1",\r\n          date: "2024-01-01",\r\n          weekday: "星期一",\r\n          month: "一月",\r\n          quarter: "第一季度",\r\n          score: 85,\r\n          version: "v1.0",\r\n        },\r\n        {\r\n          id: 2,\r\n          sequence: 2,\r\n          project: "项目2",\r\n          date: "2024-01-02",\r\n          weekday: "星期二",\r\n          month: "二月",\r\n          quarter: "第二季度",\r\n          score: 90,\r\n          version: "v1.1",\r\n        },\r\n        {\r\n          id: 3,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 5,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 6,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 7,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 8,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        index: true,\r\n        areaSelection: {\r\n          fillCustomLists: [\r\n            [\r\n              "星期一",\r\n              "星期二",\r\n              "星期三",\r\n              "星期四",\r\n              "星期五",\r\n              "星期六",\r\n              "星期日",\r\n            ],\r\n            [\r\n              "一月",\r\n              "二月",\r\n              "三月",\r\n              "四月",\r\n              "五月",\r\n              "六月",\r\n              "七月",\r\n              "八月",\r\n              "九月",\r\n              "十月",\r\n              "十一月",\r\n              "十二月",\r\n            ],\r\n            ["第一季度", "第二季度", "第三季度", "第四季度"],\r\n          ],\r\n        },\r\n        editConfig: {\r\n          mode: "cell",\r\n        },\r\n        height: "500px",\r\n        renderColumns: [\r\n          {\r\n            prop: "id",\r\n            label: "ID",\r\n            width: 60,\r\n            isEdit: false,\r\n          },\r\n          {\r\n            prop: "sequence",\r\n            label: "序号",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 1,\r\n                placeholder: "数值序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "project",\r\n            label: "项目名称",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "文本+数字序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                placeholder: "日期序列",\r\n                format: "yyyy-MM-dd",\r\n                "value-format": "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "weekday",\r\n            label: "星期",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "星期一", value: "星期一" },\r\n                  { label: "星期二", value: "星期二" },\r\n                  { label: "星期三", value: "星期三" },\r\n                  { label: "星期四", value: "星期四" },\r\n                  { label: "星期五", value: "星期五" },\r\n                  { label: "星期六", value: "星期六" },\r\n                  { label: "星期日", value: "星期日" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "month",\r\n            label: "月份",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "一月", value: "一月" },\r\n                  { label: "二月", value: "二月" },\r\n                  { label: "三月", value: "三月" },\r\n                  { label: "四月", value: "四月" },\r\n                  { label: "五月", value: "五月" },\r\n                  { label: "六月", value: "六月" },\r\n                  { label: "七月", value: "七月" },\r\n                  { label: "八月", value: "八月" },\r\n                  { label: "九月", value: "九月" },\r\n                  { label: "十月", value: "十月" },\r\n                  { label: "十一月", value: "十一月" },\r\n                  { label: "十二月", value: "十二月" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "quarter",\r\n            label: "季度",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "第一季度", value: "第一季度" },\r\n                  { label: "第二季度", value: "第二季度" },\r\n                  { label: "第三季度", value: "第三季度" },\r\n                  { label: "第四季度", value: "第四季度" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "score",\r\n            label: "评分",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                max: 100,\r\n                step: 5,\r\n                placeholder: "数值序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "version",\r\n            label: "版本",\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "文本+数字序列",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    handleFill(data) {},\r\n\r\n    handleSelectionChange(selectedCells) {\r\n      // 可以在这里处理选择变化\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 撤销重做\n\n支持操作历史的撤销和重做功能：\n\n\n撤销：按 Ctrl+Z 回退上一步操作\n重做：按 Ctrl+Y 或 Ctrl+Shift+Z 重新执行上一步撤销的操作\n\n\n\n# 复杂表格支持\n\n<template>\r\n  <div>\r\n    <h3>固定列 + 表头嵌套 + 单元格合并 + 树级数据</h3>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 20,\r\n      },\r\n      options: {\r\n        init: true,\r\n        height: "600px",\r\n        rowKey: "id",\r\n        treeProps: {\r\n          children: "children",\r\n          hasChildren: "hasChildren",\r\n        },\r\n        // 默认展开所有树级数据\r\n        defaultExpandAll: true,\r\n        showSummary: true,\r\n        // 启用区域选择功能\r\n        areaSelection: true,\r\n        // 启用选择列\r\n        selection: {\r\n          fixed: true,\r\n        },\r\n        // 启用序号列\r\n        index: {\r\n          fixed: true,\r\n        },\r\n        // 启用单元格合并\r\n        spanMethod: this.objectSpanMethod,\r\n        renderColumns: [\r\n          {\r\n            prop: "department",\r\n            label: "部门",\r\n            width: 120,\r\n            search: true,\r\n            fixed: true,\r\n          },\r\n          {\r\n            label: "员工基本信息",\r\n            children: [\r\n              {\r\n                prop: "name",\r\n                label: "姓名",\r\n                width: 100,\r\n                search: true,\r\n              },\r\n              {\r\n                prop: "gender",\r\n                label: "性别",\r\n                width: 80,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-select",\r\n                    options: [\r\n                      { label: "男", value: "男" },\r\n                      { label: "女", value: "女" },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                prop: "age",\r\n                label: "年龄",\r\n                width: 80,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 18,\r\n                    max: 65,\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "职位信息",\r\n            children: [\r\n              {\r\n                prop: "position",\r\n                label: "职位",\r\n                width: 120,\r\n              },\r\n              {\r\n                prop: "level",\r\n                label: "级别",\r\n                width: 100,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-select",\r\n                    options: [\r\n                      { label: "初级", value: "初级" },\r\n                      { label: "中级", value: "中级" },\r\n                      { label: "高级", value: "高级" },\r\n                      { label: "专家", value: "专家" },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "薪资信息",\r\n            children: [\r\n              {\r\n                prop: "baseSalary",\r\n                label: "基本工资",\r\n                width: 120,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 0,\r\n                    precision: 2,\r\n                  },\r\n                },\r\n                formatter: (row, column, cellValue) => {\r\n                  return cellValue ? `¥${cellValue.toLocaleString()}` : "-";\r\n                },\r\n                summary: {\r\n                  type: "sum",\r\n                  prefix: "¥",\r\n                  decimals: 2,\r\n                },\r\n              },\r\n              {\r\n                prop: "bonus",\r\n                label: "奖金",\r\n                width: 100,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 0,\r\n                    precision: 2,\r\n                  },\r\n                },\r\n                formatter: (row, column, cellValue) => {\r\n                  return cellValue ? `¥${cellValue.toLocaleString()}` : "-";\r\n                },\r\n                summary: {\r\n                  type: "sum",\r\n                  prefix: "¥",\r\n                  decimals: 2,\r\n                },\r\n              },\r\n              {\r\n                prop: "totalSalary",\r\n                label: "总薪资",\r\n                width: 120,\r\n                formatter: (row) => {\r\n                  const total = (row.baseSalary || 0) + (row.bonus || 0);\r\n                  return `¥${total.toLocaleString()}`;\r\n                },\r\n                summary: {\r\n                  type: "custom",\r\n                  method: (data) => {\r\n                    const total = data.reduce((sum, row) => {\r\n                      return sum + (row.baseSalary || 0) + (row.bonus || 0);\r\n                    }, 0);\r\n                    return `¥${total.toLocaleString()}`;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "联系方式",\r\n            children: [\r\n              {\r\n                prop: "phone",\r\n                label: "电话",\r\n                width: 130,\r\n              },\r\n              {\r\n                prop: "email",\r\n                label: "邮箱",\r\n                width: 180,\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            prop: "joinDate",\r\n            label: "入职日期",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                format: "yyyy-MM-dd",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "在职", value: "在职" },\r\n                  { label: "离职", value: "离职" },\r\n                  { label: "休假", value: "休假" },\r\n                ],\r\n              },\r\n            },\r\n            render: (h, { row }) => {\r\n              const cellValue = row.status;\r\n              const statusMap = {\r\n                在职: { color: "#67C23A", text: "在职" },\r\n                离职: { color: "#F56C6C", text: "离职" },\r\n                休假: { color: "#E6A23C", text: "休假" },\r\n              };\r\n              const status = statusMap[cellValue] || {\r\n                color: "#909399",\r\n                text: cellValue,\r\n              };\r\n              return h(\r\n                "span",\r\n                {\r\n                  style: {\r\n                    color: `${status.color}`,\r\n                    fontWeight: "bold",\r\n                  },\r\n                },\r\n                `${status.text}`\r\n              );\r\n            },\r\n          },\r\n        ],\r\n        // 启用行编辑\r\n        editConfig: {\r\n          mode: "row",\r\n        },\r\n        // 工具栏配置\r\n        toolbar: {\r\n          handles: [\r\n            {\r\n              label: "新增员工",\r\n              type: "primary",\r\n              icon: "el-icon-plus",\r\n              onClick: () => {\r\n                this.addEmployee();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        // 模拟复杂的树形数据\r\n        const mockData = this.generateMockData();\r\n        this.data = mockData;\r\n        this.total = mockData.length;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    generateMockData() {\r\n      const departments = ["技术部", "产品部", "运营部", "人事部"];\r\n      const positions = {\r\n        技术部: ["前端工程师", "后端工程师", "测试工程师", "架构师"],\r\n        产品部: ["产品经理", "UI设计师", "交互设计师", "产品助理"],\r\n        运营部: ["运营专员", "市场推广", "数据分析师", "客服专员"],\r\n        人事部: ["HR专员", "招聘专员", "培训师", "薪酬专员"],\r\n      };\r\n      const levels = ["初级", "中级", "高级", "专家"];\r\n      const genders = ["男", "女"];\r\n      const statuses = ["在职", "在职", "在职", "休假", "离职"];\r\n\r\n      const data = [];\r\n      let id = 1;\r\n\r\n      departments.forEach((dept, deptIndex) => {\r\n        // 部门主管\r\n        const manager = {\r\n          id: id++,\r\n          department: dept,\r\n          name: `${dept}主管`,\r\n          gender: genders[Math.floor(Math.random() * genders.length)],\r\n          age: 35 + Math.floor(Math.random() * 10),\r\n          position: "部门主管",\r\n          level: "专家",\r\n          baseSalary: 15000 + Math.floor(Math.random() * 10000),\r\n          bonus: 3000 + Math.floor(Math.random() * 5000),\r\n          phone: `138${String(Math.floor(Math.random() * 100000000)).padStart(\r\n            8,\r\n            "0"\r\n          )}`,\r\n          email: `manager${deptIndex}@company.com`,\r\n          joinDate: "2020-01-15",\r\n          status: "在职",\r\n          children: [],\r\n        };\r\n\r\n        // 部门员工\r\n        const employeeCount = 3 + Math.floor(Math.random() * 4);\r\n        for (let i = 0; i < employeeCount; i++) {\r\n          const employee = {\r\n            id: id++,\r\n            department: dept,\r\n            name: `员工${id - 1}`,\r\n            gender: genders[Math.floor(Math.random() * genders.length)],\r\n            age: 22 + Math.floor(Math.random() * 15),\r\n            position:\r\n              positions[dept][\r\n                Math.floor(Math.random() * positions[dept].length)\r\n              ],\r\n            level: levels[Math.floor(Math.random() * levels.length)],\r\n            baseSalary: 8000 + Math.floor(Math.random() * 12000),\r\n            bonus: Math.floor(Math.random() * 3000),\r\n            phone: `139${String(Math.floor(Math.random() * 100000000)).padStart(\r\n              8,\r\n              "0"\r\n            )}`,\r\n            email: `employee${id - 1}@company.com`,\r\n            joinDate: `202${Math.floor(Math.random() * 4)}-${String(\r\n              Math.floor(Math.random() * 12) + 1\r\n            ).padStart(2, "0")}-${String(\r\n              Math.floor(Math.random() * 28) + 1\r\n            ).padStart(2, "0")}`,\r\n            status: statuses[Math.floor(Math.random() * statuses.length)],\r\n          };\r\n          manager.children.push(employee);\r\n        }\r\n\r\n        data.push(manager);\r\n      });\r\n\r\n      return data;\r\n    },\r\n\r\n    addEmployee() {\r\n      const newEmployee = {\r\n        id: Date.now(),\r\n        department: "技术部",\r\n        name: "新员工",\r\n        gender: "男",\r\n        age: 25,\r\n        position: "前端工程师",\r\n        level: "初级",\r\n        baseSalary: 8000,\r\n        bonus: 0,\r\n        phone: "",\r\n        email: "",\r\n        joinDate: new Date().toISOString().split("T")[0],\r\n        status: "在职",\r\n      };\r\n      this.data.unshift(newEmployee);\r\n      this.$message.success("新增员工成功");\r\n    },\r\n\r\n    // 获取扁平化数据（将树形结构展开，并添加层级信息）\r\n    getFlatDataWithLevel(data) {\r\n      const result = [];\r\n\r\n      const flatten = (items, level = 0) => {\r\n        items.forEach((item) => {\r\n          const flatItem = { ...item, _level: level };\r\n          result.push(flatItem);\r\n          if (item.children && item.children.length > 0) {\r\n            flatten(item.children, level + 1);\r\n          }\r\n        });\r\n      };\r\n\r\n      flatten(data);\r\n      return result;\r\n    },\r\n\r\n    // el-table原生单元格合并方法 - 只合并部门列且相同层级\r\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\r\n      // 只处理部门列的合并\r\n      if (column.property !== "department") {\r\n        return [1, 1];\r\n      }\r\n\r\n      // 获取扁平化的数据（包含层级信息）\r\n      const flatData = this.getFlatDataWithLevel(this.data);\r\n      const currentRowData = flatData[rowIndex];\r\n\r\n      if (!currentRowData) return [1, 1];\r\n\r\n      const currentValue = currentRowData.department;\r\n      const currentLevel = currentRowData._level;\r\n      let rowspan = 1;\r\n\r\n      // 向下查找相同层级且相同部门的行\r\n      for (let i = rowIndex + 1; i < flatData.length; i++) {\r\n        const nextRow = flatData[i];\r\n        // 只在相同层级中合并\r\n        if (\r\n          nextRow._level === currentLevel &&\r\n          nextRow.department === currentValue\r\n        ) {\r\n          rowspan++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查是否是合并区域的第一行（向上查找相同层级和部门）\r\n      let isFirstRow = true;\r\n      for (let i = rowIndex - 1; i >= 0; i--) {\r\n        const prevRow = flatData[i];\r\n        if (\r\n          prevRow._level === currentLevel &&\r\n          prevRow.department === currentValue\r\n        ) {\r\n          isFirstRow = false;\r\n          break;\r\n        } else if (prevRow._level !== currentLevel) {\r\n          // 不同层级则停止查找\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isFirstRow) {\r\n        return [rowspan, 1];\r\n      } else {\r\n        return [0, 0]; // 隐藏重复的单元格\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  font-size: 12px;\r\n}\r\n\r\n.el-table th {\r\n  background-color: #f5f7fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-table .cell {\r\n  padding: 0 8px;\r\n}\r\n\r\n/* 区域选择样式优化 */\r\n::v-deep .area-selection-overlay {\r\n  border: 2px solid #409eff;\r\n  background-color: rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n::v-deep .area-selection-copy {\r\n  border: 2px dashed #67c23a;\r\n  background-color: rgba(103, 194, 58, 0.1);\r\n}\r\n</style>\r\n\n\n\n# API\n\n\n# areaSelection 配置项\n\n参数                    类型         默认值      说明\noperationType         String     \'edit\'   \'all\':对所有数据进行操作，包括只读单元格,\'edit\': 仅对可编辑的单元格进行操作（默认）\ncopy                  Boolean    true     是否启用复制功能\npaste                 Boolean    true     是否启用粘贴功能\ncut                   Boolean    true     是否启用剪切功能\nfill                  Boolean    true     是否启用智能填充功能\nfillCustomLists       Array      []       自定义填充列表，用于智能填充的自定义序列\nundo                  Boolean    true     是否启用撤销功能\nredo                  Boolean    true     是否启用重做功能\nselection             Boolean    true     是否启用区域选择功能\nallSelection          Boolean    true     是否启用全选功能（Ctrl+A）\nrowSelection          Boolean    true     是否启用行选择（点击序号列）\ncolumnSelection       Boolean    true     是否启用列选择（点击表头）\nautoScroll            Boolean    true     是否启用自动滚动\nscrollSpeed           Number     10       自动滚动速度（像素/帧）\nmaxUndoSteps          Number     50       最大撤销步数\ngetCellTextMethod     Function   -        自定义获取单元格文本的方法（复制文本）\ngetCellValueMethod    Function   -        自定义获取单元格值的方法（表格间值复制、获取值）\ngetClearValueMethod   Function   -        自定义返回清空值的方法\nsetCellValueMethod    Function   -        自定义设置单元格值的方法，可通过type参数判断操作类型\ntextMappingConfig     Object     -        文本映射配置对象（外部Excel文本黏贴时映射到表格的值）\ncustomMapping         Function   -        自定义文本映射函数 （外部Excel文本黏贴时映射到表格的值）',normalizedContent:'# 类 excel 区域选择\n\n\n# 概述\n\n区域选择功能为表格提供了类似 excel 的操作体验，支持单元格区域选择、复制粘贴、智能填充、撤销重做等功能。该功能特别适用于需要批量编辑数据的场景。\n\n\n# 功能特性\n\n * 区域选择：支持鼠标拖拽选择单元格区域\n * 整列选择：点击、拖拽表头可选择整列数据\n * 整行选择：序号列支持点击、拖拽选择整行\n * 键盘操作：支持 ctrl+a 全选、ctrl+c 复制、ctrl+v 粘贴、ctrl+x 剪切等快捷键\n * 智能填充：支持数值序列、日期序列、文本序列的智能识别和填充\n * 撤销重做：支持 ctrl+z 撤销和 ctrl+y 重做操作\n * 复制粘贴：支持单元格数据的复制粘贴，包括跨表格操作\n * 自定义填充：支持自定义填充列表，如星期、月份等\n * 复杂表格兼容：兼容固定列、合并单元格、树级折叠等复杂表格结构\n\n\n# 快捷键操作\n\n区域选择功能支持以下快捷键操作：\n\n快捷键                         功能      说明\nctrl + a                    全选      选择表格中所有可编辑的单元格\nctrl + c                    复制      复制选中区域的数据\nctrl + shift + c            复制带表头   复制选中区域的数据并携带表头\nctrl + v                    粘贴      粘贴剪贴板数据到选中区域\ndelete                      清空      清空选中单元格内容\nctrl + x                    剪切      剪切选中区域的数据\nctrl + z                    撤销      撤销上一步操作\nctrl + y、ctrl + shift + z   重做      重做上一步撤销的操作\n\n\n# 复制粘贴操作\n\n支持单元格数据的复制粘贴，包括表格内部和外部应用程序（如excel）之间的数据交换。 黏贴时，支持智能填充和循环填充。\n\n\n# 粘贴模式\n\n * 智能粘贴：根据目标单元格的组件类型自动格式化数据\n * 循环填充：当选中区域数倍于复制区域时，自动循环填充\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :data="tabledata"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      @area-copy="handlecopy"\r\n      @area-paste="handlepaste"\r\n      @area-cut="handlecut"\r\n      @area-selection-change="handleselectionchange"\r\n    >\r\n    </sc-crud>\r\n\r\n    <div style="margin-top: 20px">\r\n      <el-card header="外部数据测试">\r\n        <p style="margin-bottom: 10px">\r\n          可以从下面的文本框复制数据，然后粘贴到表格中测试：\r\n        </p>\r\n        <el-input\r\n          type="textarea"\r\n          :rows="6"\r\n          v-model="externaldata"\r\n          placeholder="可以粘贴excel数据到这里，然后复制到表格中测试"\r\n        ></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "crudareaselectioncopypaste",\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      selectedinfo: {\r\n        count: 0,\r\n        range: "",\r\n        datatypes: [],\r\n      },\r\n      clipboarddata: null,\r\n      clipboardpreview: "",\r\n      hasselection: false,\r\n      externaldata: `产品名称\\t价格\\t库存\\t状态\\n笔记本电脑\\t5999\\t50\\t在售\\n台式机\\t3999\\t30\\t在售\\n显示器\\t1299\\t100\\t在售\\n键盘\\t299\\t200\\t在售`,\r\n      tabledata: [\r\n        {\r\n          id: 1,\r\n          name: "产品a",\r\n          price: 1299,\r\n          stock: 100,\r\n          status: "1",\r\n          category: "1",\r\n          supplier: "供应商a",\r\n          date: "2024-01-15",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "产品b",\r\n          price: 2599,\r\n          stock: 50,\r\n          status: "2",\r\n          category: "2",\r\n          supplier: "供应商b",\r\n          date: "2024-01-16",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 7,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n        {\r\n          id: 8,\r\n          name: "",\r\n          price: "",\r\n          stock: "",\r\n          status: "",\r\n          category: "",\r\n          supplier: "",\r\n          date: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        index: true,\r\n        areaselection: {},\r\n        editconfig: {\r\n          mode: "cell",\r\n        },\r\n        height: "400px",\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "产品名称",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "请输入产品名称",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "price",\r\n            label: "价格",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                precision: 2,\r\n                placeholder: "请输入价格",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "stock",\r\n            label: "库存",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                placeholder: "请输入库存",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            width: 100,\r\n            comp: {\r\n              name: "sc-value-format",\r\n              options: [\r\n                { label: "在售", value: "1" },\r\n                { label: "下架", value: "2" },\r\n                { label: "缺货", value: "3" },\r\n              ],\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "请选择状态",\r\n                options: [\r\n                  { label: "在售", value: "1" },\r\n                  { label: "下架", value: "2" },\r\n                  { label: "缺货", value: "3" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "category",\r\n            label: "分类",\r\n            width: 120,\r\n            comp: {\r\n              name: "sc-value-format",\r\n              options: [\r\n                { label: "电子产品", value: "1" },\r\n                { label: "服装", value: "2" },\r\n                { label: "食品", value: "3" },\r\n                { label: "图书", value: "4" },\r\n              ],\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "请选择分类",\r\n                options: [\r\n                  { label: "电子产品", value: "1" },\r\n                  { label: "服装", value: "2" },\r\n                  { label: "食品", value: "3" },\r\n                  { label: "图书", value: "4" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "supplier",\r\n            label: "供应商",\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "请输入供应商",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                placeholder: "请选择日期",\r\n                format: "yyyy-mm-dd",\r\n                "value-format": "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    handlecopy(data) {\r\n      console.log("handlecopy", data);\r\n    },\r\n\r\n    handlepaste(data) {\r\n      console.log("handlepaste", data);\r\n    },\r\n\r\n    handlecut(data) {\r\n      console.log("handlecut", data);\r\n    },\r\n\r\n    handleselectionchange(selectedcells) {\r\n      console.log("selectedcells", selectedcells);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.el-alert {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-alert p {\r\n  margin: 2px 0;\r\n  font-size: 13px;\r\n}\r\n\r\n.el-card p {\r\n  margin: 5px 0;\r\n  font-size: 13px;\r\n}\r\n\r\npre {\r\n  background: #f5f5f5;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  margin: 0;\r\n}\r\n\r\n.el-button-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.el-button-group .el-button {\r\n  margin-bottom: 5px;\r\n}\r\n</style>\r\n\n\n\n# 智能填充\n\n智能填充功能可以自动识别数据模式并生成序列数据。\n\n\n# 操作说明\n\n 1. 选择包含模式数据的单元格（至少2个）\n 2. 拖拽选择区域右下角的填充手柄\n 3. 系统会自动识别数据模式并填充\n\n\n# 支持的填充模式\n\n 1. 数值序列：如 1, 2, 3... 或 10, 20, 30...\n 2. 日期序列：如 2024-01-01, 2024-01-02...\n 3. 文本+数字序列：如 项目1, 项目2, 项目3...\n 4. 自定义列表：如星期一, 星期二... 或一月, 二月...\n 5. 复制模式：当无法识别模式时，重复复制源数据。\n\n按住 ctrl 键时，强制使用复制模式。\n\n\n# 自定义填充列表\n\n可以通过 fillcustomlists 配置自定义的填充序列：\n\n// 配置自定义填充列表\nareaselection: {\n  fillcustomlists: [\n    [\'星期一\', \'星期二\', \'星期三\', \'星期四\', \'星期五\', \'星期六\', \'星期日\'],\n    [\'一月\', \'二月\', \'三月\', \'四月\', \'五月\', \'六月\', \'七月\', \'八月\', \'九月\', \'十月\', \'十一月\', \'十二月\'],\n    [\'第一季度\', \'第二季度\', \'第三季度\', \'第四季度\']\n  ]\n}\n\n\n<template>\r\n  <sc-crud\r\n    ref="crud"\r\n    :search.sync="searchform"\r\n    :options="options"\r\n    :data="tabledata"\r\n    @area-fill="handlefill"\r\n    @area-selection-change="handleselectionchange"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "crudareaselectionsmartfill",\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      tabledata: [\r\n        {\r\n          id: 1,\r\n          sequence: 1,\r\n          project: "项目1",\r\n          date: "2024-01-01",\r\n          weekday: "星期一",\r\n          month: "一月",\r\n          quarter: "第一季度",\r\n          score: 85,\r\n          version: "v1.0",\r\n        },\r\n        {\r\n          id: 2,\r\n          sequence: 2,\r\n          project: "项目2",\r\n          date: "2024-01-02",\r\n          weekday: "星期二",\r\n          month: "二月",\r\n          quarter: "第二季度",\r\n          score: 90,\r\n          version: "v1.1",\r\n        },\r\n        {\r\n          id: 3,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 5,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 6,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 7,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n        {\r\n          id: 8,\r\n          sequence: "",\r\n          project: "",\r\n          date: "",\r\n          weekday: "",\r\n          month: "",\r\n          quarter: "",\r\n          score: "",\r\n          version: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        index: true,\r\n        areaselection: {\r\n          fillcustomlists: [\r\n            [\r\n              "星期一",\r\n              "星期二",\r\n              "星期三",\r\n              "星期四",\r\n              "星期五",\r\n              "星期六",\r\n              "星期日",\r\n            ],\r\n            [\r\n              "一月",\r\n              "二月",\r\n              "三月",\r\n              "四月",\r\n              "五月",\r\n              "六月",\r\n              "七月",\r\n              "八月",\r\n              "九月",\r\n              "十月",\r\n              "十一月",\r\n              "十二月",\r\n            ],\r\n            ["第一季度", "第二季度", "第三季度", "第四季度"],\r\n          ],\r\n        },\r\n        editconfig: {\r\n          mode: "cell",\r\n        },\r\n        height: "500px",\r\n        rendercolumns: [\r\n          {\r\n            prop: "id",\r\n            label: "id",\r\n            width: 60,\r\n            isedit: false,\r\n          },\r\n          {\r\n            prop: "sequence",\r\n            label: "序号",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 1,\r\n                placeholder: "数值序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "project",\r\n            label: "项目名称",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "文本+数字序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                placeholder: "日期序列",\r\n                format: "yyyy-mm-dd",\r\n                "value-format": "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "weekday",\r\n            label: "星期",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "星期一", value: "星期一" },\r\n                  { label: "星期二", value: "星期二" },\r\n                  { label: "星期三", value: "星期三" },\r\n                  { label: "星期四", value: "星期四" },\r\n                  { label: "星期五", value: "星期五" },\r\n                  { label: "星期六", value: "星期六" },\r\n                  { label: "星期日", value: "星期日" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "month",\r\n            label: "月份",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "一月", value: "一月" },\r\n                  { label: "二月", value: "二月" },\r\n                  { label: "三月", value: "三月" },\r\n                  { label: "四月", value: "四月" },\r\n                  { label: "五月", value: "五月" },\r\n                  { label: "六月", value: "六月" },\r\n                  { label: "七月", value: "七月" },\r\n                  { label: "八月", value: "八月" },\r\n                  { label: "九月", value: "九月" },\r\n                  { label: "十月", value: "十月" },\r\n                  { label: "十一月", value: "十一月" },\r\n                  { label: "十二月", value: "十二月" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "quarter",\r\n            label: "季度",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                placeholder: "自定义列表",\r\n                options: [\r\n                  { label: "第一季度", value: "第一季度" },\r\n                  { label: "第二季度", value: "第二季度" },\r\n                  { label: "第三季度", value: "第三季度" },\r\n                  { label: "第四季度", value: "第四季度" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "score",\r\n            label: "评分",\r\n            width: 80,\r\n            form: {\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 0,\r\n                max: 100,\r\n                step: 5,\r\n                placeholder: "数值序列",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "version",\r\n            label: "版本",\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                placeholder: "文本+数字序列",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    handlefill(data) {},\r\n\r\n    handleselectionchange(selectedcells) {\r\n      // 可以在这里处理选择变化\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 撤销重做\n\n支持操作历史的撤销和重做功能：\n\n\n撤销：按 ctrl+z 回退上一步操作\n重做：按 ctrl+y 或 ctrl+shift+z 重新执行上一步撤销的操作\n\n\n\n# 复杂表格支持\n\n<template>\r\n  <div>\r\n    <h3>固定列 + 表头嵌套 + 单元格合并 + 树级数据</h3>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 20,\r\n      },\r\n      options: {\r\n        init: true,\r\n        height: "600px",\r\n        rowkey: "id",\r\n        treeprops: {\r\n          children: "children",\r\n          haschildren: "haschildren",\r\n        },\r\n        // 默认展开所有树级数据\r\n        defaultexpandall: true,\r\n        showsummary: true,\r\n        // 启用区域选择功能\r\n        areaselection: true,\r\n        // 启用选择列\r\n        selection: {\r\n          fixed: true,\r\n        },\r\n        // 启用序号列\r\n        index: {\r\n          fixed: true,\r\n        },\r\n        // 启用单元格合并\r\n        spanmethod: this.objectspanmethod,\r\n        rendercolumns: [\r\n          {\r\n            prop: "department",\r\n            label: "部门",\r\n            width: 120,\r\n            search: true,\r\n            fixed: true,\r\n          },\r\n          {\r\n            label: "员工基本信息",\r\n            children: [\r\n              {\r\n                prop: "name",\r\n                label: "姓名",\r\n                width: 100,\r\n                search: true,\r\n              },\r\n              {\r\n                prop: "gender",\r\n                label: "性别",\r\n                width: 80,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-select",\r\n                    options: [\r\n                      { label: "男", value: "男" },\r\n                      { label: "女", value: "女" },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                prop: "age",\r\n                label: "年龄",\r\n                width: 80,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 18,\r\n                    max: 65,\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "职位信息",\r\n            children: [\r\n              {\r\n                prop: "position",\r\n                label: "职位",\r\n                width: 120,\r\n              },\r\n              {\r\n                prop: "level",\r\n                label: "级别",\r\n                width: 100,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-select",\r\n                    options: [\r\n                      { label: "初级", value: "初级" },\r\n                      { label: "中级", value: "中级" },\r\n                      { label: "高级", value: "高级" },\r\n                      { label: "专家", value: "专家" },\r\n                    ],\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "薪资信息",\r\n            children: [\r\n              {\r\n                prop: "basesalary",\r\n                label: "基本工资",\r\n                width: 120,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 0,\r\n                    precision: 2,\r\n                  },\r\n                },\r\n                formatter: (row, column, cellvalue) => {\r\n                  return cellvalue ? `¥${cellvalue.tolocalestring()}` : "-";\r\n                },\r\n                summary: {\r\n                  type: "sum",\r\n                  prefix: "¥",\r\n                  decimals: 2,\r\n                },\r\n              },\r\n              {\r\n                prop: "bonus",\r\n                label: "奖金",\r\n                width: 100,\r\n                form: {\r\n                  comp: {\r\n                    name: "el-input-number",\r\n                    min: 0,\r\n                    precision: 2,\r\n                  },\r\n                },\r\n                formatter: (row, column, cellvalue) => {\r\n                  return cellvalue ? `¥${cellvalue.tolocalestring()}` : "-";\r\n                },\r\n                summary: {\r\n                  type: "sum",\r\n                  prefix: "¥",\r\n                  decimals: 2,\r\n                },\r\n              },\r\n              {\r\n                prop: "totalsalary",\r\n                label: "总薪资",\r\n                width: 120,\r\n                formatter: (row) => {\r\n                  const total = (row.basesalary || 0) + (row.bonus || 0);\r\n                  return `¥${total.tolocalestring()}`;\r\n                },\r\n                summary: {\r\n                  type: "custom",\r\n                  method: (data) => {\r\n                    const total = data.reduce((sum, row) => {\r\n                      return sum + (row.basesalary || 0) + (row.bonus || 0);\r\n                    }, 0);\r\n                    return `¥${total.tolocalestring()}`;\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "联系方式",\r\n            children: [\r\n              {\r\n                prop: "phone",\r\n                label: "电话",\r\n                width: 130,\r\n              },\r\n              {\r\n                prop: "email",\r\n                label: "邮箱",\r\n                width: 180,\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            prop: "joindate",\r\n            label: "入职日期",\r\n            width: 120,\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                format: "yyyy-mm-dd",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "在职", value: "在职" },\r\n                  { label: "离职", value: "离职" },\r\n                  { label: "休假", value: "休假" },\r\n                ],\r\n              },\r\n            },\r\n            render: (h, { row }) => {\r\n              const cellvalue = row.status;\r\n              const statusmap = {\r\n                在职: { color: "#67c23a", text: "在职" },\r\n                离职: { color: "#f56c6c", text: "离职" },\r\n                休假: { color: "#e6a23c", text: "休假" },\r\n              };\r\n              const status = statusmap[cellvalue] || {\r\n                color: "#909399",\r\n                text: cellvalue,\r\n              };\r\n              return h(\r\n                "span",\r\n                {\r\n                  style: {\r\n                    color: `${status.color}`,\r\n                    fontweight: "bold",\r\n                  },\r\n                },\r\n                `${status.text}`\r\n              );\r\n            },\r\n          },\r\n        ],\r\n        // 启用行编辑\r\n        editconfig: {\r\n          mode: "row",\r\n        },\r\n        // 工具栏配置\r\n        toolbar: {\r\n          handles: [\r\n            {\r\n              label: "新增员工",\r\n              type: "primary",\r\n              icon: "el-icon-plus",\r\n              onclick: () => {\r\n                this.addemployee();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        // 模拟复杂的树形数据\r\n        const mockdata = this.generatemockdata();\r\n        this.data = mockdata;\r\n        this.total = mockdata.length;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    generatemockdata() {\r\n      const departments = ["技术部", "产品部", "运营部", "人事部"];\r\n      const positions = {\r\n        技术部: ["前端工程师", "后端工程师", "测试工程师", "架构师"],\r\n        产品部: ["产品经理", "ui设计师", "交互设计师", "产品助理"],\r\n        运营部: ["运营专员", "市场推广", "数据分析师", "客服专员"],\r\n        人事部: ["hr专员", "招聘专员", "培训师", "薪酬专员"],\r\n      };\r\n      const levels = ["初级", "中级", "高级", "专家"];\r\n      const genders = ["男", "女"];\r\n      const statuses = ["在职", "在职", "在职", "休假", "离职"];\r\n\r\n      const data = [];\r\n      let id = 1;\r\n\r\n      departments.foreach((dept, deptindex) => {\r\n        // 部门主管\r\n        const manager = {\r\n          id: id++,\r\n          department: dept,\r\n          name: `${dept}主管`,\r\n          gender: genders[math.floor(math.random() * genders.length)],\r\n          age: 35 + math.floor(math.random() * 10),\r\n          position: "部门主管",\r\n          level: "专家",\r\n          basesalary: 15000 + math.floor(math.random() * 10000),\r\n          bonus: 3000 + math.floor(math.random() * 5000),\r\n          phone: `138${string(math.floor(math.random() * 100000000)).padstart(\r\n            8,\r\n            "0"\r\n          )}`,\r\n          email: `manager${deptindex}@company.com`,\r\n          joindate: "2020-01-15",\r\n          status: "在职",\r\n          children: [],\r\n        };\r\n\r\n        // 部门员工\r\n        const employeecount = 3 + math.floor(math.random() * 4);\r\n        for (let i = 0; i < employeecount; i++) {\r\n          const employee = {\r\n            id: id++,\r\n            department: dept,\r\n            name: `员工${id - 1}`,\r\n            gender: genders[math.floor(math.random() * genders.length)],\r\n            age: 22 + math.floor(math.random() * 15),\r\n            position:\r\n              positions[dept][\r\n                math.floor(math.random() * positions[dept].length)\r\n              ],\r\n            level: levels[math.floor(math.random() * levels.length)],\r\n            basesalary: 8000 + math.floor(math.random() * 12000),\r\n            bonus: math.floor(math.random() * 3000),\r\n            phone: `139${string(math.floor(math.random() * 100000000)).padstart(\r\n              8,\r\n              "0"\r\n            )}`,\r\n            email: `employee${id - 1}@company.com`,\r\n            joindate: `202${math.floor(math.random() * 4)}-${string(\r\n              math.floor(math.random() * 12) + 1\r\n            ).padstart(2, "0")}-${string(\r\n              math.floor(math.random() * 28) + 1\r\n            ).padstart(2, "0")}`,\r\n            status: statuses[math.floor(math.random() * statuses.length)],\r\n          };\r\n          manager.children.push(employee);\r\n        }\r\n\r\n        data.push(manager);\r\n      });\r\n\r\n      return data;\r\n    },\r\n\r\n    addemployee() {\r\n      const newemployee = {\r\n        id: date.now(),\r\n        department: "技术部",\r\n        name: "新员工",\r\n        gender: "男",\r\n        age: 25,\r\n        position: "前端工程师",\r\n        level: "初级",\r\n        basesalary: 8000,\r\n        bonus: 0,\r\n        phone: "",\r\n        email: "",\r\n        joindate: new date().toisostring().split("t")[0],\r\n        status: "在职",\r\n      };\r\n      this.data.unshift(newemployee);\r\n      this.$message.success("新增员工成功");\r\n    },\r\n\r\n    // 获取扁平化数据（将树形结构展开，并添加层级信息）\r\n    getflatdatawithlevel(data) {\r\n      const result = [];\r\n\r\n      const flatten = (items, level = 0) => {\r\n        items.foreach((item) => {\r\n          const flatitem = { ...item, _level: level };\r\n          result.push(flatitem);\r\n          if (item.children && item.children.length > 0) {\r\n            flatten(item.children, level + 1);\r\n          }\r\n        });\r\n      };\r\n\r\n      flatten(data);\r\n      return result;\r\n    },\r\n\r\n    // el-table原生单元格合并方法 - 只合并部门列且相同层级\r\n    objectspanmethod({ row, column, rowindex, columnindex }) {\r\n      // 只处理部门列的合并\r\n      if (column.property !== "department") {\r\n        return [1, 1];\r\n      }\r\n\r\n      // 获取扁平化的数据（包含层级信息）\r\n      const flatdata = this.getflatdatawithlevel(this.data);\r\n      const currentrowdata = flatdata[rowindex];\r\n\r\n      if (!currentrowdata) return [1, 1];\r\n\r\n      const currentvalue = currentrowdata.department;\r\n      const currentlevel = currentrowdata._level;\r\n      let rowspan = 1;\r\n\r\n      // 向下查找相同层级且相同部门的行\r\n      for (let i = rowindex + 1; i < flatdata.length; i++) {\r\n        const nextrow = flatdata[i];\r\n        // 只在相同层级中合并\r\n        if (\r\n          nextrow._level === currentlevel &&\r\n          nextrow.department === currentvalue\r\n        ) {\r\n          rowspan++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查是否是合并区域的第一行（向上查找相同层级和部门）\r\n      let isfirstrow = true;\r\n      for (let i = rowindex - 1; i >= 0; i--) {\r\n        const prevrow = flatdata[i];\r\n        if (\r\n          prevrow._level === currentlevel &&\r\n          prevrow.department === currentvalue\r\n        ) {\r\n          isfirstrow = false;\r\n          break;\r\n        } else if (prevrow._level !== currentlevel) {\r\n          // 不同层级则停止查找\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isfirstrow) {\r\n        return [rowspan, 1];\r\n      } else {\r\n        return [0, 0]; // 隐藏重复的单元格\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  font-size: 12px;\r\n}\r\n\r\n.el-table th {\r\n  background-color: #f5f7fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-table .cell {\r\n  padding: 0 8px;\r\n}\r\n\r\n/* 区域选择样式优化 */\r\n::v-deep .area-selection-overlay {\r\n  border: 2px solid #409eff;\r\n  background-color: rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n::v-deep .area-selection-copy {\r\n  border: 2px dashed #67c23a;\r\n  background-color: rgba(103, 194, 58, 0.1);\r\n}\r\n</style>\r\n\n\n\n# api\n\n\n# areaselection 配置项\n\n参数                    类型         默认值      说明\noperationtype         string     \'edit\'   \'all\':对所有数据进行操作，包括只读单元格,\'edit\': 仅对可编辑的单元格进行操作（默认）\ncopy                  boolean    true     是否启用复制功能\npaste                 boolean    true     是否启用粘贴功能\ncut                   boolean    true     是否启用剪切功能\nfill                  boolean    true     是否启用智能填充功能\nfillcustomlists       array      []       自定义填充列表，用于智能填充的自定义序列\nundo                  boolean    true     是否启用撤销功能\nredo                  boolean    true     是否启用重做功能\nselection             boolean    true     是否启用区域选择功能\nallselection          boolean    true     是否启用全选功能（ctrl+a）\nrowselection          boolean    true     是否启用行选择（点击序号列）\ncolumnselection       boolean    true     是否启用列选择（点击表头）\nautoscroll            boolean    true     是否启用自动滚动\nscrollspeed           number     10       自动滚动速度（像素/帧）\nmaxundosteps          number     50       最大撤销步数\ngetcelltextmethod     function   -        自定义获取单元格文本的方法（复制文本）\ngetcellvaluemethod    function   -        自定义获取单元格值的方法（表格间值复制、获取值）\ngetclearvaluemethod   function   -        自定义返回清空值的方法\nsetcellvaluemethod    function   -        自定义设置单元格值的方法，可通过type参数判断操作类型\ntextmappingconfig     object     -        文本映射配置对象（外部excel文本黏贴时映射到表格的值）\ncustommapping         function   -        自定义文本映射函数 （外部excel文本黏贴时映射到表格的值）',charsets:{cjk:!0}},{title:"基本配置",frontmatter:{},regularPath:"/guide/crud/baseUse.html",relativePath:"guide/crud/baseUse.md",key:"v-5bc01633",path:"/guide/crud/baseUse.html",headers:[{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:11},{level:2,title:"API支持",slug:"api支持",normalizedTitle:"api支持",charIndex:2466},{level:2,title:"分页配置",slug:"分页配置",normalizedTitle:"分页配置",charIndex:5322},{level:2,title:"操作栏",slug:"操作栏",normalizedTitle:"操作栏",charIndex:8097},{level:2,title:"工具栏",slug:"工具栏",normalizedTitle:"工具栏",charIndex:9788},{level:2,title:"表格操作列",slug:"表格操作列",normalizedTitle:"表格操作列",charIndex:11521},{level:2,title:"表格高度与嵌套表头",slug:"表格高度与嵌套表头",normalizedTitle:"表格高度与嵌套表头",charIndex:13322},{level:2,title:"索引列、展开列",slug:"索引列、展开列",normalizedTitle:"索引列、展开列",charIndex:15481},{level:2,title:"组件加载",slug:"组件加载",normalizedTitle:"组件加载",charIndex:16717},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:2466},{level:3,title:"Table 属性",slug:"table-属性",normalizedTitle:"table 属性",charIndex:18474},{level:3,title:"Options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:18775},{level:3,title:"handleRow 操作行配置",slug:"handlerow-操作行配置",normalizedTitle:"handlerow 操作行配置",charIndex:21045},{level:3,title:"action 操作列配置",slug:"action-操作列配置",normalizedTitle:"action 操作列配置",charIndex:21414},{level:3,title:"toolbar 工具栏配置",slug:"toolbar-工具栏配置",normalizedTitle:"toolbar 工具栏配置",charIndex:22262},{level:3,title:"pagination 分页配置",slug:"pagination-分页配置",normalizedTitle:"pagination 分页配置",charIndex:22771},{level:3,title:"empty 空状态配置",slug:"empty-空状态配置",normalizedTitle:"empty 空状态配置",charIndex:23478},{level:3,title:"renderColumns 列渲染配置",slug:"rendercolumns-列渲染配置",normalizedTitle:"rendercolumns 列渲染配置",charIndex:23633},{level:3,title:"props 字段名配置",slug:"props-字段名配置",normalizedTitle:"props 字段名配置",charIndex:25920},{level:2,title:"插槽",slug:"插槽",normalizedTitle:"插槽",charIndex:8185}],headersStr:"基本使用 API支持 分页配置 操作栏 工具栏 表格操作列 表格高度与嵌套表头 索引列、展开列 组件加载 API Table 属性 Options 配置 handleRow 操作行配置 action 操作列配置 toolbar 工具栏配置 pagination 分页配置 empty 空状态配置 renderColumns 列渲染配置 props 字段名配置 插槽",content:'# 基本配置\n\n\n# 基本使用\n\n * @getList：触发外部获取表格数据的事件\n   \n * init：设置为 true 时，组件挂载后会立即触发 @getList 事件\n   \n * data：表格数据绑定值，支持 .sync 修饰符进行双向绑定\n   \n * total：数据总条数，用于分页显示\n   \n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading="loading"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      searchForm: {},\r\n      options: {\r\n        init: true,\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await this.listApi(this.searchForm);\r\n      this.loading = false;\r\n      this.data = data;\r\n      this.total = total;\r\n    },\r\n    listApi() {\r\n      // 模拟请求api\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            code: 200,\r\n            data: [\r\n              {\r\n                createTime: "2018-06-02 12:28:47",\r\n                createUser: 94,\r\n                id: 56,\r\n                idNumber: "8",\r\n                name: "识间华中张认",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updateTime: "2018-09-08 16:33:19",\r\n                updateUser: 58,\r\n                username: "石洋",\r\n              },\r\n              {\r\n                createTime: "2018-06-02 12:28:47",\r\n                createUser: 94,\r\n                id: 57,\r\n                idNumber: "8",\r\n                name: "识间华中张认1",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updateTime: "2018-09-08 16:33:19",\r\n                updateUser: 58,\r\n                username: "石洋11",\r\n              },\r\n            ],\r\n            total: 2,\r\n          });\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API支持\n\n组件支持通过配置内置API来自动处理数据获取和删除操作：\n\n * listApi：配置列表数据获取API函数，组件会自动调用并处理响应数据\n   \n * deleteApi：配置删除操作API函数，在删除操作时自动调用\n   \n * 可以通过配置data或者@getList事件来获取调用api后的列表数据\n\n<template>\r\n  <sc-crud :options="options" :data="data" @getList="getUserList"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        init: true,\r\n        // 配置内置API\r\n        listApi: this.getUserListApi,\r\n        deleteApi: this.deleteUserApi,\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n        selection: true,\r\n        editConfig: {\r\n          // 批量删除按钮配置\r\n          batchDelete: {\r\n            confirm: (rows) =>\r\n              `是否删除序号为${rows\r\n                .map((row) => row.$index + 1)\r\n                .join(",")}的数据？`, // 删除提示\r\n          },\r\n          delete: {\r\n            confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\r\n          },\r\n        },\r\n      },\r\n      data: [],\r\n    };\r\n  },\r\n  methods: {\r\n    // 列表API - 组件会自动调用此方法获取数据\r\n    async getUserListApi(searchParams) {\r\n      console.log("调用列表API，搜索参数：", searchParams);\r\n\r\n      // 模拟API请求\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          const mockData = {\r\n            data: [\r\n              {\r\n                id: 1,\r\n                name: "张三",\r\n                username: "zhangsan",\r\n                gender: "男",\r\n                age: 25,\r\n                phone: "13800138001",\r\n              },\r\n              {\r\n                id: 2,\r\n                name: "李四",\r\n                username: "lisi",\r\n                gender: "女",\r\n                age: 28,\r\n                phone: "13800138002",\r\n              },\r\n              {\r\n                id: 3,\r\n                name: "王五",\r\n                username: "wangwu",\r\n                gender: "男",\r\n                age: 30,\r\n                phone: "13800138003",\r\n              },\r\n            ],\r\n            total: 3,\r\n          };\r\n\r\n          // 支持多种响应格式\r\n          resolve(mockData);\r\n        }, 1000);\r\n      });\r\n    },\r\n\r\n    // 删除API - 组件在删除操作时会自动调用此方法\r\n    async deleteUserApi(userId) {\r\n      console.log("调用删除API，用户ID：", userId);\r\n\r\n      // 模拟删除API请求\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          // 模拟删除成功\r\n          console.log(`用户 ${userId} 删除成功`);\r\n          resolve();\r\n          // 删除成功后组件会自动刷新列表\r\n        }, 500);\r\n      });\r\n    },\r\n    getUserList(params) {\r\n      console.log("调用获取列表API，参数：", params);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n/* 样式可以根据需要添加 */\r\n</style>\r\n\n\n\n# 分页配置\n\n * 搜索参数 search 中的分页参数：\n   * pageNum：当前页码\n     \n   * pageSize：每页条数\n     \n * pagination：分页组件配置（传递对象，支持 el-pagination 的所有属性和事件）\n   \n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data.sync="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {\r\n        pageNum: 2, // 当前页码\r\n        pageSize: 20, // 每页条数\r\n      },\r\n      options: {\r\n        init: true,\r\n        pagination: {\r\n          // 自定义pagination\r\n          background: false,\r\n          on: {\r\n            "size-change": (v) => {\r\n              this.$message.success("size-change");\r\n            },\r\n          },\r\n        },\r\n        props: {\r\n          pageNum: "pageNum", // 分页参数\r\n          pageSize: "pageSize", // 分页参数\r\n          listResult: "data", // 列表数据\r\n          total: "total", // 列表条数\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      const { data, total } = await this.listApi(this.searchForm);\r\n      this.data = data;\r\n      this.total = total;\r\n    },\r\n    listApi() {\r\n      // 模拟请求api\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            code: 200,\r\n            data: [\r\n              {\r\n                createTime: "2018-06-02 12:28:47",\r\n                createUser: 94,\r\n                id: 56,\r\n                idNumber: "8",\r\n                name: "识间华中张认",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updateTime: "2018-09-08 16:33:19",\r\n                updateUser: 58,\r\n                username: "石洋",\r\n              },\r\n              {\r\n                createTime: "2018-06-02 12:28:47",\r\n                createUser: 94,\r\n                id: 57,\r\n                idNumber: "8",\r\n                name: "识间华中张认1",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updateTime: "2018-09-08 16:33:19",\r\n                updateUser: 58,\r\n                username: "石洋11",\r\n              },\r\n            ],\r\n            total: 100,\r\n          });\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 操作栏\n\nhandleRow 配置用于设置表格顶部的操作按钮栏，支持以下功能：\n\n\n * 添加新增、批量删除等常用按钮\n   \n * 自定义按钮及其事件处理\n   \n * 通过插槽自定义操作栏内容\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n      <template #handleRow-left="{ size }">\r\n        <el-button :size="size">left 插槽</el-button>\r\n      </template>\r\n      <template #handleRow-right="{ size }">\r\n        <el-button :size="size">right 插槽</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        rowEdit: true,\r\n        handleRow: {\r\n          add: {\r\n            label: "自定义弹窗新增",\r\n          }, // 自定义弹窗新增按钮\r\n          batchDelete: {\r\n            label: "自定义批量删除",\r\n          }, // 自定义批量删除按钮\r\n          rowAdd: {\r\n            label: "定义行新增",\r\n          }, // 自定义行新增按钮\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 工具栏\n\ntoolbar 配置用于设置表格右上角的工具按钮栏，支持以下功能：\n\n\n * 添加搜索、刷新、重置等常用按钮\n   \n * 自定义按钮及其事件处理\n   \n * 通过插槽自定义工具栏内容\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n      <template #toolbar-left="config">\r\n        \x3c!-- ctx为crud组件实例 --\x3e\r\n        <el-button :size="config.size">toolbar插槽</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        // 不需要自定义内置按钮时可以简写为数组 toolbar: [{label: "自定义按钮"...}]\r\n        toolbar: {\r\n          search: {\r\n            label: "自定义搜索显隐", // 自定义 hover 提示词\r\n          },\r\n          reset: {\r\n            label: "自定义重置", // 自定义 hover 提示词\r\n          },\r\n          zoom: {\r\n            label: "自定义最大化", // 自定义 hover 提示词\r\n          },\r\n          column: {\r\n            label: "自定义列设置", // 自定义 hover 提示词\r\n          },\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 表格操作列\n\n * action：操作列配置对象，设置为 false 则隐藏操作列\n   \n * action.width、action.minWidth：设置为 auto 时，会根据内容自动计算列宽度\n   \n * action.handles：自定义操作按钮列表\n   \n * action.delete、action.view、action.edit：内置操作按钮配置\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        handleRow: [\r\n          {\r\n            label: "操作列隐藏",\r\n            type: "primary",\r\n            onClick: () => {\r\n              this.options.action = false;\r\n            },\r\n          },\r\n        ],\r\n        action: {\r\n          width: "auto", // auto: 自动计算宽度\r\n          calcWidth: 20, // 增加的宽度，默认20\r\n          handles: [\r\n            {\r\n              icon: "el-icon-search",\r\n              type: "primary",\r\n              onClick: () => {\r\n                console.log("search");\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 表格高度与嵌套表头\n\n * height、maxHeight：设置表格高度，当设置为 auto 时，会自适应窗口高度\n   \n * calcHeight：当高度为 auto 时，可设置需要减去的底部高度值\n   \n * children：用于配置多级嵌套表头，在 renderColumns 中的列配置中使用\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        height: "300px", // 设置为`auto`，会自适应窗口高度，配合calcHeight参数去调节范围\r\n        calcHeight: 0, // 值为应减去的底部高度\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            label: "信息",\r\n            children: [\r\n              // 表头子级\r\n              {\r\n                prop: "username",\r\n                label: "姓名",\r\n                search: {\r\n                  comp: {\r\n                    name: "el-date-picker",\r\n                  },\r\n                },\r\n                children: [\r\n                  {\r\n                    prop: "username",\r\n                    label: "姓名",\r\n                    search: {\r\n                      comp: {\r\n                        name: "el-date-picker",\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    prop: "gender",\r\n                    label: "性别",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                prop: "gender",\r\n                label: "性别",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    const dataRepeated = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      dataRepeated.push(Object.assign({}, this.data[0]));\r\n    }\r\n    this.data = dataRepeated;\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 索引列、展开列\n\n * index：索引列配置，可以是布尔值或对象，当为对象时可自定义属性（如标签文本、宽度等）\n   \n * expand：展开列配置，可以是布尔值或对象，用于实现行展开功能\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        index: {\r\n          label: "序号",\r\n        },\r\n        expand: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 组件加载\n\n * loading：控制表格加载状态，支持 .sync 修饰符进行双向绑定\n   \n * disableLoading：设置为 true 时禁用组件内部自动控制加载状态的功能\n   \n * loadingText：自定义加载过程中显示的文本内容\n   \n * loadingSpinner：自定义加载图标的类名\n   \n * loadingBackground：自定义加载遮罩层的背景颜色\n   \n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="loading = !loading"\r\n      >切换loading</el-button\r\n    >\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      :loading.sync="loading"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      searchForm: {},\r\n      options: {\r\n        loadingText: "拼命加载中...",\r\n        loadingSpinner: "el-icon-loading",\r\n        loadingBackground: "rgba(0, 0, 0, 0.8)",\r\n        disableLoading: true, //禁用组件内部控制加载状态\r\n        handleRow: [\r\n          {\r\n            label: "组件按钮",\r\n            type: "primary",\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# Table 属性\n\n属性名       说明                      类型        可选值   默认值\ndata      表格数据绑定值，支持 .sync 双向绑定   Array     —     —\nsearch    搜索表单绑定值，支持 .sync 双向绑定   Object    —     {pageNum: 1, pageSize: 10}\nloading   加载绑定值，支持 .sync 双向绑定     Boolean   —     —\noptions   表格配置                    Object    —     —\n\n\n# Options 配置\n\n> 配置方式说明：以下所有配置项既可以集中放在 options 对象中（如 :options="{title: \'表格标题\', size: \'small\'}"），也可以直接配置在表格根属性上（如 :title="\'表格标题\'" :size="\'small\'"）。两种方式效果相同，可根据实际需求选择更便于维护的方式。\n\n属性名               说明                    类型                 可选值                  默认值\ntitle             表格标题                  String             -                    -\nsize              表格尺寸                  String             small/medium/large   small\ndisabled          是否禁用                  Boolean            true/false           false\nlistApi           列表数据获取API函数           Function           -                    -\ndeleteApi         删除数据API函数             Function           -                    -\ninit              初始化是否立即调用getList      Boolean            true/false           false\nheight            表格高度, 配置auto 自动计算高度   String             auto/-               -\ncalcHeight        自动计算高度的偏差值            Number             -                    0\ngap               表格外间距                 Number/String      -                    20\nuniqueId          是否本地生成唯一标识            Boolean            true/false           false\nvalueKey          唯一值的Key               String             -                    "id"\nlocalPagination   启用前端本地分页              Boolean            true/false           false\nhandleRow         操作行配置                 Object             -                    {}\naction            操作列配置                 Object             -                    {}\ntoolbar           工具栏配置                 Object             -                    {}\npagination        分页配置                  Object             -                    {}\nempty             空状态配置                 Object             -                    {}\nrenderColumns     表格列配置                 Array / Function   []/()=>[]            -\nprops             字段名配置                 Object             -                    {}\nselection         选择列配置                 Boolean/Object     -                    {width: 50, align: "center"}\nindex             序号列配置                 Boolean/Object     -                    {label: "序号", width: 50, align: "center"}\nexpand            展开列配置                 Boolean/Object     -                    {width: 50, align: "center"}\nstateKey          组件级存储键名               String             -                    -\n\n\n# handleRow 操作行配置\n\n属性名           说明         类型               可选值          默认值\nshow          是否显示       Boolean          true/false   -\nadd           弹窗新增按钮     Boolean/Object   -            {}\nrowAdd        行新增按钮      Boolean/Object   -            {}\nbatchDelete   批量删除按钮配置   Boolean/Object   -            {}\nhandles       自定义按钮列表    Array            -            []\n\n\n# action 操作列配置\n\n属性名            说明        类型        可选值                 默认值\nshow           是否显示      Boolean   true/false          -\nprop           列属性名      String    -                   "action"\nwidth          列宽度       String    auto/-              "auto"\nlabel          列标题       String    -                   "操作"\nalign          对齐方式      String    left/center/right   "center"\ncalcWidth      宽度计算偏差    Number    -                   20\ndefaultWidth   默认宽度      Number    -                   50\nhandles        自定义按钮列表   Array     -                   []\ndelete         删除按钮配置    Object    -                   {}\nview           查看按钮配置    Object    -                   {}\nedit           编辑按钮配置    Object    -                   {}\nrowEdit        行编辑按钮配置   Object    -                   {}\nhandles        自定义按钮列表   Array     -                   []\n\n\n# toolbar 工具栏配置\n\n属性名         说明         类型        可选值          默认值\nshow        是否显示       Boolean   true/false   -\nhandles     自定义按钮列表    Array     -            []\nbatchEdit   批量编辑按钮配置   Object    -            {}\nzoom        缩放按钮配置     Object    -            {}\nsearch      搜索按钮配置     Object    -            {}\nrefresh     刷新按钮配置     Object    -            {}\nreset       重置按钮配置     Object    -            {}\ncolumn      列设置按钮配置    Object    -            {}\nhandles     自定义按钮列表    Array     -            []\n\n\n# pagination 分页配置\n\n属性名               说明               类型        可选值                 默认值\nshow              是否显示             Boolean   true/false          -\nalign             对齐方式             String    left/center/right   "right"\npageSizes         每页显示个数选择器的选项设置   Array     -                   [10, 20, 30, 50, 100, 200]\nlayout            组件布局             String    -                   "total, sizes, prev, pager, next, jumper"\nbackground        是否为分页按钮添加背景色     Boolean   true/false          true\npagerCount        页码按钮的数量          Number    -                   5\nlocalPagination   是否本地分页           Boolean   true/false          false\nmemorizeScroll    分页滚动位置记忆         Boolean   true/false          true\n\n\n# empty 空状态配置\n\n属性名     说明     类型       可选值   默认值\nimage   图片地址   String   -     ""\nsize    图片大小   Number   -     100\ntext    显示文本   String   -     "暂无数据"\n\n\n# renderColumns 列渲染配置\n\n属性名            说明                类型                        可选值                 默认值\nhiddenList     是否只隐藏列表           Boolean                   true/false          -\nchildren       嵌套列子列             Array                     -                   -\nspanProp       是否合并单元格           Boolean/String            true/false/[prop]   -\nspanMethod     合并单元格方法           Function                  -                   -\nisEdit         是否允许编辑            Boolean/Function          -                   -\nsummary        汇总方式              String/Function           sum/avg/max/min     -\nadd            新增时的配置            Object                    -                   {}\nedit           编辑时的配置            Object                    -                   {}\nview           查看时的配置            Object                    -                   {}\nform           通用表单配置            Object                    -                   {}\nsearch         搜索配置              Object                    -                   {}\nsearchHeader   搜索表头配置            Object                    -                   {}\nprop           字段名               String                    -                   必填，用于数据绑定\nlabel          列标题               String                    -                   显示在表头的文本\nshow           是否显示              Boolean/Function          true                支持函数形式，可动态控制显示\nhidden         是否隐藏              Boolean/Function          false               支持函数形式，可动态控制隐藏\nrequired       是否必填              Boolean/Object/Function   false               支持函数形式，可动态控制必填状态\nrules          验证规则配置            Array/Function                                支持函数形式\ndict           字典配置，支持字符串或对象形式   Object/String                                 支持函数形式\nformatData     响应式数据格式化          Object                                        \nposition       是否开启位置渲染          Boolean                   false               用于特殊的位置渲染场景\nformatter      格式化函数             Function                  -                   用于格式化数据，返回处理后的文本内容\nhtml           是否开启HTML渲染        Boolean                   false               配合 formatter 使用，可以渲染 HTML 字符串\nrender         渲染函数              Function                  -                   (h, scope) => {}\ncomp           组件配置              Object/Function           -                   用于配置组件的各种行为和属性\n\n\n# props 字段名配置\n\n属性名        说明        类型       可选值   默认值\npageNum    页码字段名     String   -     "pageNum"\npageSize   每页数量字段名   String   -     "pageSize"\ntotal      总数量字段名    String   -     "total"\ndata       数据字段名     String   -     "data"\n\n\n# 插槽\n\n名称                    说明\n[prop]                列渲染\n[prop]-header         列渲染表头\n[prop]-form           列渲染表单状态\n[prop]-view           列渲染查看状态\n[prop]-edit           列渲染编辑状态\n[prop]-add            列渲染新增状态\n[prop]-search         列渲染搜索状态\n[prop]-searchHeader   列渲染搜索表头状态\nempty                 空状态\ntitle                 标题(覆盖原有内容)\ntitle-left            标题左侧\ntitle-right           标题右侧\ntitle-top             标题顶部\ntitle-bottom          标题底部\nhandleRow             操作行(覆盖原有内容)\nhandleRow-left        操作行左侧\nhandleRow-right       操作行右侧\nhandleRow-top         操作行顶部\nhandleRow-bottom      操作行底部\ntoolbar               工具栏(覆盖原有内容)\ntoolbar-left          工具栏左侧\ntoolbar-right         工具栏右侧\ntoolbar-top           工具栏顶部\ntoolbar-bottom        工具栏底部\npagination            分页(覆盖原有内容)\npagination-left       分页左侧\npagination-right      分页右侧\npagination-top        分页顶部\npagination-bottom     分页底部',normalizedContent:'# 基本配置\n\n\n# 基本使用\n\n * @getlist：触发外部获取表格数据的事件\n   \n * init：设置为 true 时，组件挂载后会立即触发 @getlist 事件\n   \n * data：表格数据绑定值，支持 .sync 修饰符进行双向绑定\n   \n * total：数据总条数，用于分页显示\n   \n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading="loading"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      searchform: {},\r\n      options: {\r\n        init: true,\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await this.listapi(this.searchform);\r\n      this.loading = false;\r\n      this.data = data;\r\n      this.total = total;\r\n    },\r\n    listapi() {\r\n      // 模拟请求api\r\n      return new promise((resolve, reject) => {\r\n        settimeout(() => {\r\n          resolve({\r\n            code: 200,\r\n            data: [\r\n              {\r\n                createtime: "2018-06-02 12:28:47",\r\n                createuser: 94,\r\n                id: 56,\r\n                idnumber: "8",\r\n                name: "识间华中张认",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updatetime: "2018-09-08 16:33:19",\r\n                updateuser: 58,\r\n                username: "石洋",\r\n              },\r\n              {\r\n                createtime: "2018-06-02 12:28:47",\r\n                createuser: 94,\r\n                id: 57,\r\n                idnumber: "8",\r\n                name: "识间华中张认1",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updatetime: "2018-09-08 16:33:19",\r\n                updateuser: 58,\r\n                username: "石洋11",\r\n              },\r\n            ],\r\n            total: 2,\r\n          });\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api支持\n\n组件支持通过配置内置api来自动处理数据获取和删除操作：\n\n * listapi：配置列表数据获取api函数，组件会自动调用并处理响应数据\n   \n * deleteapi：配置删除操作api函数，在删除操作时自动调用\n   \n * 可以通过配置data或者@getlist事件来获取调用api后的列表数据\n\n<template>\r\n  <sc-crud :options="options" :data="data" @getlist="getuserlist"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        init: true,\r\n        // 配置内置api\r\n        listapi: this.getuserlistapi,\r\n        deleteapi: this.deleteuserapi,\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n        selection: true,\r\n        editconfig: {\r\n          // 批量删除按钮配置\r\n          batchdelete: {\r\n            confirm: (rows) =>\r\n              `是否删除序号为${rows\r\n                .map((row) => row.$index + 1)\r\n                .join(",")}的数据？`, // 删除提示\r\n          },\r\n          delete: {\r\n            confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\r\n          },\r\n        },\r\n      },\r\n      data: [],\r\n    };\r\n  },\r\n  methods: {\r\n    // 列表api - 组件会自动调用此方法获取数据\r\n    async getuserlistapi(searchparams) {\r\n      console.log("调用列表api，搜索参数：", searchparams);\r\n\r\n      // 模拟api请求\r\n      return new promise((resolve) => {\r\n        settimeout(() => {\r\n          const mockdata = {\r\n            data: [\r\n              {\r\n                id: 1,\r\n                name: "张三",\r\n                username: "zhangsan",\r\n                gender: "男",\r\n                age: 25,\r\n                phone: "13800138001",\r\n              },\r\n              {\r\n                id: 2,\r\n                name: "李四",\r\n                username: "lisi",\r\n                gender: "女",\r\n                age: 28,\r\n                phone: "13800138002",\r\n              },\r\n              {\r\n                id: 3,\r\n                name: "王五",\r\n                username: "wangwu",\r\n                gender: "男",\r\n                age: 30,\r\n                phone: "13800138003",\r\n              },\r\n            ],\r\n            total: 3,\r\n          };\r\n\r\n          // 支持多种响应格式\r\n          resolve(mockdata);\r\n        }, 1000);\r\n      });\r\n    },\r\n\r\n    // 删除api - 组件在删除操作时会自动调用此方法\r\n    async deleteuserapi(userid) {\r\n      console.log("调用删除api，用户id：", userid);\r\n\r\n      // 模拟删除api请求\r\n      return new promise((resolve, reject) => {\r\n        settimeout(() => {\r\n          // 模拟删除成功\r\n          console.log(`用户 ${userid} 删除成功`);\r\n          resolve();\r\n          // 删除成功后组件会自动刷新列表\r\n        }, 500);\r\n      });\r\n    },\r\n    getuserlist(params) {\r\n      console.log("调用获取列表api，参数：", params);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n/* 样式可以根据需要添加 */\r\n</style>\r\n\n\n\n# 分页配置\n\n * 搜索参数 search 中的分页参数：\n   * pagenum：当前页码\n     \n   * pagesize：每页条数\n     \n * pagination：分页组件配置（传递对象，支持 el-pagination 的所有属性和事件）\n   \n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data.sync="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {\r\n        pagenum: 2, // 当前页码\r\n        pagesize: 20, // 每页条数\r\n      },\r\n      options: {\r\n        init: true,\r\n        pagination: {\r\n          // 自定义pagination\r\n          background: false,\r\n          on: {\r\n            "size-change": (v) => {\r\n              this.$message.success("size-change");\r\n            },\r\n          },\r\n        },\r\n        props: {\r\n          pagenum: "pagenum", // 分页参数\r\n          pagesize: "pagesize", // 分页参数\r\n          listresult: "data", // 列表数据\r\n          total: "total", // 列表条数\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      const { data, total } = await this.listapi(this.searchform);\r\n      this.data = data;\r\n      this.total = total;\r\n    },\r\n    listapi() {\r\n      // 模拟请求api\r\n      return new promise((resolve, reject) => {\r\n        settimeout(() => {\r\n          resolve({\r\n            code: 200,\r\n            data: [\r\n              {\r\n                createtime: "2018-06-02 12:28:47",\r\n                createuser: 94,\r\n                id: 56,\r\n                idnumber: "8",\r\n                name: "识间华中张认",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updatetime: "2018-09-08 16:33:19",\r\n                updateuser: 58,\r\n                username: "石洋",\r\n              },\r\n              {\r\n                createtime: "2018-06-02 12:28:47",\r\n                createuser: 94,\r\n                id: 57,\r\n                idnumber: "8",\r\n                name: "识间华中张认1",\r\n                password: "sed laboris",\r\n                phone: "18157668675",\r\n                gender: "男",\r\n                age: 20,\r\n                status: 35,\r\n                updatetime: "2018-09-08 16:33:19",\r\n                updateuser: 58,\r\n                username: "石洋11",\r\n              },\r\n            ],\r\n            total: 100,\r\n          });\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 操作栏\n\nhandlerow 配置用于设置表格顶部的操作按钮栏，支持以下功能：\n\n\n * 添加新增、批量删除等常用按钮\n   \n * 自定义按钮及其事件处理\n   \n * 通过插槽自定义操作栏内容\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n      <template #handlerow-left="{ size }">\r\n        <el-button :size="size">left 插槽</el-button>\r\n      </template>\r\n      <template #handlerow-right="{ size }">\r\n        <el-button :size="size">right 插槽</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        rowedit: true,\r\n        handlerow: {\r\n          add: {\r\n            label: "自定义弹窗新增",\r\n          }, // 自定义弹窗新增按钮\r\n          batchdelete: {\r\n            label: "自定义批量删除",\r\n          }, // 自定义批量删除按钮\r\n          rowadd: {\r\n            label: "定义行新增",\r\n          }, // 自定义行新增按钮\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 工具栏\n\ntoolbar 配置用于设置表格右上角的工具按钮栏，支持以下功能：\n\n\n * 添加搜索、刷新、重置等常用按钮\n   \n * 自定义按钮及其事件处理\n   \n * 通过插槽自定义工具栏内容\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n      <template #toolbar-left="config">\r\n        \x3c!-- ctx为crud组件实例 --\x3e\r\n        <el-button :size="config.size">toolbar插槽</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        // 不需要自定义内置按钮时可以简写为数组 toolbar: [{label: "自定义按钮"...}]\r\n        toolbar: {\r\n          search: {\r\n            label: "自定义搜索显隐", // 自定义 hover 提示词\r\n          },\r\n          reset: {\r\n            label: "自定义重置", // 自定义 hover 提示词\r\n          },\r\n          zoom: {\r\n            label: "自定义最大化", // 自定义 hover 提示词\r\n          },\r\n          column: {\r\n            label: "自定义列设置", // 自定义 hover 提示词\r\n          },\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 表格操作列\n\n * action：操作列配置对象，设置为 false 则隐藏操作列\n   \n * action.width、action.minwidth：设置为 auto 时，会根据内容自动计算列宽度\n   \n * action.handles：自定义操作按钮列表\n   \n * action.delete、action.view、action.edit：内置操作按钮配置\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        handlerow: [\r\n          {\r\n            label: "操作列隐藏",\r\n            type: "primary",\r\n            onclick: () => {\r\n              this.options.action = false;\r\n            },\r\n          },\r\n        ],\r\n        action: {\r\n          width: "auto", // auto: 自动计算宽度\r\n          calcwidth: 20, // 增加的宽度，默认20\r\n          handles: [\r\n            {\r\n              icon: "el-icon-search",\r\n              type: "primary",\r\n              onclick: () => {\r\n                console.log("search");\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 表格高度与嵌套表头\n\n * height、maxheight：设置表格高度，当设置为 auto 时，会自适应窗口高度\n   \n * calcheight：当高度为 auto 时，可设置需要减去的底部高度值\n   \n * children：用于配置多级嵌套表头，在 rendercolumns 中的列配置中使用\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        height: "300px", // 设置为`auto`，会自适应窗口高度，配合calcheight参数去调节范围\r\n        calcheight: 0, // 值为应减去的底部高度\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            label: "信息",\r\n            children: [\r\n              // 表头子级\r\n              {\r\n                prop: "username",\r\n                label: "姓名",\r\n                search: {\r\n                  comp: {\r\n                    name: "el-date-picker",\r\n                  },\r\n                },\r\n                children: [\r\n                  {\r\n                    prop: "username",\r\n                    label: "姓名",\r\n                    search: {\r\n                      comp: {\r\n                        name: "el-date-picker",\r\n                      },\r\n                    },\r\n                  },\r\n                  {\r\n                    prop: "gender",\r\n                    label: "性别",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                prop: "gender",\r\n                label: "性别",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    const datarepeated = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      datarepeated.push(object.assign({}, this.data[0]));\r\n    }\r\n    this.data = datarepeated;\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 索引列、展开列\n\n * index：索引列配置，可以是布尔值或对象，当为对象时可自定义属性（如标签文本、宽度等）\n   \n * expand：展开列配置，可以是布尔值或对象，用于实现行展开功能\n   \n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        index: {\r\n          label: "序号",\r\n        },\r\n        expand: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 组件加载\n\n * loading：控制表格加载状态，支持 .sync 修饰符进行双向绑定\n   \n * disableloading：设置为 true 时禁用组件内部自动控制加载状态的功能\n   \n * loadingtext：自定义加载过程中显示的文本内容\n   \n * loadingspinner：自定义加载图标的类名\n   \n * loadingbackground：自定义加载遮罩层的背景颜色\n   \n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="loading = !loading"\r\n      >切换loading</el-button\r\n    >\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      :loading.sync="loading"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      searchform: {},\r\n      options: {\r\n        loadingtext: "拼命加载中...",\r\n        loadingspinner: "el-icon-loading",\r\n        loadingbackground: "rgba(0, 0, 0, 0.8)",\r\n        disableloading: true, //禁用组件内部控制加载状态\r\n        handlerow: [\r\n          {\r\n            label: "组件按钮",\r\n            type: "primary",\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          { prop: "name", label: "昵称", search: true },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n            search: {\r\n              name: "el-date-picker",\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# table 属性\n\n属性名       说明                      类型        可选值   默认值\ndata      表格数据绑定值，支持 .sync 双向绑定   array     —     —\nsearch    搜索表单绑定值，支持 .sync 双向绑定   object    —     {pagenum: 1, pagesize: 10}\nloading   加载绑定值，支持 .sync 双向绑定     boolean   —     —\noptions   表格配置                    object    —     —\n\n\n# options 配置\n\n> 配置方式说明：以下所有配置项既可以集中放在 options 对象中（如 :options="{title: \'表格标题\', size: \'small\'}"），也可以直接配置在表格根属性上（如 :title="\'表格标题\'" :size="\'small\'"）。两种方式效果相同，可根据实际需求选择更便于维护的方式。\n\n属性名               说明                    类型                 可选值                  默认值\ntitle             表格标题                  string             -                    -\nsize              表格尺寸                  string             small/medium/large   small\ndisabled          是否禁用                  boolean            true/false           false\nlistapi           列表数据获取api函数           function           -                    -\ndeleteapi         删除数据api函数             function           -                    -\ninit              初始化是否立即调用getlist      boolean            true/false           false\nheight            表格高度, 配置auto 自动计算高度   string             auto/-               -\ncalcheight        自动计算高度的偏差值            number             -                    0\ngap               表格外间距                 number/string      -                    20\nuniqueid          是否本地生成唯一标识            boolean            true/false           false\nvaluekey          唯一值的key               string             -                    "id"\nlocalpagination   启用前端本地分页              boolean            true/false           false\nhandlerow         操作行配置                 object             -                    {}\naction            操作列配置                 object             -                    {}\ntoolbar           工具栏配置                 object             -                    {}\npagination        分页配置                  object             -                    {}\nempty             空状态配置                 object             -                    {}\nrendercolumns     表格列配置                 array / function   []/()=>[]            -\nprops             字段名配置                 object             -                    {}\nselection         选择列配置                 boolean/object     -                    {width: 50, align: "center"}\nindex             序号列配置                 boolean/object     -                    {label: "序号", width: 50, align: "center"}\nexpand            展开列配置                 boolean/object     -                    {width: 50, align: "center"}\nstatekey          组件级存储键名               string             -                    -\n\n\n# handlerow 操作行配置\n\n属性名           说明         类型               可选值          默认值\nshow          是否显示       boolean          true/false   -\nadd           弹窗新增按钮     boolean/object   -            {}\nrowadd        行新增按钮      boolean/object   -            {}\nbatchdelete   批量删除按钮配置   boolean/object   -            {}\nhandles       自定义按钮列表    array            -            []\n\n\n# action 操作列配置\n\n属性名            说明        类型        可选值                 默认值\nshow           是否显示      boolean   true/false          -\nprop           列属性名      string    -                   "action"\nwidth          列宽度       string    auto/-              "auto"\nlabel          列标题       string    -                   "操作"\nalign          对齐方式      string    left/center/right   "center"\ncalcwidth      宽度计算偏差    number    -                   20\ndefaultwidth   默认宽度      number    -                   50\nhandles        自定义按钮列表   array     -                   []\ndelete         删除按钮配置    object    -                   {}\nview           查看按钮配置    object    -                   {}\nedit           编辑按钮配置    object    -                   {}\nrowedit        行编辑按钮配置   object    -                   {}\nhandles        自定义按钮列表   array     -                   []\n\n\n# toolbar 工具栏配置\n\n属性名         说明         类型        可选值          默认值\nshow        是否显示       boolean   true/false   -\nhandles     自定义按钮列表    array     -            []\nbatchedit   批量编辑按钮配置   object    -            {}\nzoom        缩放按钮配置     object    -            {}\nsearch      搜索按钮配置     object    -            {}\nrefresh     刷新按钮配置     object    -            {}\nreset       重置按钮配置     object    -            {}\ncolumn      列设置按钮配置    object    -            {}\nhandles     自定义按钮列表    array     -            []\n\n\n# pagination 分页配置\n\n属性名               说明               类型        可选值                 默认值\nshow              是否显示             boolean   true/false          -\nalign             对齐方式             string    left/center/right   "right"\npagesizes         每页显示个数选择器的选项设置   array     -                   [10, 20, 30, 50, 100, 200]\nlayout            组件布局             string    -                   "total, sizes, prev, pager, next, jumper"\nbackground        是否为分页按钮添加背景色     boolean   true/false          true\npagercount        页码按钮的数量          number    -                   5\nlocalpagination   是否本地分页           boolean   true/false          false\nmemorizescroll    分页滚动位置记忆         boolean   true/false          true\n\n\n# empty 空状态配置\n\n属性名     说明     类型       可选值   默认值\nimage   图片地址   string   -     ""\nsize    图片大小   number   -     100\ntext    显示文本   string   -     "暂无数据"\n\n\n# rendercolumns 列渲染配置\n\n属性名            说明                类型                        可选值                 默认值\nhiddenlist     是否只隐藏列表           boolean                   true/false          -\nchildren       嵌套列子列             array                     -                   -\nspanprop       是否合并单元格           boolean/string            true/false/[prop]   -\nspanmethod     合并单元格方法           function                  -                   -\nisedit         是否允许编辑            boolean/function          -                   -\nsummary        汇总方式              string/function           sum/avg/max/min     -\nadd            新增时的配置            object                    -                   {}\nedit           编辑时的配置            object                    -                   {}\nview           查看时的配置            object                    -                   {}\nform           通用表单配置            object                    -                   {}\nsearch         搜索配置              object                    -                   {}\nsearchheader   搜索表头配置            object                    -                   {}\nprop           字段名               string                    -                   必填，用于数据绑定\nlabel          列标题               string                    -                   显示在表头的文本\nshow           是否显示              boolean/function          true                支持函数形式，可动态控制显示\nhidden         是否隐藏              boolean/function          false               支持函数形式，可动态控制隐藏\nrequired       是否必填              boolean/object/function   false               支持函数形式，可动态控制必填状态\nrules          验证规则配置            array/function                                支持函数形式\ndict           字典配置，支持字符串或对象形式   object/string                                 支持函数形式\nformatdata     响应式数据格式化          object                                        \nposition       是否开启位置渲染          boolean                   false               用于特殊的位置渲染场景\nformatter      格式化函数             function                  -                   用于格式化数据，返回处理后的文本内容\nhtml           是否开启html渲染        boolean                   false               配合 formatter 使用，可以渲染 html 字符串\nrender         渲染函数              function                  -                   (h, scope) => {}\ncomp           组件配置              object/function           -                   用于配置组件的各种行为和属性\n\n\n# props 字段名配置\n\n属性名        说明        类型       可选值   默认值\npagenum    页码字段名     string   -     "pagenum"\npagesize   每页数量字段名   string   -     "pagesize"\ntotal      总数量字段名    string   -     "total"\ndata       数据字段名     string   -     "data"\n\n\n# 插槽\n\n名称                    说明\n[prop]                列渲染\n[prop]-header         列渲染表头\n[prop]-form           列渲染表单状态\n[prop]-view           列渲染查看状态\n[prop]-edit           列渲染编辑状态\n[prop]-add            列渲染新增状态\n[prop]-search         列渲染搜索状态\n[prop]-searchheader   列渲染搜索表头状态\nempty                 空状态\ntitle                 标题(覆盖原有内容)\ntitle-left            标题左侧\ntitle-right           标题右侧\ntitle-top             标题顶部\ntitle-bottom          标题底部\nhandlerow             操作行(覆盖原有内容)\nhandlerow-left        操作行左侧\nhandlerow-right       操作行右侧\nhandlerow-top         操作行顶部\nhandlerow-bottom      操作行底部\ntoolbar               工具栏(覆盖原有内容)\ntoolbar-left          工具栏左侧\ntoolbar-right         工具栏右侧\ntoolbar-top           工具栏顶部\ntoolbar-bottom        工具栏底部\npagination            分页(覆盖原有内容)\npagination-left       分页左侧\npagination-right      分页右侧\npagination-top        分页顶部\npagination-bottom     分页底部',charsets:{cjk:!0}},{title:"多层级数据排序",frontmatter:{},regularPath:"/guide/crud/dataSort.html",relativePath:"guide/crud/dataSort.md",key:"v-4fd4e8f7",path:"/guide/crud/dataSort.html",headers:[{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:93},{level:2,title:"排序配置",slug:"排序配置",normalizedTitle:"排序配置",charIndex:3281},{level:2,title:"自定义排序规则",slug:"自定义排序规则",normalizedTitle:"自定义排序规则",charIndex:3438},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:3608},{level:3,title:"Options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:3616},{level:3,title:"排序参数",slug:"排序参数",normalizedTitle:"排序参数",charIndex:3719},{level:3,title:"Methods 方法",slug:"methods-方法",normalizedTitle:"methods 方法",charIndex:3970}],headersStr:"基础用法 排序配置 自定义排序规则 API Options 配置 排序参数 Methods 方法",content:'# 多层级数据排序\n\n表格支持按照多个字段进行层级排序，即在上一层级排序的基础上，对相同值的数据进行下一层级的排序。常用于具有明确层级关系的数据展示,如省市区地址、组织架构等。\n\n\n# 基础用法\n\n通过配置 sortProps 数组会将值相同的数据集合在一起 ，后续可以指定参数order及sortMethod配置数据的具体排序。数组中的字段顺序决定了排序的优先级。\n\n<template>\r\n  <div>\r\n    <sc-crud title="原始数据" :options="rawOptions" :data="rawData" />\r\n\r\n    <sc-crud title="排序后数据" :options="options" :data="tableData" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const columns = [\r\n      {\r\n        prop: "province",\r\n        label: "省份",\r\n        render: (h, { row }) => {\r\n          // 使用不同颜色区分不同省份\r\n          const colors = {\r\n            浙江: "#409EFF", // 蓝色\r\n            江苏: "#67C23A", // 绿色\r\n          };\r\n          return (\r\n            <span\r\n              style={{\r\n                color: colors[row.province] || "#909399",\r\n                fontWeight: "bold",\r\n              }}\r\n            >\r\n              {row.province}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        prop: "city",\r\n        label: "城市",\r\n      },\r\n      { prop: "amount", label: "交易金额" },\r\n      { prop: "company", label: "公司名称" },\r\n    ];\r\n    return {\r\n      rawOptions: {\r\n        renderColumns: columns,\r\n      },\r\n      options: {\r\n        // 按省份、城市、交易金额的顺序进行多层级排序\r\n        sortProps: [\r\n          "province",\r\n          "city",\r\n          {\r\n            prop: "amount",\r\n            sortMethod: (a, b) => {\r\n              return b.amount - a.amount;\r\n            },\r\n          },\r\n        ],\r\n        renderColumns: columns,\r\n      },\r\n      tableData: [],\r\n      rawData: [\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 3000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 9000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 4000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 3000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "网易",\r\n          amount: 8000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "苏州",\r\n          company: "苏州工业园",\r\n          amount: 4000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "大华",\r\n          amount: 6000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "杉杉股份",\r\n          amount: 5000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 1000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南瑞集团",\r\n          amount: 7000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "阿里巴巴",\r\n          amount: 10000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 2000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 3000,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.tableData = [...this.rawData];\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 排序配置\n\n对象数组：为每个字段指定详细的排序规则\n\noptions: {\n  sortProps: [\n    "province",\n    { prop: "city", order: "desc", nullsPosition: "first" },\n    "amount",\n  ],\n},\n\n\n\n# 自定义排序规则\n\n通过配置 sortMethod 来自定义排序逻辑。\n\noptions: {\n  sortProps: [\n    "province",\n    "city",\n    { prop: "amount", sortMethod: (a, b) => b.amount - a.amount },\n  ],\n},\n\n\n\n# API\n\n\n# Options 配置\n\n参数          说明               类型         默认值\nsortProps   排序字段数组(按优先级排序)   string[]   []\n\n\n# 排序参数\n\n参数              说明        类型                 默认值\nprop            排序字段名称    string             -\norder           排序方向      \'asc\' / \'desc\'     \nnullsPosition   空值位置      \'first\' / \'last\'   \'last\'\nsortMethod      自定义排序方法   Function(a, b)     -\n\n\n# Methods 方法\n\n方法名          说明                              参数              返回值\nsortedData   排序方法，默认使用 sortProps 配置并排序所有数据   (data, props)   -',normalizedContent:'# 多层级数据排序\n\n表格支持按照多个字段进行层级排序，即在上一层级排序的基础上，对相同值的数据进行下一层级的排序。常用于具有明确层级关系的数据展示,如省市区地址、组织架构等。\n\n\n# 基础用法\n\n通过配置 sortprops 数组会将值相同的数据集合在一起 ，后续可以指定参数order及sortmethod配置数据的具体排序。数组中的字段顺序决定了排序的优先级。\n\n<template>\r\n  <div>\r\n    <sc-crud title="原始数据" :options="rawoptions" :data="rawdata" />\r\n\r\n    <sc-crud title="排序后数据" :options="options" :data="tabledata" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const columns = [\r\n      {\r\n        prop: "province",\r\n        label: "省份",\r\n        render: (h, { row }) => {\r\n          // 使用不同颜色区分不同省份\r\n          const colors = {\r\n            浙江: "#409eff", // 蓝色\r\n            江苏: "#67c23a", // 绿色\r\n          };\r\n          return (\r\n            <span\r\n              style={{\r\n                color: colors[row.province] || "#909399",\r\n                fontweight: "bold",\r\n              }}\r\n            >\r\n              {row.province}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        prop: "city",\r\n        label: "城市",\r\n      },\r\n      { prop: "amount", label: "交易金额" },\r\n      { prop: "company", label: "公司名称" },\r\n    ];\r\n    return {\r\n      rawoptions: {\r\n        rendercolumns: columns,\r\n      },\r\n      options: {\r\n        // 按省份、城市、交易金额的顺序进行多层级排序\r\n        sortprops: [\r\n          "province",\r\n          "city",\r\n          {\r\n            prop: "amount",\r\n            sortmethod: (a, b) => {\r\n              return b.amount - a.amount;\r\n            },\r\n          },\r\n        ],\r\n        rendercolumns: columns,\r\n      },\r\n      tabledata: [],\r\n      rawdata: [\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 3000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 9000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 4000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南京银行",\r\n          amount: 3000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "网易",\r\n          amount: 8000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "苏州",\r\n          company: "苏州工业园",\r\n          amount: 4000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "大华",\r\n          amount: 6000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "杉杉股份",\r\n          amount: 5000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 1000,\r\n        },\r\n        {\r\n          province: "江苏",\r\n          city: "南京",\r\n          company: "南瑞集团",\r\n          amount: 7000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          company: "阿里巴巴",\r\n          amount: 10000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 2000,\r\n        },\r\n        {\r\n          province: "浙江",\r\n          city: "宁波",\r\n          company: "宁波中百",\r\n          amount: 3000,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.tabledata = [...this.rawdata];\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 排序配置\n\n对象数组：为每个字段指定详细的排序规则\n\noptions: {\n  sortprops: [\n    "province",\n    { prop: "city", order: "desc", nullsposition: "first" },\n    "amount",\n  ],\n},\n\n\n\n# 自定义排序规则\n\n通过配置 sortmethod 来自定义排序逻辑。\n\noptions: {\n  sortprops: [\n    "province",\n    "city",\n    { prop: "amount", sortmethod: (a, b) => b.amount - a.amount },\n  ],\n},\n\n\n\n# api\n\n\n# options 配置\n\n参数          说明               类型         默认值\nsortprops   排序字段数组(按优先级排序)   string[]   []\n\n\n# 排序参数\n\n参数              说明        类型                 默认值\nprop            排序字段名称    string             -\norder           排序方向      \'asc\' / \'desc\'     \nnullsposition   空值位置      \'first\' / \'last\'   \'last\'\nsortmethod      自定义排序方法   function(a, b)     -\n\n\n# methods 方法\n\n方法名          说明                              参数              返回值\nsorteddata   排序方法，默认使用 sortprops 配置并排序所有数据   (data, props)   -',charsets:{cjk:!0}},{title:"自定义表格内容",frontmatter:{},regularPath:"/guide/crud/renderType.html",relativePath:"guide/crud/renderType.md",key:"v-1de771f7",path:"/guide/crud/renderType.html",headersStr:null,content:"# 自定义表格内容\n\n详情参考通用配置-自定义组件内容",normalizedContent:"# 自定义表格内容\n\n详情参考通用配置-自定义组件内容",charsets:{cjk:!0}},{title:"扩展功能",frontmatter:{},regularPath:"/guide/crud/expandFunction.html",relativePath:"guide/crud/expandFunction.md",key:"v-51203eb7",path:"/guide/crud/expandFunction.html",headers:[{level:2,title:"持久化拖动列宽",slug:"持久化拖动列宽",normalizedTitle:"持久化拖动列宽",charIndex:11},{level:2,title:"持久化每页条数",slug:"持久化每页条数",normalizedTitle:"持久化每页条数",charIndex:88},{level:2,title:"分页滚动位置记忆",slug:"分页滚动位置记忆",normalizedTitle:"分页滚动位置记忆",charIndex:160},{level:2,title:"设置组件级存储",slug:"设置组件级存储",normalizedTitle:"设置组件级存储",charIndex:296}],headersStr:"持久化拖动列宽 持久化每页条数 分页滚动位置记忆 设置组件级存储",content:"# 扩展功能\n\n\n# 持久化拖动列宽\n\npersistWidth:true 开启后，用户拖动表格列宽的设置会自动保存到本地缓存，下次进入页面时自动恢复，无需重复调整。\n\n\n# 持久化每页条数\n\npersistPageSize:true 开启后，分页组件支持将用户选择的每页条数自动保存，下次进入页面时自动恢复。\n\n\n# 分页滚动位置记忆\n\n切换分页时自动记忆并恢复每页的滚动位置(临时储存)，提升用户体验。\n\nconst crudOptions = {\n  pagination: {\n    memorizeScroll: true, // 开启分页滚动位置记忆\n  },\n};\n\n\n\n# 设置组件级存储\n\nstateKey 配置项用于设置组件级存储的键名，默认为路由级存储。\n\n组件级存储: 每个组件都有自己的存储，互不干扰。\n路由级存储: 多个组件共享同一个配置对象，会相互干扰。\n\nconst crudOptions = {\n  stateKey: 'myCrudState',\n};\n",normalizedContent:"# 扩展功能\n\n\n# 持久化拖动列宽\n\npersistwidth:true 开启后，用户拖动表格列宽的设置会自动保存到本地缓存，下次进入页面时自动恢复，无需重复调整。\n\n\n# 持久化每页条数\n\npersistpagesize:true 开启后，分页组件支持将用户选择的每页条数自动保存，下次进入页面时自动恢复。\n\n\n# 分页滚动位置记忆\n\n切换分页时自动记忆并恢复每页的滚动位置(临时储存)，提升用户体验。\n\nconst crudoptions = {\n  pagination: {\n    memorizescroll: true, // 开启分页滚动位置记忆\n  },\n};\n\n\n\n# 设置组件级存储\n\nstatekey 配置项用于设置组件级存储的键名，默认为路由级存储。\n\n组件级存储: 每个组件都有自己的存储，互不干扰。\n路由级存储: 多个组件共享同一个配置对象，会相互干扰。\n\nconst crudoptions = {\n  statekey: 'mycrudstate',\n};\n",charsets:{cjk:!0}},{title:"动态列",frontmatter:{},regularPath:"/guide/crud/genDynamicColumns.html",relativePath:"guide/crud/genDynamicColumns.md",key:"v-4fefb0fa",path:"/guide/crud/genDynamicColumns.html",headers:[{level:2,title:"单层级动态列",slug:"单层级动态列",normalizedTitle:"单层级动态列",charIndex:67},{level:2,title:"多层级动态列",slug:"多层级动态列",normalizedTitle:"多层级动态列",charIndex:1174},{level:2,title:"多层级动态列和固定子列",slug:"多层级动态列和固定子列",normalizedTitle:"多层级动态列和固定子列",charIndex:2752},{level:2,title:"数据格式与转换",slug:"数据格式与转换",normalizedTitle:"数据格式与转换",charIndex:5969},{level:2,title:"options 配置项",slug:"options-配置项",normalizedTitle:"options 配置项",charIndex:7737},{level:2,title:"dynamicConfig 配置项",slug:"dynamicconfig-配置项",normalizedTitle:"dynamicconfig 配置项",charIndex:7972}],headersStr:"单层级动态列 多层级动态列 多层级动态列和固定子列 数据格式与转换 options 配置项 dynamicConfig 配置项",content:'# 动态列\n\n通过 dynamicConfig 配置可以快速生成多层级的动态列，常用于通过复杂树级数据data生成多层级列。\n\n\n# 单层级动态列\n\npath 设置树级数据路径，prop 设置树级数据唯一标识。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicConfig: [\r\n          {\r\n            path: "firstChildren",\r\n            prop: "id",\r\n            label: "name",\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          { prop: "materialCode", label: "编码" },\r\n          { prop: "materialName", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getDynamicData(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 多层级动态列\n\n通过 columnConfig 可以设置列渲染配置，可以获取树级路径 path 和树级数据 source 。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicConfig: [\r\n          {\r\n            path: "firstChildren",\r\n            prop: "id",\r\n            label: "name",\r\n            columnConfig: (path, source) => {\r\n              return {\r\n                render: () => <div>空</div>,\r\n              };\r\n            },\r\n          },\r\n          {\r\n            path: "secondChildren",\r\n            prop: "sort",\r\n            label: (item) => `第${item.sort}轮报价`,\r\n            columnConfig: (path, source) => {\r\n              return {\r\n                prop: `${path}.productUnitPrice`,\r\n              };\r\n            },\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          { prop: "materialCode", label: "编码" },\r\n          { prop: "materialName", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getDynamicData(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 多层级动态列和固定子列\n\n通过 source[row.$index] 可以获取到当前行的层级数据。\n支持响应式修改数据。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicConfig: [\r\n          {\r\n            path: "firstChildren",\r\n            prop: "id",\r\n            label: "name",\r\n            columnConfig: (path, source) => {\r\n              return {\r\n                render: () => <div>空</div>,\r\n              };\r\n            },\r\n          },\r\n          {\r\n            path: "secondChildren",\r\n            prop: "sort",\r\n            label: (item) => `第${item.sort}轮报价`,\r\n            columnConfig: (path, source) => {\r\n              return {\r\n                children: [\r\n                  {\r\n                    label: "入选",\r\n                    prop: `${path}.choose`,\r\n                    comp: {\r\n                      name: "el-checkbox",\r\n                      trueLabel: "Y",\r\n                      falseLabel: "N",\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "单价",\r\n                    prop: `${path}.productUnitPrice`,\r\n                    render: (h, { row }) => {\r\n                      return (\r\n                        <el-input\r\n                          v-model={source[row.$index].productUnitPrice}\r\n                        />\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "跟价",\r\n                    prop: `${path}.priceFollow`,\r\n                    render: (h, { row }) => {\r\n                      if (!source[row.$index].priceFollow) return;\r\n                      const isFollow = source[row.$index].priceFollow === "Y";\r\n                      return (\r\n                        <span\r\n                          style={{ color: isFollow ? "#67C23A" : "#F56C6C" }}\r\n                        >\r\n                          {isFollow ? "是" : "否"}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "降幅比例",\r\n                    prop: `${path}.pricePercentageChange`,\r\n                    formatter: (row) =>\r\n                      source[row.$index].pricePercentageChange &&\r\n                      source[row.$index].pricePercentageChange * 100 + "%",\r\n                  },\r\n                ],\r\n              };\r\n            },\r\n          },\r\n        ],\r\n        renderColumns: [\r\n          { prop: "materialCode", label: "编码" },\r\n          { prop: "materialName", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getDynamicData(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 数据格式与转换\n\n// 数据结构为: \nconst data = [\n  {\n    materialCode: `M001`,\n    materialName: `产品1`,\n    materialSpec: `规格 1`,\n    quantityGradeName: "A",\n    firstChildren: [\n      // 第一层级\n      {\n        id: "S001", // 第一层级唯一标识\n        name: "供应商1", // 第一层级名称\n        secondChildren: [\n          // 第二层级\n          {\n            sort: 1, // 第二层级唯一标识\n            productUnitPrice: 100,\n            priceFollow: "Y",\n            priceDifference: -10,\n            pricePercentageChange: 0.1,\n          },\n          {\n            sort: 2,\n            productUnitPrice: 90,\n            priceFollow: "N",\n            priceDifference: 5,\n            pricePercentageChange: 0.05,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n// 转换后的数据结构为:\n\nconst data = [\n  {\n    materialCode: `M001`,\n    materialName: `产品1`,\n    materialSpec: `规格 1`,\n    quantityGradeName: "A",\n    S001: {  // 第一层级唯一标识\n      id: "S001",\n      name: "供应商1",\n      1: { // 第二层级唯一标识\n        sort: 1,\n        productUnitPrice: 100,\n        priceFollow: "Y",\n        priceDifference: -10,\n        pricePercentageChange: 0.1,\n      },\n      2: {\n        sort: 2,\n        productUnitPrice: 90,\n        priceFollow: "N",\n        priceDifference: 5,\n        pricePercentageChange: 0.05,\n      },\n    },\n    firstChildren: [ // 原来的数据依旧保留\n      {\n        id: "S001",\n        name: "供应商1",\n        secondChildren: [\n          {\n            sort: 1,\n            productUnitPrice: 100,\n            priceFollow: "Y",\n            priceDifference: -10,\n            pricePercentageChange: 0.1,\n          },\n          {\n            sort: 2,\n            productUnitPrice: 90,\n            priceFollow: "N",\n            priceDifference: 5,\n            pricePercentageChange: 0.05,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n\n\n# options 配置项\n\n参数                      说明                                   类型       默认值\ndynamicInsertPosition   动态列插入位置，可接收普通列的 prop 值，或者 index 索引   String   -\ndynamicConfig           动态列配置数组                              Array    -\n\n\n# dynamicConfig 配置项\n\n参数             说明           类型                      默认值\npath           当前层级数据路径     String                  -\nprop           当前层级唯一标识     String                  -\nlabel          当前层级标题字段     String/Function(item)   -\ncolumnConfig   设置真正的渲染列配置   Function(path, item)    -',normalizedContent:'# 动态列\n\n通过 dynamicconfig 配置可以快速生成多层级的动态列，常用于通过复杂树级数据data生成多层级列。\n\n\n# 单层级动态列\n\npath 设置树级数据路径，prop 设置树级数据唯一标识。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicconfig: [\r\n          {\r\n            path: "firstchildren",\r\n            prop: "id",\r\n            label: "name",\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          { prop: "materialcode", label: "编码" },\r\n          { prop: "materialname", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getdynamicdata(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 多层级动态列\n\n通过 columnconfig 可以设置列渲染配置，可以获取树级路径 path 和树级数据 source 。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicconfig: [\r\n          {\r\n            path: "firstchildren",\r\n            prop: "id",\r\n            label: "name",\r\n            columnconfig: (path, source) => {\r\n              return {\r\n                render: () => <div>空</div>,\r\n              };\r\n            },\r\n          },\r\n          {\r\n            path: "secondchildren",\r\n            prop: "sort",\r\n            label: (item) => `第${item.sort}轮报价`,\r\n            columnconfig: (path, source) => {\r\n              return {\r\n                prop: `${path}.productunitprice`,\r\n              };\r\n            },\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          { prop: "materialcode", label: "编码" },\r\n          { prop: "materialname", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getdynamicdata(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 多层级动态列和固定子列\n\n通过 source[row.$index] 可以获取到当前行的层级数据。\n支持响应式修改数据。\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        init: true,\r\n        dynamicconfig: [\r\n          {\r\n            path: "firstchildren",\r\n            prop: "id",\r\n            label: "name",\r\n            columnconfig: (path, source) => {\r\n              return {\r\n                render: () => <div>空</div>,\r\n              };\r\n            },\r\n          },\r\n          {\r\n            path: "secondchildren",\r\n            prop: "sort",\r\n            label: (item) => `第${item.sort}轮报价`,\r\n            columnconfig: (path, source) => {\r\n              return {\r\n                children: [\r\n                  {\r\n                    label: "入选",\r\n                    prop: `${path}.choose`,\r\n                    comp: {\r\n                      name: "el-checkbox",\r\n                      truelabel: "y",\r\n                      falselabel: "n",\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "单价",\r\n                    prop: `${path}.productunitprice`,\r\n                    render: (h, { row }) => {\r\n                      return (\r\n                        <el-input\r\n                          v-model={source[row.$index].productunitprice}\r\n                        />\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "跟价",\r\n                    prop: `${path}.pricefollow`,\r\n                    render: (h, { row }) => {\r\n                      if (!source[row.$index].pricefollow) return;\r\n                      const isfollow = source[row.$index].pricefollow === "y";\r\n                      return (\r\n                        <span\r\n                          style={{ color: isfollow ? "#67c23a" : "#f56c6c" }}\r\n                        >\r\n                          {isfollow ? "是" : "否"}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    label: "降幅比例",\r\n                    prop: `${path}.pricepercentagechange`,\r\n                    formatter: (row) =>\r\n                      source[row.$index].pricepercentagechange &&\r\n                      source[row.$index].pricepercentagechange * 100 + "%",\r\n                  },\r\n                ],\r\n              };\r\n            },\r\n          },\r\n        ],\r\n        rendercolumns: [\r\n          { prop: "materialcode", label: "编码" },\r\n          { prop: "materialname", label: "名称" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getdynamicdata(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 数据格式与转换\n\n// 数据结构为: \nconst data = [\n  {\n    materialcode: `m001`,\n    materialname: `产品1`,\n    materialspec: `规格 1`,\n    quantitygradename: "a",\n    firstchildren: [\n      // 第一层级\n      {\n        id: "s001", // 第一层级唯一标识\n        name: "供应商1", // 第一层级名称\n        secondchildren: [\n          // 第二层级\n          {\n            sort: 1, // 第二层级唯一标识\n            productunitprice: 100,\n            pricefollow: "y",\n            pricedifference: -10,\n            pricepercentagechange: 0.1,\n          },\n          {\n            sort: 2,\n            productunitprice: 90,\n            pricefollow: "n",\n            pricedifference: 5,\n            pricepercentagechange: 0.05,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n// 转换后的数据结构为:\n\nconst data = [\n  {\n    materialcode: `m001`,\n    materialname: `产品1`,\n    materialspec: `规格 1`,\n    quantitygradename: "a",\n    s001: {  // 第一层级唯一标识\n      id: "s001",\n      name: "供应商1",\n      1: { // 第二层级唯一标识\n        sort: 1,\n        productunitprice: 100,\n        pricefollow: "y",\n        pricedifference: -10,\n        pricepercentagechange: 0.1,\n      },\n      2: {\n        sort: 2,\n        productunitprice: 90,\n        pricefollow: "n",\n        pricedifference: 5,\n        pricepercentagechange: 0.05,\n      },\n    },\n    firstchildren: [ // 原来的数据依旧保留\n      {\n        id: "s001",\n        name: "供应商1",\n        secondchildren: [\n          {\n            sort: 1,\n            productunitprice: 100,\n            pricefollow: "y",\n            pricedifference: -10,\n            pricepercentagechange: 0.1,\n          },\n          {\n            sort: 2,\n            productunitprice: 90,\n            pricefollow: "n",\n            pricedifference: 5,\n            pricepercentagechange: 0.05,\n          },\n        ],\n      },\n    ],\n  },\n];\n\n\n\n# options 配置项\n\n参数                      说明                                   类型       默认值\ndynamicinsertposition   动态列插入位置，可接收普通列的 prop 值，或者 index 索引   string   -\ndynamicconfig           动态列配置数组                              array    -\n\n\n# dynamicconfig 配置项\n\n参数             说明           类型                      默认值\npath           当前层级数据路径     string                  -\nprop           当前层级唯一标识     string                  -\nlabel          当前层级标题字段     string/function(item)   -\ncolumnconfig   设置真正的渲染列配置   function(path, item)    -',charsets:{cjk:!0}},{title:"性能优化",frontmatter:{},regularPath:"/guide/crud/optimize.html",relativePath:"guide/crud/optimize.md",key:"v-907dced2",path:"/guide/crud/optimize.html",headers:[{level:2,title:"延迟渲染",slug:"延迟渲染",normalizedTitle:"延迟渲染",charIndex:11},{level:2,title:"虚拟列表",slug:"虚拟列表",normalizedTitle:"虚拟列表",charIndex:3382},{level:2,title:"与同数据量原生el-table对比",slug:"与同数据量原生el-table对比",normalizedTitle:"与同数据量原生el-table对比",charIndex:6733},{level:2,title:"树级数据本地自动懒加载",slug:"树级数据本地自动懒加载",normalizedTitle:"树级数据本地自动懒加载",charIndex:10526}],headersStr:"延迟渲染 虚拟列表 与同数据量原生el-table对比 树级数据本地自动懒加载",content:'# 性能优化\n\n\n# 延迟渲染\n\ndelayRender:true 开启延迟渲染功能，可以提升大数据量复杂表格的渲染性能。开启后，可见区域之外的数据会先渲染成空白单元格，只有当滚动到可见区域时才会渲染真实内容，兼容性较强。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handleRender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="delayRender"\r\n      active-text="延迟渲染"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="renderTime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ renderTime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showTable"\r\n      :loading.sync="loading"\r\n      :options="crudOptions"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showTable: false,\r\n      renderTime: null,\r\n      startTime: 0,\r\n      delayRender: true, // 控制开关\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editConfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudOptions() {\r\n      return {\r\n        ...this.options,\r\n        delayRender: this.delayRender,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handleRender() {\r\n      this.renderTime = null;\r\n      this.showTable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nextTick();\r\n      this.showTable = true;\r\n    },\r\n    async getList() {\r\n      this.loading = true;\r\n      this.startTime = performance.now();\r\n      try {\r\n        const { data, total } = await mockApi.getList(10000)({\r\n          pageNum: 1,\r\n          pageSize: 500,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n        // 统计首屏渲染耗时\r\n        this.$nextTick(() => {\r\n          this.renderTime = Math.round(performance.now() - this.startTime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 虚拟列表\n\nvirtualized:true 开启虚拟列表功能，性能更强但是兼容性较差，复杂表格容易出现样式错乱。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handleRender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="virtualized"\r\n      active-text="虚拟渲染"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="renderTime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ renderTime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showTable"\r\n      :loading.sync="loading"\r\n      :options="crudOptions"\r\n      :data="data"\r\n      :total="total"\r\n      :item-size="40"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showTable: false,\r\n      renderTime: null,\r\n      startTime: 0,\r\n      virtualized: true, // 控制开关\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editConfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudOptions() {\r\n      return {\r\n        ...this.options,\r\n        virtualized: this.virtualized,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handleRender() {\r\n      this.renderTime = null;\r\n      this.showTable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nextTick();\r\n      this.showTable = true;\r\n    },\r\n    async getList() {\r\n      this.loading = true;\r\n      this.startTime = performance.now();\r\n      try {\r\n        const { data, total } = await mockApi.getList(10000)({\r\n          pageNum: 1,\r\n          pageSize: 500,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n        // 统计首屏渲染耗时\r\n        this.$nextTick(() => {\r\n          this.renderTime = Math.round(performance.now() - this.startTime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 与同数据量原生el-table对比\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handleRender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <span v-if="renderTime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ renderTime }}</b> ms\r\n    </span>\r\n    <el-table\r\n      v-if="showTable"\r\n      :data="data"\r\n      border\r\n      height="500px"\r\n      style="width: 100%; margin-top: 16px;"\r\n      ref="elTable"\r\n    >\r\n      <el-table-column prop="name" label="姓名">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.name" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="gender" label="性别">\r\n        <template #default="scope">\r\n          <el-select\r\n            v-model="scope.row.gender"\r\n            size="small"\r\n            style="width: 100%;"\r\n          >\r\n            <el-option label="男" value="男" />\r\n            <el-option label="女" value="女" />\r\n          </el-select>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="age" label="年龄">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.age" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="birthday" label="生日">\r\n        <template #default="scope">\r\n          <el-date-picker\r\n            v-model="scope.row.birthday"\r\n            type="date"\r\n            value-format="yyyy-MM-dd"\r\n            size="small"\r\n            style="width: 100%;"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="city" label="城市" width="100">\r\n        <template #default="scope">\r\n          <el-select v-model="scope.row.city" size="small" style="width: 100%;">\r\n            <el-option label="北京" value="北京" />\r\n            <el-option label="上海" value="上海" />\r\n            <el-option label="广州" value="广州" />\r\n            <el-option label="深圳" value="深圳" />\r\n          </el-select>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="email" label="邮箱">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.email" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="status" label="状态">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.status" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="score" label="分数">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.score" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showTable: false,\r\n      renderTime: null,\r\n      startTime: 0,\r\n      data: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRender() {\r\n      this.renderTime = null;\r\n      this.showTable = false;\r\n      this.data = [];\r\n      await this.$nextTick();\r\n      this.showTable = true;\r\n      this.getList();\r\n    },\r\n    async getList() {\r\n      this.loading = true;\r\n      this.startTime = performance.now();\r\n      try {\r\n        const { data } = await mockApi.getList(10000)({\r\n          pageNum: 1,\r\n          pageSize: 500,\r\n        });\r\n        this.data = data;\r\n        this.$nextTick(() => {\r\n          this.$nextTick(() => {\r\n            this.renderTime = Math.round(performance.now() - this.startTime);\r\n          });\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 也可以用这个事件辅助判断表头渲染\r\n    onTableRendered() {\r\n      // if (this.startTime) {\r\n      //   this.renderTime = Math.round(performance.now() - this.startTime);\r\n      //   this.startTime = 0;\r\n      // }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 树级数据本地自动懒加载\n\nautoLazy:true 开启树级数据自动懒加载功能。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handleRender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="autoLazy"\r\n      active-text="自动树级懒加载"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="renderTime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ renderTime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showTable"\r\n      row-key="id"\r\n      :loading.sync="loading"\r\n      :options="crudOptions"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nfunction createTreeData(\r\n  level = 3,\r\n  childrenCount = 5,\r\n  curLevel = 1,\r\n  parentId = null,\r\n  prefix = ""\r\n) {\r\n  // 递归生成树形结构\r\n  const arr = [];\r\n  for (let i = 0; i < childrenCount; i++) {\r\n    const id = prefix + (parentId ? parentId + "-" : "") + (i + 1);\r\n    const node = {\r\n      id,\r\n      name: `节点${id}`,\r\n      gender: i % 2 === 0 ? "男" : "女",\r\n      age: 20 + i,\r\n      birthday: "2000-01-01",\r\n      city: ["北京", "上海", "广州", "深圳"][i % 4],\r\n      email: `user${id}@test.com`,\r\n      status: "正常",\r\n      score: Math.round(Math.random() * 100),\r\n      children: [],\r\n    };\r\n    if (curLevel < level) {\r\n      node.children = createTreeData(\r\n        level,\r\n        childrenCount,\r\n        curLevel + 1,\r\n        id,\r\n        prefix\r\n      );\r\n    } else {\r\n      delete node.children;\r\n    }\r\n    arr.push(node);\r\n  }\r\n  return arr;\r\n}\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showTable: false,\r\n      renderTime: null,\r\n      startTime: 0,\r\n      autoLazy: true,\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editConfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        isTree: true,\r\n        valueKey: "id",\r\n        childrenKey: "children",\r\n        treeProps: {\r\n          children: "children",\r\n          hasChildren: "hasChildren",\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名", isEdit: false },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudOptions() {\r\n      return {\r\n        ...this.options,\r\n        autoLazy: this.autoLazy,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handleRender() {\r\n      this.renderTime = null;\r\n      this.showTable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nextTick();\r\n      this.startTime = performance.now();\r\n      this.showTable = true;\r\n    },\r\n    async getList() {\r\n      this.loading = true;\r\n      this.startTime = performance.now();\r\n      try {\r\n        // 生成大数据量树形结构（如3级，每级5个节点，总共155个节点，或自行调整参数）\r\n        const treeData = createTreeData(3, 5); // 4级，每级8个节点，总量较大\r\n        // 统计总节点数\r\n        function countNodes(arr) {\r\n          let count = 0;\r\n          arr.forEach((node) => {\r\n            count++;\r\n            if (node.children) count += countNodes(node.children);\r\n          });\r\n          return count;\r\n        }\r\n        this.data = treeData;\r\n        this.total = countNodes(treeData);\r\n        this.$nextTick(() => {\r\n          this.renderTime = Math.round(performance.now() - this.startTime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',normalizedContent:'# 性能优化\n\n\n# 延迟渲染\n\ndelayrender:true 开启延迟渲染功能，可以提升大数据量复杂表格的渲染性能。开启后，可见区域之外的数据会先渲染成空白单元格，只有当滚动到可见区域时才会渲染真实内容，兼容性较强。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handlerender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="delayrender"\r\n      active-text="延迟渲染"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="rendertime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ rendertime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showtable"\r\n      :loading.sync="loading"\r\n      :options="crudoptions"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showtable: false,\r\n      rendertime: null,\r\n      starttime: 0,\r\n      delayrender: true, // 控制开关\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editconfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudoptions() {\r\n      return {\r\n        ...this.options,\r\n        delayrender: this.delayrender,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handlerender() {\r\n      this.rendertime = null;\r\n      this.showtable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nexttick();\r\n      this.showtable = true;\r\n    },\r\n    async getlist() {\r\n      this.loading = true;\r\n      this.starttime = performance.now();\r\n      try {\r\n        const { data, total } = await mockapi.getlist(10000)({\r\n          pagenum: 1,\r\n          pagesize: 500,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n        // 统计首屏渲染耗时\r\n        this.$nexttick(() => {\r\n          this.rendertime = math.round(performance.now() - this.starttime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 虚拟列表\n\nvirtualized:true 开启虚拟列表功能，性能更强但是兼容性较差，复杂表格容易出现样式错乱。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handlerender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="virtualized"\r\n      active-text="虚拟渲染"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="rendertime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ rendertime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showtable"\r\n      :loading.sync="loading"\r\n      :options="crudoptions"\r\n      :data="data"\r\n      :total="total"\r\n      :item-size="40"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showtable: false,\r\n      rendertime: null,\r\n      starttime: 0,\r\n      virtualized: true, // 控制开关\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editconfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudoptions() {\r\n      return {\r\n        ...this.options,\r\n        virtualized: this.virtualized,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handlerender() {\r\n      this.rendertime = null;\r\n      this.showtable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nexttick();\r\n      this.showtable = true;\r\n    },\r\n    async getlist() {\r\n      this.loading = true;\r\n      this.starttime = performance.now();\r\n      try {\r\n        const { data, total } = await mockapi.getlist(10000)({\r\n          pagenum: 1,\r\n          pagesize: 500,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n        // 统计首屏渲染耗时\r\n        this.$nexttick(() => {\r\n          this.rendertime = math.round(performance.now() - this.starttime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 与同数据量原生el-table对比\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handlerender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <span v-if="rendertime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ rendertime }}</b> ms\r\n    </span>\r\n    <el-table\r\n      v-if="showtable"\r\n      :data="data"\r\n      border\r\n      height="500px"\r\n      style="width: 100%; margin-top: 16px;"\r\n      ref="eltable"\r\n    >\r\n      <el-table-column prop="name" label="姓名">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.name" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="gender" label="性别">\r\n        <template #default="scope">\r\n          <el-select\r\n            v-model="scope.row.gender"\r\n            size="small"\r\n            style="width: 100%;"\r\n          >\r\n            <el-option label="男" value="男" />\r\n            <el-option label="女" value="女" />\r\n          </el-select>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="age" label="年龄">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.age" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="birthday" label="生日">\r\n        <template #default="scope">\r\n          <el-date-picker\r\n            v-model="scope.row.birthday"\r\n            type="date"\r\n            value-format="yyyy-mm-dd"\r\n            size="small"\r\n            style="width: 100%;"\r\n          />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="city" label="城市" width="100">\r\n        <template #default="scope">\r\n          <el-select v-model="scope.row.city" size="small" style="width: 100%;">\r\n            <el-option label="北京" value="北京" />\r\n            <el-option label="上海" value="上海" />\r\n            <el-option label="广州" value="广州" />\r\n            <el-option label="深圳" value="深圳" />\r\n          </el-select>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="email" label="邮箱">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.email" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="status" label="状态">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.status" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop="score" label="分数">\r\n        <template #default="scope">\r\n          <el-input v-model="scope.row.score" size="small" />\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showtable: false,\r\n      rendertime: null,\r\n      starttime: 0,\r\n      data: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async handlerender() {\r\n      this.rendertime = null;\r\n      this.showtable = false;\r\n      this.data = [];\r\n      await this.$nexttick();\r\n      this.showtable = true;\r\n      this.getlist();\r\n    },\r\n    async getlist() {\r\n      this.loading = true;\r\n      this.starttime = performance.now();\r\n      try {\r\n        const { data } = await mockapi.getlist(10000)({\r\n          pagenum: 1,\r\n          pagesize: 500,\r\n        });\r\n        this.data = data;\r\n        this.$nexttick(() => {\r\n          this.$nexttick(() => {\r\n            this.rendertime = math.round(performance.now() - this.starttime);\r\n          });\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 也可以用这个事件辅助判断表头渲染\r\n    ontablerendered() {\r\n      // if (this.starttime) {\r\n      //   this.rendertime = math.round(performance.now() - this.starttime);\r\n      //   this.starttime = 0;\r\n      // }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 树级数据本地自动懒加载\n\nautolazy:true 开启树级数据自动懒加载功能。\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="handlerender" :disabled="loading">\r\n      开始渲染\r\n    </el-button>\r\n    <el-switch\r\n      v-model="autolazy"\r\n      active-text="自动树级懒加载"\r\n      inactive-text="普通渲染"\r\n      style="margin-left: 20px;"\r\n      :disabled="loading"\r\n    />\r\n    <span v-if="rendertime !== null" style="margin-left: 16px;">\r\n      渲染耗时：<b>{{ rendertime }}</b> ms\r\n    </span>\r\n    <sc-crud\r\n      v-if="showtable"\r\n      row-key="id"\r\n      :loading.sync="loading"\r\n      :options="crudoptions"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nfunction createtreedata(\r\n  level = 3,\r\n  childrencount = 5,\r\n  curlevel = 1,\r\n  parentid = null,\r\n  prefix = ""\r\n) {\r\n  // 递归生成树形结构\r\n  const arr = [];\r\n  for (let i = 0; i < childrencount; i++) {\r\n    const id = prefix + (parentid ? parentid + "-" : "") + (i + 1);\r\n    const node = {\r\n      id,\r\n      name: `节点${id}`,\r\n      gender: i % 2 === 0 ? "男" : "女",\r\n      age: 20 + i,\r\n      birthday: "2000-01-01",\r\n      city: ["北京", "上海", "广州", "深圳"][i % 4],\r\n      email: `user${id}@test.com`,\r\n      status: "正常",\r\n      score: math.round(math.random() * 100),\r\n      children: [],\r\n    };\r\n    if (curlevel < level) {\r\n      node.children = createtreedata(\r\n        level,\r\n        childrencount,\r\n        curlevel + 1,\r\n        id,\r\n        prefix\r\n      );\r\n    } else {\r\n      delete node.children;\r\n    }\r\n    arr.push(node);\r\n  }\r\n  return arr;\r\n}\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      showtable: false,\r\n      rendertime: null,\r\n      starttime: 0,\r\n      autolazy: true,\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        editconfig: {\r\n          mode: "free",\r\n        },\r\n        height: "500px",\r\n        istree: true,\r\n        valuekey: "id",\r\n        childrenkey: "children",\r\n        treeprops: {\r\n          children: "children",\r\n          haschildren: "haschildren",\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名", isedit: false },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          {\r\n            prop: "birthday",\r\n            label: "生日",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "date",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            width: 100,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                  { label: "深圳", value: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "email", label: "邮箱" },\r\n          { prop: "status", label: "状态" },\r\n          { prop: "score", label: "分数" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    crudoptions() {\r\n      return {\r\n        ...this.options,\r\n        autolazy: this.autolazy,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async handlerender() {\r\n      this.rendertime = null;\r\n      this.showtable = false;\r\n      this.data = [];\r\n      this.total = 0;\r\n      await this.$nexttick();\r\n      this.starttime = performance.now();\r\n      this.showtable = true;\r\n    },\r\n    async getlist() {\r\n      this.loading = true;\r\n      this.starttime = performance.now();\r\n      try {\r\n        // 生成大数据量树形结构（如3级，每级5个节点，总共155个节点，或自行调整参数）\r\n        const treedata = createtreedata(3, 5); // 4级，每级8个节点，总量较大\r\n        // 统计总节点数\r\n        function countnodes(arr) {\r\n          let count = 0;\r\n          arr.foreach((node) => {\r\n            count++;\r\n            if (node.children) count += countnodes(node.children);\r\n          });\r\n          return count;\r\n        }\r\n        this.data = treedata;\r\n        this.total = countnodes(treedata);\r\n        this.$nexttick(() => {\r\n          this.rendertime = math.round(performance.now() - this.starttime);\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',charsets:{cjk:!0}},{title:"搜索",frontmatter:{},regularPath:"/guide/crud/search.html",relativePath:"guide/crud/search.md",key:"v-05c1aef7",path:"/guide/crud/search.html",headers:[{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:45},{level:2,title:"自定义搜索组件",slug:"自定义搜索组件",normalizedTitle:"自定义搜索组件",charIndex:2982},{level:3,title:"搜索表单配置",slug:"搜索表单配置",normalizedTitle:"搜索表单配置",charIndex:4225},{level:3,title:"表头搜索",slug:"表头搜索",normalizedTitle:"表头搜索",charIndex:17},{level:2,title:"本地搜索",slug:"本地搜索",normalizedTitle:"本地搜索",charIndex:30},{level:3,title:"本地搜索指定搜索类型",slug:"本地搜索指定搜索类型",normalizedTitle:"本地搜索指定搜索类型",charIndex:9973},{level:3,title:"本地搜索自定义搜索过滤",slug:"本地搜索自定义搜索过滤",normalizedTitle:"本地搜索自定义搜索过滤",charIndex:10068},{level:2,title:"永久展示部分搜索条件",slug:"永久展示部分搜索条件",normalizedTitle:"永久展示部分搜索条件",charIndex:10283},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:13746},{level:3,title:"Column 配置",slug:"column-配置",normalizedTitle:"column 配置",charIndex:13754},{level:3,title:"Options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:15193},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:15414},{level:3,title:"slots",slug:"slots",normalizedTitle:"slots",charIndex:15490}],headersStr:"基础用法 自定义搜索组件 搜索表单配置 表头搜索 本地搜索 本地搜索指定搜索类型 本地搜索自定义搜索过滤 永久展示部分搜索条件 API Column 配置 Options 配置 Events slots",content:'# 搜索\n\n搜索功能支持表单搜索和表头搜索两种方式，并可配置本地搜索或远程搜索。\n\n\n# 基础用法\n\n通过配置列的 search 属性启用搜索功能。支持表单搜索和表头搜索两种方式。\n使用 search.sync 可以双向绑定搜索参数对象。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      搜索参数:\r\n      <div>{{ JSON.stringify(search) }}</div>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandSearch: true, // 初始展开搜索框\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n              reset: () => {\r\n                console.log("重置事件");\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startPlaceholder: "开始日期",\r\n                endPlaceholder: "结束日期",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        searchForm: {\r\n          columnWidth: "220px",\r\n          labelWidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义搜索组件\n\n支持插槽自定义搜索组件、搜索标题\n支持自定义搜索表单、搜索头配置。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 15px;">搜索参数：{{ search }}</div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n      \x3c!-- 自定义城市搜索组件 --\x3e\r\n      <template #city-search>\r\n        <el-cascader\r\n          v-model="search.city"\r\n          :options="cityTreeData"\r\n          :props="{ checkStrictly: true }"\r\n          clearable\r\n        ></el-cascader>\r\n      </template>\r\n\r\n      \x3c!-- 自定义年龄搜索标题 --\x3e\r\n      <template #age-search-label>\r\n        <span>自定义年龄搜索标题 <i class="el-icon-warning"></i></span>\r\n      </template>\r\n\r\n      \x3c!-- 自定义搜索头 --\x3e\r\n      <template #date-searchHeader>\r\n        <div>\r\n          自定义搜索头\r\n        </div>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi, cityTreeData } from "../../mock";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      cityTreeData,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        city: [],\r\n        status: "",\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandSearch: true,\r\n        // 搜索表单配置\r\n        searchForm: {\r\n          columnWidth: "300px",\r\n          labelWidth: "100px",\r\n          // 自定义操作按钮\r\n          action: {\r\n            search: {\r\n              label: "查询",\r\n              icon: "el-icon-search",\r\n            },\r\n            reset: {\r\n              label: "清空",\r\n              icon: "el-icon-delete",\r\n            },\r\n            handles: [\r\n              {\r\n                label: "导出搜索结果",\r\n                icon: "el-icon-download",\r\n                type: "success",\r\n                onClick: (search) => {\r\n                  console.log("导出搜索条件：", search);\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        // 表头搜索配置\r\n        searchHeader: {\r\n          trigger: "click",\r\n          placement: "bottom",\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: {\r\n              // 自定义渲染函数\r\n              labelRender: () => (\r\n                <span>\r\n                  自定义姓名标题 <i class="el-icon-warning"></i>\r\n                </span>\r\n              ),\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: true, // 使用插槽自定义\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            search: {\r\n              comp: {\r\n                name: "el-radio-group",\r\n                options: [\r\n                  { label: "全部", value: "" },\r\n                  { label: "启用", value: 1 },\r\n                  { label: "禁用", value: 0 },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "测试",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 搜索表单配置\n\n通过 searchForm 可以自定义搜索表单的配置。\n\nsearchForm: {\n  initShow: true,  // 初始展开\n  columnWidth: "200px",  // 列宽\n  labelWidth: "100px",  // 标签宽度\n  action: {\n    search: {\n      text: "查询"  // 自定义按钮文本\n    },\n    reset: {\n      text: "重置"\n    }\n  }\n}\n\n\n\n# 表头搜索\n\n通过 searchHeader 配置表头搜索的行为：\n\noptions: {\n  searchHeader: {\n    placement: "bottom", // 弹出位置\n    width: "290px"      // 搜索框宽度\n  }\n}\n\n\n\n# 本地搜索\n\n通过配置 localSearch: true 启用本地搜索功能，可直接对表格数据进行筛选，无需发送请求。\n启用本地搜索时，可以搭配本地分页使用 localPagination: true。\n支持输入框搜索、下拉选择搜索、日期搜索、自定义搜索过滤。\nsearch组件使用插槽或者函数自定义时，需要指定search.type。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      搜索参数:\r\n      <div>{{ JSON.stringify(search) }}</div>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandSearch: true, // 初始展开搜索框\r\n        localSearch: true, // 启用本地搜索\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            search: {\r\n              filter: (cellValue, searchValue, row) => {\r\n                console.log(cellValue, searchValue, row);\r\n                // 返回 true 表示匹配，false 表示不匹配\r\n                return cellValue > 30;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startPlaceholder: "开始日期",\r\n                endPlaceholder: "结束日期",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 本地搜索指定搜索类型\n\n{\n  prop: "date",\n  label: "日期",\n  search: {\n    type: "date" // 本地搜索类型\n  }\n}\n\n\n\n# 本地搜索自定义搜索过滤\n\n{\n  prop: "custom",\n  label: "自定义",\n  search: {\n    filter: (cellValue, searchValue, row) => {\n      // 返回 true 表示匹配，false 表示不匹配\n      return customFilter(cellValue, searchValue, row);\n    }\n  }\n}\n\n\n\n# 永久展示部分搜索条件\n\n有些搜索条件希望始终展示在搜索表单中，不随搜索框的收缩/展开而隐藏。可以通过在列搜索配置中添加 alwaysShow 实现。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              alwaysShow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender1",\r\n            label: "性别",\r\n            search: {\r\n              alwaysShow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender2",\r\n            label: "性别",\r\n            search: {\r\n              alwaysShow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startPlaceholder: "开始日期",\r\n                endPlaceholder: "结束日期",\r\n                valueFormat: "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        searchForm: {\r\n          columnWidth: "220px",\r\n          labelWidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# Column 配置\n\n参数                       说明                            类型               默认值\nsearch                   是否启用搜索                        boolean/object   false\nsearch.prop              搜索字段                          object           默认继承列的prop\nsearch.validateProp      搜索验证字段、用于验证表头是否为空             string           默认继承search.prop\nsearch.label             搜索标签                          string           默认继承列的label\nsearch.labelRender       搜索标签渲染函数                      function         -\nsearch.reset             单个重置事件                        function         -\nsearch.comp              搜索组件                          object           el-input\nsearch.render            搜索组件渲染函数                      function         -\nsearch.type              本地搜索类型，支持input、select、date    string           input\nsearch.filter            本地搜索过滤函数                      function         -\nsearch.alwaysShow        是否永久展示搜索条件                    boolean          false\nsearchHeader             是否启用表头搜索， 可配置el-popover组件属性   boolean/object   默认继承search\nsearchHeader.width       表头搜索宽度                        string           290px\nsearchHeader.searchBtn   是否显示表头搜索按钮                    boolean          false\nsearchHeader.resetBtn    是否显示表头重置按钮                    boolean          true\nsearchHeader.comp        表头搜索组件                        object           默认继承search\nsearchHeader.render      表头搜索组件渲染函数                    function         默认继承search\n\n\n# Options 配置\n\n参数             说明          类型        默认值\nexpandSearch   初始是否展开搜索框   boolean   false\nlocalSearch    是否启用本地搜索    boolean   false\nsearchForm     搜索表单配置      object    -\nsearchHeader   表头搜索配置      object    -\n\n\n# Events\n\n事件名      说明     参数\nsearch   搜索事件   searchData\nreset    重置事件   -\n\n\n# slots\n\n插槽名                   说明           默认值\n{prop}-search         自定义列搜索组件     -\n{prop}-search-label   自定义列搜索标签     -\n{prop}-searchHeader   自定义列表头搜索内容   默认继承search',normalizedContent:'# 搜索\n\n搜索功能支持表单搜索和表头搜索两种方式，并可配置本地搜索或远程搜索。\n\n\n# 基础用法\n\n通过配置列的 search 属性启用搜索功能。支持表单搜索和表头搜索两种方式。\n使用 search.sync 可以双向绑定搜索参数对象。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      搜索参数:\r\n      <div>{{ json.stringify(search) }}</div>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandsearch: true, // 初始展开搜索框\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n              reset: () => {\r\n                console.log("重置事件");\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startplaceholder: "开始日期",\r\n                endplaceholder: "结束日期",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        searchform: {\r\n          columnwidth: "220px",\r\n          labelwidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义搜索组件\n\n支持插槽自定义搜索组件、搜索标题\n支持自定义搜索表单、搜索头配置。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 15px;">搜索参数：{{ search }}</div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n      \x3c!-- 自定义城市搜索组件 --\x3e\r\n      <template #city-search>\r\n        <el-cascader\r\n          v-model="search.city"\r\n          :options="citytreedata"\r\n          :props="{ checkstrictly: true }"\r\n          clearable\r\n        ></el-cascader>\r\n      </template>\r\n\r\n      \x3c!-- 自定义年龄搜索标题 --\x3e\r\n      <template #age-search-label>\r\n        <span>自定义年龄搜索标题 <i class="el-icon-warning"></i></span>\r\n      </template>\r\n\r\n      \x3c!-- 自定义搜索头 --\x3e\r\n      <template #date-searchheader>\r\n        <div>\r\n          自定义搜索头\r\n        </div>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi, citytreedata } from "../../mock";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      citytreedata,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n        city: [],\r\n        status: "",\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandsearch: true,\r\n        // 搜索表单配置\r\n        searchform: {\r\n          columnwidth: "300px",\r\n          labelwidth: "100px",\r\n          // 自定义操作按钮\r\n          action: {\r\n            search: {\r\n              label: "查询",\r\n              icon: "el-icon-search",\r\n            },\r\n            reset: {\r\n              label: "清空",\r\n              icon: "el-icon-delete",\r\n            },\r\n            handles: [\r\n              {\r\n                label: "导出搜索结果",\r\n                icon: "el-icon-download",\r\n                type: "success",\r\n                onclick: (search) => {\r\n                  console.log("导出搜索条件：", search);\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        // 表头搜索配置\r\n        searchheader: {\r\n          trigger: "click",\r\n          placement: "bottom",\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: {\r\n              // 自定义渲染函数\r\n              labelrender: () => (\r\n                <span>\r\n                  自定义姓名标题 <i class="el-icon-warning"></i>\r\n                </span>\r\n              ),\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            search: true,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: true, // 使用插槽自定义\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态",\r\n            search: {\r\n              comp: {\r\n                name: "el-radio-group",\r\n                options: [\r\n                  { label: "全部", value: "" },\r\n                  { label: "启用", value: 1 },\r\n                  { label: "禁用", value: 0 },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "测试",\r\n            search: true,\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 搜索表单配置\n\n通过 searchform 可以自定义搜索表单的配置。\n\nsearchform: {\n  initshow: true,  // 初始展开\n  columnwidth: "200px",  // 列宽\n  labelwidth: "100px",  // 标签宽度\n  action: {\n    search: {\n      text: "查询"  // 自定义按钮文本\n    },\n    reset: {\n      text: "重置"\n    }\n  }\n}\n\n\n\n# 表头搜索\n\n通过 searchheader 配置表头搜索的行为：\n\noptions: {\n  searchheader: {\n    placement: "bottom", // 弹出位置\n    width: "290px"      // 搜索框宽度\n  }\n}\n\n\n\n# 本地搜索\n\n通过配置 localsearch: true 启用本地搜索功能，可直接对表格数据进行筛选，无需发送请求。\n启用本地搜索时，可以搭配本地分页使用 localpagination: true。\n支持输入框搜索、下拉选择搜索、日期搜索、自定义搜索过滤。\nsearch组件使用插槽或者函数自定义时，需要指定search.type。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      搜索参数:\r\n      <div>{{ json.stringify(search) }}</div>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        expandsearch: true, // 初始展开搜索框\r\n        localsearch: true, // 启用本地搜索\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            search: {\r\n              filter: (cellvalue, searchvalue, row) => {\r\n                console.log(cellvalue, searchvalue, row);\r\n                // 返回 true 表示匹配，false 表示不匹配\r\n                return cellvalue > 30;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startplaceholder: "开始日期",\r\n                endplaceholder: "结束日期",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 本地搜索指定搜索类型\n\n{\n  prop: "date",\n  label: "日期",\n  search: {\n    type: "date" // 本地搜索类型\n  }\n}\n\n\n\n# 本地搜索自定义搜索过滤\n\n{\n  prop: "custom",\n  label: "自定义",\n  search: {\n    filter: (cellvalue, searchvalue, row) => {\n      // 返回 true 表示匹配，false 表示不匹配\n      return customfilter(cellvalue, searchvalue, row);\n    }\n  }\n}\n\n\n\n# 永久展示部分搜索条件\n\n有些搜索条件希望始终展示在搜索表单中，不随搜索框的收缩/展开而隐藏。可以通过在列搜索配置中添加 alwaysshow 实现。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            search: true, // 启用搜索\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            search: {\r\n              alwaysshow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender1",\r\n            label: "性别",\r\n            search: {\r\n              alwaysshow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "gender2",\r\n            label: "性别",\r\n            search: {\r\n              alwaysshow: true,\r\n              comp: {\r\n                name: "el-select", // 使用下拉选择\r\n                options: [\r\n                  { label: "男", value: "男" },\r\n                  { label: "女", value: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "是", value: "是" },\r\n                  { label: "否", value: "否" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            search: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "北京", value: "北京" },\r\n                  { label: "上海", value: "上海" },\r\n                  { label: "广州", value: "广州" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            search: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                type: "daterange",\r\n                startplaceholder: "开始日期",\r\n                endplaceholder: "结束日期",\r\n                valueformat: "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        searchform: {\r\n          columnwidth: "220px",\r\n          labelwidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# column 配置\n\n参数                       说明                            类型               默认值\nsearch                   是否启用搜索                        boolean/object   false\nsearch.prop              搜索字段                          object           默认继承列的prop\nsearch.validateprop      搜索验证字段、用于验证表头是否为空             string           默认继承search.prop\nsearch.label             搜索标签                          string           默认继承列的label\nsearch.labelrender       搜索标签渲染函数                      function         -\nsearch.reset             单个重置事件                        function         -\nsearch.comp              搜索组件                          object           el-input\nsearch.render            搜索组件渲染函数                      function         -\nsearch.type              本地搜索类型，支持input、select、date    string           input\nsearch.filter            本地搜索过滤函数                      function         -\nsearch.alwaysshow        是否永久展示搜索条件                    boolean          false\nsearchheader             是否启用表头搜索， 可配置el-popover组件属性   boolean/object   默认继承search\nsearchheader.width       表头搜索宽度                        string           290px\nsearchheader.searchbtn   是否显示表头搜索按钮                    boolean          false\nsearchheader.resetbtn    是否显示表头重置按钮                    boolean          true\nsearchheader.comp        表头搜索组件                        object           默认继承search\nsearchheader.render      表头搜索组件渲染函数                    function         默认继承search\n\n\n# options 配置\n\n参数             说明          类型        默认值\nexpandsearch   初始是否展开搜索框   boolean   false\nlocalsearch    是否启用本地搜索    boolean   false\nsearchform     搜索表单配置      object    -\nsearchheader   表头搜索配置      object    -\n\n\n# events\n\n事件名      说明     参数\nsearch   搜索事件   searchdata\nreset    重置事件   -\n\n\n# slots\n\n插槽名                   说明           默认值\n{prop}-search         自定义列搜索组件     -\n{prop}-search-label   自定义列搜索标签     -\n{prop}-searchheader   自定义列表头搜索内容   默认继承search',charsets:{cjk:!0}},{title:"表格合并",frontmatter:{},regularPath:"/guide/crud/span.html",relativePath:"guide/crud/span.md",key:"v-63298792",path:"/guide/crud/span.html",headers:[{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:61},{level:2,title:"特殊列处理",slug:"特殊列处理",normalizedTitle:"特殊列处理",charIndex:1537},{level:2,title:"列级别自定义",slug:"列级别自定义",normalizedTitle:"列级别自定义",charIndex:3145},{level:2,title:"表格级别自定义",slug:"表格级别自定义",normalizedTitle:"表格级别自定义",charIndex:3501},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:3749},{level:3,title:"Column 配置",slug:"column-配置",normalizedTitle:"column 配置",charIndex:3757},{level:3,title:"Options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:3913},{level:3,title:"spanMethod 参数",slug:"spanmethod-参数",normalizedTitle:"spanmethod 参数",charIndex:4011}],headersStr:"基础用法 特殊列处理 列级别自定义 表格级别自定义 API Column 配置 Options 配置 spanMethod 参数",content:'# 表格合并\n\n表格支持按照指定字段对行进行合并，支持多字段优先级合并。并根据配置的合并字段，自动使用多级排序。\n\n\n# 基础用法\n\n通过配置合并字段 spanProp 启用列的合并功能。自动合并相同字段值的行。\n特殊列也可以启用合并功能，index 列可以获取合并后的索引。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        renderColumns: [\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            spanProp: "city", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            spanProp: "gender", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            spanProp: "is30",\r\n          },\r\n          { prop: "name", label: "姓名" },\r\n        ],\r\n        showSummary: true, // 启用合计行\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        // 根据当前排序字段对数据进行排序\r\n        this.data = [...data];\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 特殊列处理\n\n索引列配置spanProp，可以获取合并后的索引。\n选中列配置spanProp，可以操作合并后的选中数据，实际选中还是合并前的数据。\n\n\n<template>\r\n  <div>\r\n    <h3>选中数据：{{ JSON.stringify(selected) }}</h3>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selected"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 15,\r\n      },\r\n      selected: [],\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        selection: {\r\n          banner: true,\r\n          reserveSelection: true,\r\n          spanProp: "city", // 开启该列合并\r\n        },\r\n        index: {\r\n          label: "序号",\r\n          spanProp: "gender",\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            spanProp: "city", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            spanProp: "gender", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n        ],\r\n        showSummary: true, // 启用合计行\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data } = await mockApi.getList(40)(this.search);\r\n        this.data = data;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 列级别自定义\n\n通过 spanMethod 属性可以自定义某一列的合并规则。\n\nrenderColumns: [\n  {\n    prop: "status",\n    label: "状态",\n    // 自定义合并规则\n    spanMethod: ({ row, rowIndex }) => {\n      if (row.status === "pending") {\n        return {\n          rowspan: 2,\n          colspan: 1,\n        };\n      }\n      return {\n        rowspan: 1,\n        colspan: 1,\n      };\n    },\n  },\n];\n\n\n\n# 表格级别自定义\n\n通过 spanMethod 可以自定义整个表格的合并规则。\n\nspanMethod: ({ row, column, rowIndex, columnIndex }) => {\n  if (row.status === "pending") {\n    return {\n      rowspan: 2,\n      colspan: 1,\n    };\n  }\n  return {\n    rowspan: 1,\n    colspan: 1,\n  };\n};\n\n\n\n# API\n\n\n# Column 配置\n\n参数           说明           类型               默认值\nspanProp     是否启用列合并      boolean/string   false\nspanMethod   列级别自定义合并方法   Function         -\n\n\n# Options 配置\n\n参数           说明            类型         默认值\nspanMethod   表格级别自定义合并方法   Function   -\n\n\n# spanMethod 参数\n\n参数            说明    类型\nrow           行数据   object\ncolumn        列配置   object\nrowIndex      行索引   number\ncolumnIndex   列索引   number',normalizedContent:'# 表格合并\n\n表格支持按照指定字段对行进行合并，支持多字段优先级合并。并根据配置的合并字段，自动使用多级排序。\n\n\n# 基础用法\n\n通过配置合并字段 spanprop 启用列的合并功能。自动合并相同字段值的行。\n特殊列也可以启用合并功能，index 列可以获取合并后的索引。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        rendercolumns: [\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            spanprop: "city", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            spanprop: "gender", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "is30",\r\n            label: "大于30",\r\n            spanprop: "is30",\r\n          },\r\n          { prop: "name", label: "姓名" },\r\n        ],\r\n        showsummary: true, // 启用合计行\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        // 根据当前排序字段对数据进行排序\r\n        this.data = [...data];\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 特殊列处理\n\n索引列配置spanprop，可以获取合并后的索引。\n选中列配置spanprop，可以操作合并后的选中数据，实际选中还是合并前的数据。\n\n\n<template>\r\n  <div>\r\n    <h3>选中数据：{{ json.stringify(selected) }}</h3>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selected"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 15,\r\n      },\r\n      selected: [],\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        selection: {\r\n          banner: true,\r\n          reserveselection: true,\r\n          spanprop: "city", // 开启该列合并\r\n        },\r\n        index: {\r\n          label: "序号",\r\n          spanprop: "gender",\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            spanprop: "city", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            spanprop: "gender", // 开启该列合并\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n        ],\r\n        showsummary: true, // 启用合计行\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data } = await mockapi.getlist(40)(this.search);\r\n        this.data = data;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 列级别自定义\n\n通过 spanmethod 属性可以自定义某一列的合并规则。\n\nrendercolumns: [\n  {\n    prop: "status",\n    label: "状态",\n    // 自定义合并规则\n    spanmethod: ({ row, rowindex }) => {\n      if (row.status === "pending") {\n        return {\n          rowspan: 2,\n          colspan: 1,\n        };\n      }\n      return {\n        rowspan: 1,\n        colspan: 1,\n      };\n    },\n  },\n];\n\n\n\n# 表格级别自定义\n\n通过 spanmethod 可以自定义整个表格的合并规则。\n\nspanmethod: ({ row, column, rowindex, columnindex }) => {\n  if (row.status === "pending") {\n    return {\n      rowspan: 2,\n      colspan: 1,\n    };\n  }\n  return {\n    rowspan: 1,\n    colspan: 1,\n  };\n};\n\n\n\n# api\n\n\n# column 配置\n\n参数           说明           类型               默认值\nspanprop     是否启用列合并      boolean/string   false\nspanmethod   列级别自定义合并方法   function         -\n\n\n# options 配置\n\n参数           说明            类型         默认值\nspanmethod   表格级别自定义合并方法   function   -\n\n\n# spanmethod 参数\n\n参数            说明    类型\nrow           行数据   object\ncolumn        列配置   object\nrowindex      行索引   number\ncolumnindex   列索引   number',charsets:{cjk:!0}},{title:"表格统计",frontmatter:{},regularPath:"/guide/crud/summary.html",relativePath:"guide/crud/summary.md",key:"v-3dd5d8d3",path:"/guide/crud/summary.html",headers:[{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:47},{level:2,title:"格式化配置",slug:"格式化配置",normalizedTitle:"格式化配置",charIndex:2411},{level:2,title:"高级统计",slug:"高级统计",normalizedTitle:"高级统计",charIndex:2666},{level:3,title:"加权平均值",slug:"加权平均值",normalizedTitle:"加权平均值",charIndex:2675},{level:3,title:"条件统计",slug:"条件统计",normalizedTitle:"条件统计",charIndex:2793},{level:2,title:"自定义统计方法",slug:"自定义统计方法",normalizedTitle:"自定义统计方法",charIndex:2955},{level:2,title:"表格级别自定义",slug:"表格级别自定义",normalizedTitle:"表格级别自定义",charIndex:3250},{level:2,title:"嵌套数据统计",slug:"嵌套数据统计",normalizedTitle:"嵌套数据统计",charIndex:3654},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:3824},{level:3,title:"Column Summary 配置",slug:"column-summary-配置",normalizedTitle:"column summary 配置",charIndex:3832},{level:3,title:"Options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:4337},{level:3,title:"内置统计类型",slug:"内置统计类型",normalizedTitle:"内置统计类型",charIndex:4583},{level:3,title:"summaryMethod 参数",slug:"summarymethod-参数",normalizedTitle:"summarymethod 参数",charIndex:4797}],headersStr:"基础用法 格式化配置 高级统计 加权平均值 条件统计 自定义统计方法 表格级别自定义 嵌套数据统计 API Column Summary 配置 Options 配置 内置统计类型 summaryMethod 参数",content:'# 表格统计\n\n表格支持在底部显示统计信息，内置多种统计方式，也支持自定义统计逻辑。\n\n\n# 基础用法\n\n通过配置列的 summary 属性启用统计功能。支持以下统计方式：\n\n * sum: 求和\n * avg: 平均值\n * max: 最大值\n * min: 最小值\n * count: 计数\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        showSummary: true, // 启用统计行\r\n        renderColumns: [\r\n          {\r\n            prop: "amount",\r\n            label: "金额",\r\n            summary: {\r\n              type: "sum",\r\n              prefix: "¥",\r\n              suffix: "元",\r\n              decimals: 2,\r\n            },\r\n          },\r\n          {\r\n            prop: "score",\r\n            label: "得分",\r\n            summary: {\r\n              type: "avg",\r\n              decimals: 1,\r\n              suffix: "分",\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态统计",\r\n            summary: {\r\n              type: "count",\r\n              predicate: (value) => value === "active",\r\n              suffix: "个活跃",\r\n            },\r\n          },\r\n          {\r\n            prop: "nested.sales",\r\n            label: "销售额",\r\n            summary: {\r\n              type: "custom",\r\n              path: "nested.sales",\r\n              method: (values, data) => {\r\n                // 自定义统计逻辑\r\n                const total = values.reduce((sum, val) => sum + val, 0);\r\n                return total;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(40)(this.search);\r\n        this.data = data.map((item) => ({\r\n          ...item,\r\n          amount: Math.floor(Math.random() * 100),\r\n          score: Math.floor(Math.random() * 100),\r\n          status: Math.random() > 0.5 ? "active" : "inactive",\r\n          nested: {\r\n            sales: Math.floor(Math.random() * 100),\r\n          },\r\n        }));\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 格式化配置\n\n通过 prefix、suffix 和 decimals 属性可以对统计结果进行格式化：\n\nrenderColumns: [\n  {\n    prop: "amount",\n    label: "金额",\n    summary: {\n      type: "sum",\n      prefix: "¥",     // 添加前缀\n      suffix: "元",    // 添加后缀\n      decimals: 2      // 保留2位小数\n    }\n  }\n]\n\n\n\n# 高级统计\n\n\n# 加权平均值\n\n{\n  prop: "score",\n  label: "加权平均分",\n  summary: {\n    type: "avg",\n    decimals: 1,\n    suffix: "分"\n  }\n}\n\n\n\n# 条件统计\n\n{\n  prop: "status",\n  label: "状态统计",\n  summary: {\n    type: "count",\n    predicate: value => value === \'active\',  // 只统计active状态\n    suffix: "个"\n  }\n}\n\n\n\n# 自定义统计方法\n\n通过传入函数作为 method 可以自定义统计逻辑：\n\n{\n  prop: "custom",\n  label: "自定义统计",\n  summary: {\n    type: "custom",\n    method: (values, data) => {\n      // values: 当前列的所有数值\n      // data: 表格完整数据\n      return values.reduce((sum, val) => sum + val, 0);\n    },\n    prefix: "¥",\n    decimals: 2\n  }\n}\n\n\n\n# 表格级别自定义\n\n通过 summaryMethod 可以自定义整个表格的统计规则：\n\noptions: {\n  summaryMethod: ({ columns, data }) => {\n    const sums = [];\n    columns.forEach((column, index) => {\n      if (index === 0) {\n        sums[index] = \'总计\';\n        return;\n      }\n      const values = data.map(item => Number(item[column.property]));\n      sums[index] = values.reduce((sum, val) => sum + val, 0);\n    });\n    return sums;\n  }\n}\n\n\n\n# 嵌套数据统计\n\n通过 path 属性可以统计嵌套对象中的数据：\n\n{\n  prop: "nested.value",\n  label: "嵌套数据",\n  summary: {\n    type: "sum",\n    path: "nested.value",  // 指定数据路径\n    decimals: 2\n  }\n}\n\n\n\n# API\n\n\n# Column Summary 配置\n\n参数           说明                   类型         默认值\ntype         统计类型                 string     -\nprefix       统计值前缀                string     \'\'\nsuffix       统计值后缀                string     \'\'\ndecimals     小数位数                 number     2\npath         数据路径（用于嵌套数据）         string     -\nignoreZero   是否忽略0值               boolean    false\nabsolute     是否取绝对值               boolean    false\npredicate    计数条件（仅用于count）       function   -\nmethod       自定义统计方法（仅用于custom）   function   -\n\n\n# Options 配置\n\n参数              说明                         类型         默认值\nsummaryData     不使用表格data数据，而使用外部传入的统计数据   array      -\nshowSummary     是否显示统计行                    boolean    false\nsummaryMethod   自定义统计方法                    function   -\n\n\n# 内置统计类型\n\n类型       说明      可选值\nsum      求和      ignoreZero, absolute\navg      平均值     ignoreZero\ncount    计数      ignoreZero, predicate\nmax      最大值     absolute\nmin      最小值     absolute\ncustom   自定义方法   method\n\n\n# summaryMethod 参数\n\n参数        说明      类型\ncolumns   列配置数组   array\ndata      表格数据    array',normalizedContent:'# 表格统计\n\n表格支持在底部显示统计信息，内置多种统计方式，也支持自定义统计逻辑。\n\n\n# 基础用法\n\n通过配置列的 summary 属性启用统计功能。支持以下统计方式：\n\n * sum: 求和\n * avg: 平均值\n * max: 最大值\n * min: 最小值\n * count: 计数\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        showsummary: true, // 启用统计行\r\n        rendercolumns: [\r\n          {\r\n            prop: "amount",\r\n            label: "金额",\r\n            summary: {\r\n              type: "sum",\r\n              prefix: "¥",\r\n              suffix: "元",\r\n              decimals: 2,\r\n            },\r\n          },\r\n          {\r\n            prop: "score",\r\n            label: "得分",\r\n            summary: {\r\n              type: "avg",\r\n              decimals: 1,\r\n              suffix: "分",\r\n            },\r\n          },\r\n          {\r\n            prop: "status",\r\n            label: "状态统计",\r\n            summary: {\r\n              type: "count",\r\n              predicate: (value) => value === "active",\r\n              suffix: "个活跃",\r\n            },\r\n          },\r\n          {\r\n            prop: "nested.sales",\r\n            label: "销售额",\r\n            summary: {\r\n              type: "custom",\r\n              path: "nested.sales",\r\n              method: (values, data) => {\r\n                // 自定义统计逻辑\r\n                const total = values.reduce((sum, val) => sum + val, 0);\r\n                return total;\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(40)(this.search);\r\n        this.data = data.map((item) => ({\r\n          ...item,\r\n          amount: math.floor(math.random() * 100),\r\n          score: math.floor(math.random() * 100),\r\n          status: math.random() > 0.5 ? "active" : "inactive",\r\n          nested: {\r\n            sales: math.floor(math.random() * 100),\r\n          },\r\n        }));\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 格式化配置\n\n通过 prefix、suffix 和 decimals 属性可以对统计结果进行格式化：\n\nrendercolumns: [\n  {\n    prop: "amount",\n    label: "金额",\n    summary: {\n      type: "sum",\n      prefix: "¥",     // 添加前缀\n      suffix: "元",    // 添加后缀\n      decimals: 2      // 保留2位小数\n    }\n  }\n]\n\n\n\n# 高级统计\n\n\n# 加权平均值\n\n{\n  prop: "score",\n  label: "加权平均分",\n  summary: {\n    type: "avg",\n    decimals: 1,\n    suffix: "分"\n  }\n}\n\n\n\n# 条件统计\n\n{\n  prop: "status",\n  label: "状态统计",\n  summary: {\n    type: "count",\n    predicate: value => value === \'active\',  // 只统计active状态\n    suffix: "个"\n  }\n}\n\n\n\n# 自定义统计方法\n\n通过传入函数作为 method 可以自定义统计逻辑：\n\n{\n  prop: "custom",\n  label: "自定义统计",\n  summary: {\n    type: "custom",\n    method: (values, data) => {\n      // values: 当前列的所有数值\n      // data: 表格完整数据\n      return values.reduce((sum, val) => sum + val, 0);\n    },\n    prefix: "¥",\n    decimals: 2\n  }\n}\n\n\n\n# 表格级别自定义\n\n通过 summarymethod 可以自定义整个表格的统计规则：\n\noptions: {\n  summarymethod: ({ columns, data }) => {\n    const sums = [];\n    columns.foreach((column, index) => {\n      if (index === 0) {\n        sums[index] = \'总计\';\n        return;\n      }\n      const values = data.map(item => number(item[column.property]));\n      sums[index] = values.reduce((sum, val) => sum + val, 0);\n    });\n    return sums;\n  }\n}\n\n\n\n# 嵌套数据统计\n\n通过 path 属性可以统计嵌套对象中的数据：\n\n{\n  prop: "nested.value",\n  label: "嵌套数据",\n  summary: {\n    type: "sum",\n    path: "nested.value",  // 指定数据路径\n    decimals: 2\n  }\n}\n\n\n\n# api\n\n\n# column summary 配置\n\n参数           说明                   类型         默认值\ntype         统计类型                 string     -\nprefix       统计值前缀                string     \'\'\nsuffix       统计值后缀                string     \'\'\ndecimals     小数位数                 number     2\npath         数据路径（用于嵌套数据）         string     -\nignorezero   是否忽略0值               boolean    false\nabsolute     是否取绝对值               boolean    false\npredicate    计数条件（仅用于count）       function   -\nmethod       自定义统计方法（仅用于custom）   function   -\n\n\n# options 配置\n\n参数              说明                         类型         默认值\nsummarydata     不使用表格data数据，而使用外部传入的统计数据   array      -\nshowsummary     是否显示统计行                    boolean    false\nsummarymethod   自定义统计方法                    function   -\n\n\n# 内置统计类型\n\n类型       说明      可选值\nsum      求和      ignorezero, absolute\navg      平均值     ignorezero\ncount    计数      ignorezero, predicate\nmax      最大值     absolute\nmin      最小值     absolute\ncustom   自定义方法   method\n\n\n# summarymethod 参数\n\n参数        说明      类型\ncolumns   列配置数组   array\ndata      表格数据    array',charsets:{cjk:!0}},{title:"表格选中",frontmatter:{},regularPath:"/guide/crud/selection.html",relativePath:"guide/crud/selection.md",key:"v-4baf3a07",path:"/guide/crud/selection.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"跨分页选中",slug:"跨分页选中",normalizedTitle:"跨分页选中",charIndex:80},{level:2,title:"选中事件",slug:"选中事件",normalizedTitle:"选中事件",charIndex:2282},{level:2,title:"单选",slug:"单选",normalizedTitle:"单选",charIndex:21},{level:2,title:"数据同步",slug:"数据同步",normalizedTitle:"数据同步",charIndex:115},{level:3,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:5126},{level:2,title:"selection 配置项",slug:"selection-配置项",normalizedTitle:"selection 配置项",charIndex:7812},{level:2,title:"singleSelection 配置项",slug:"singleselection-配置项",normalizedTitle:"singleselection 配置项",charIndex:8487}],headersStr:"概述 跨分页选中 选中事件 单选 数据同步 应用场景 selection 配置项 singleSelection 配置项",content:'# 表格选中\n\n\n# 概述\n\n表格选中分为单选和多选，通过 selected 响应式绑定选中数据。\n\n表格选中功能支持以下特性：\n\n * 单选和多选模式\n * 跨分页选中\n * 键盘操作（Ctrl、Shift、Alt）\n * 选中数据同步\n\n\n# 跨分页选中\n\nselected 绑定响应式选中数据，存在数据时会自动选中\nselection 开启表格多选选中\nselection.reserveSelection 开启数据更新时保持选中状态\n\n\n<template>\r\n  <div>\r\n    <el-button @click="handleClick">手动更新选中数据</el-button>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedRows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedRows: [\r\n        {\r\n          id: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n        },\r\n        {\r\n          id: 3,\r\n        },\r\n        {\r\n          id: 8,\r\n        },\r\n        {\r\n          id: 7,\r\n        },\r\n      ],\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        selection: {\r\n          reserveSelection: true, // 是否保留选中状态\r\n          ctrlSelect: true, // 是否启用 Ctrl 键点击选中\r\n          shiftSelect: true, // 是否启用 Shift 键批量选中\r\n          banner: true, // 是否显示横幅\r\n          maxDisplay: 3, // 直接显示的最大数量\r\n          labelKey: "name", // 显示的字段名\r\n          clear: true, // 是否显示清除按钮\r\n          selectable: (row, index) => {\r\n            return index !== 0 && index !== 7;\r\n          },\r\n        },\r\n        init: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    selectedNames() {\r\n      return this.selectedRows.map((row) => row.name).join("、");\r\n    },\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getList(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n    handleClick() {\r\n      this.selectedRows = [\r\n        {\r\n          id: 1,\r\n          name: "用户1",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "用户3",\r\n        },\r\n      ];\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 选中事件\n\n@selection-change 选中项发生变化时触发\n@select 用户手动选择/取消选择某一行时触发\n@select-all 用户手动选择/取消选择所有行时触发\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :selected="selectedRows"\r\n      :options="options"\r\n      :data="data"\r\n      @selection-change="handleSelectionChange"\r\n      @select="handleSelect"\r\n      @select-all="handleSelectAll"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedRows: [],\r\n      options: {\r\n        selection: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n        ],\r\n      },\r\n      data: [\r\n        { id: 1, name: "张三", gender: "男" },\r\n        { id: 2, name: "李四", gender: "女" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleSelectionChange(selection) {\r\n      this.$message.success(`选中 ${selection.length} 条数据`);\r\n    },\r\n    handleSelect(selection, row) {\r\n      this.$message.info(\r\n        `${row.name} ${selection.includes(row) ? "被选中" : "取消选中"}`\r\n      );\r\n    },\r\n    handleSelectAll(selection) {\r\n      this.$message.info(`${selection.length ? "全选" : "取消全选"}`);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单选\n\nselected 绑定响应式选中数据，存在数据时会自动选中\nsingleSelection 开启单选模式\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedRows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedRows: {\r\n        id: 2,\r\n      },\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        singleSelection: {\r\n          banner: true,\r\n          ctrlSelect: true,\r\n          labelKey: "name",\r\n          selectable: (row, index) => {\r\n            return index !== 0;\r\n          },\r\n        },\r\n        init: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    selectedNames() {\r\n      return this.selectedRows.map((row) => row.name).join("、");\r\n    },\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getList(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 数据同步\n\n当 selected 数组与表格数据不一致时，可以通过 dataSyncSelected 参数控制数据同步方向：\n\n * 当 dataSyncSelected 为 true 时，表格会将 selected 数组中的数据同步到表格数据中（selected → data）\n * 当 dataSyncSelected 为 false 时（默认值），表格会将 data 数组中的数据同步到 selected 数组中（data → selected）\n\n\n# 应用场景\n\n * 选中数据包含表格中不显示的字段\n * 选中数据需要在分页切换后保持一致\n * 选中数据被外部修改后需要同步到表格中\n\n<template>\r\n  <div>\r\n    <div class="demo-buttons">\r\n      <el-button @click="handleClick">更新选中数据</el-button>\r\n      <el-button @click="toggleDataSyncSelected">切换同步方向</el-button>\r\n    </div>\r\n    <div class="demo-info">\r\n      <p>dataSyncSelected = {{ options.dataSyncSelected }} {{ options.dataSyncSelected ? \'(selected → 表格数据)\' : \'(表格数据 → selected)\' }}</p>\r\n      <p>选中数据 {{ JSON.stringify(selectedRows) }}</p>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedRows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getList="getList"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedRows: [\r\n        { id: 1, customField: "自定义值1" },\r\n        { id: 2, customField: "自定义值2" },\r\n      ],\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n      },\r\n      options: {\r\n        editConfig: {\r\n          mode: "row",\r\n          edit: true,\r\n        },\r\n        selection: {\r\n          reserveSelection: true,\r\n          banner: true,\r\n          labelKey: "name",\r\n        },\r\n        dataSyncSelected: true,\r\n        init: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n          {\r\n            prop: "customField",\r\n            label: "自定义字段",\r\n            formatter: (row) => row.customField || "无数据",\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getList(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n    handleClick() {\r\n      // 更新选中数据\r\n      // 当dataSyncSelected=true时：customField字段的值会同步到表格数据中\r\n      // 当dataSyncSelected=false时：只会根据id匹配选中状态，customField不会同步\r\n      this.selectedRows = [\r\n        { id: 1, customField: "更新的值" },\r\n        { id: 3, customField: "新增的值" },\r\n      ];\r\n    },\r\n    toggleDataSyncSelected() {\r\n      // 切换数据同步方向\r\n      // true: selected数组中的数据会同步到表格数据中\r\n      // false: 表格只会根据operateKey匹配选中状态，不会同步其他字段\r\n      this.options.dataSyncSelected = !this.options.dataSyncSelected;\r\n      this.getList();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-buttons {\r\n  margin-bottom: 15px;\r\n}\r\n.demo-info {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n\n\n\n# selection 配置项\n\n参数                 说明                 类型                     默认值\nreserveSelection   是否启用分页选中           boolean                false\nselectable         是否可以勾选             Function(row, index)   -\nbanner             是否显示选中项横幅          boolean                false\nctrlSelect         是否启用 Ctrl 键点击选中    boolean                true\nshiftSelect        是否启用 Shift 键批量选中   boolean                true\nmaxDisplay         直接显示的最大数量          number                 3\nlabelKey           显示的字段名             string                 \'id\'\nclear              是否显示清除按钮           boolean                true\ndataSyncSelected   控制数据同步方向           boolean                false\n\n\n# singleSelection 配置项\n\n参数           说明                类型                     默认值\nselectable   是否可以勾选            Function(row, index)   -\nbanner       是否显示选中项横幅         boolean                false\nctrlSelect   是否启用 Ctrl 键点击选中   boolean                true\nlabelKey     显示的字段名            string                 \'id\'\nclear        是否显示清除按钮          boolean                true',normalizedContent:'# 表格选中\n\n\n# 概述\n\n表格选中分为单选和多选，通过 selected 响应式绑定选中数据。\n\n表格选中功能支持以下特性：\n\n * 单选和多选模式\n * 跨分页选中\n * 键盘操作（ctrl、shift、alt）\n * 选中数据同步\n\n\n# 跨分页选中\n\nselected 绑定响应式选中数据，存在数据时会自动选中\nselection 开启表格多选选中\nselection.reserveselection 开启数据更新时保持选中状态\n\n\n<template>\r\n  <div>\r\n    <el-button @click="handleclick">手动更新选中数据</el-button>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedrows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedrows: [\r\n        {\r\n          id: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n        },\r\n        {\r\n          id: 3,\r\n        },\r\n        {\r\n          id: 8,\r\n        },\r\n        {\r\n          id: 7,\r\n        },\r\n      ],\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        selection: {\r\n          reserveselection: true, // 是否保留选中状态\r\n          ctrlselect: true, // 是否启用 ctrl 键点击选中\r\n          shiftselect: true, // 是否启用 shift 键批量选中\r\n          banner: true, // 是否显示横幅\r\n          maxdisplay: 3, // 直接显示的最大数量\r\n          labelkey: "name", // 显示的字段名\r\n          clear: true, // 是否显示清除按钮\r\n          selectable: (row, index) => {\r\n            return index !== 0 && index !== 7;\r\n          },\r\n        },\r\n        init: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    selectednames() {\r\n      return this.selectedrows.map((row) => row.name).join("、");\r\n    },\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getlist(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n    handleclick() {\r\n      this.selectedrows = [\r\n        {\r\n          id: 1,\r\n          name: "用户1",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "用户3",\r\n        },\r\n      ];\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 选中事件\n\n@selection-change 选中项发生变化时触发\n@select 用户手动选择/取消选择某一行时触发\n@select-all 用户手动选择/取消选择所有行时触发\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :selected="selectedrows"\r\n      :options="options"\r\n      :data="data"\r\n      @selection-change="handleselectionchange"\r\n      @select="handleselect"\r\n      @select-all="handleselectall"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedrows: [],\r\n      options: {\r\n        selection: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n        ],\r\n      },\r\n      data: [\r\n        { id: 1, name: "张三", gender: "男" },\r\n        { id: 2, name: "李四", gender: "女" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleselectionchange(selection) {\r\n      this.$message.success(`选中 ${selection.length} 条数据`);\r\n    },\r\n    handleselect(selection, row) {\r\n      this.$message.info(\r\n        `${row.name} ${selection.includes(row) ? "被选中" : "取消选中"}`\r\n      );\r\n    },\r\n    handleselectall(selection) {\r\n      this.$message.info(`${selection.length ? "全选" : "取消全选"}`);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单选\n\nselected 绑定响应式选中数据，存在数据时会自动选中\nsingleselection 开启单选模式\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedrows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedrows: {\r\n        id: 2,\r\n      },\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        singleselection: {\r\n          banner: true,\r\n          ctrlselect: true,\r\n          labelkey: "name",\r\n          selectable: (row, index) => {\r\n            return index !== 0;\r\n          },\r\n        },\r\n        init: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    selectednames() {\r\n      return this.selectedrows.map((row) => row.name).join("、");\r\n    },\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getlist(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 数据同步\n\n当 selected 数组与表格数据不一致时，可以通过 datasyncselected 参数控制数据同步方向：\n\n * 当 datasyncselected 为 true 时，表格会将 selected 数组中的数据同步到表格数据中（selected → data）\n * 当 datasyncselected 为 false 时（默认值），表格会将 data 数组中的数据同步到 selected 数组中（data → selected）\n\n\n# 应用场景\n\n * 选中数据包含表格中不显示的字段\n * 选中数据需要在分页切换后保持一致\n * 选中数据被外部修改后需要同步到表格中\n\n<template>\r\n  <div>\r\n    <div class="demo-buttons">\r\n      <el-button @click="handleclick">更新选中数据</el-button>\r\n      <el-button @click="toggledatasyncselected">切换同步方向</el-button>\r\n    </div>\r\n    <div class="demo-info">\r\n      <p>datasyncselected = {{ options.datasyncselected }} {{ options.datasyncselected ? \'(selected → 表格数据)\' : \'(表格数据 → selected)\' }}</p>\r\n      <p>选中数据 {{ json.stringify(selectedrows) }}</p>\r\n    </div>\r\n    <sc-crud\r\n      :loading.sync="loading"\r\n      :search.sync="search"\r\n      :selected.sync="selectedrows"\r\n      :options="options"\r\n      :data="data"\r\n      :total="total"\r\n      @getlist="getlist"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selectedrows: [\r\n        { id: 1, customfield: "自定义值1" },\r\n        { id: 2, customfield: "自定义值2" },\r\n      ],\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 10,\r\n      },\r\n      options: {\r\n        editconfig: {\r\n          mode: "row",\r\n          edit: true,\r\n        },\r\n        selection: {\r\n          reserveselection: true,\r\n          banner: true,\r\n          labelkey: "name",\r\n        },\r\n        datasyncselected: true,\r\n        init: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n          {\r\n            prop: "customfield",\r\n            label: "自定义字段",\r\n            formatter: (row) => row.customfield || "无数据",\r\n          },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getlist(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n    handleclick() {\r\n      // 更新选中数据\r\n      // 当datasyncselected=true时：customfield字段的值会同步到表格数据中\r\n      // 当datasyncselected=false时：只会根据id匹配选中状态，customfield不会同步\r\n      this.selectedrows = [\r\n        { id: 1, customfield: "更新的值" },\r\n        { id: 3, customfield: "新增的值" },\r\n      ];\r\n    },\r\n    toggledatasyncselected() {\r\n      // 切换数据同步方向\r\n      // true: selected数组中的数据会同步到表格数据中\r\n      // false: 表格只会根据operatekey匹配选中状态，不会同步其他字段\r\n      this.options.datasyncselected = !this.options.datasyncselected;\r\n      this.getlist();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-buttons {\r\n  margin-bottom: 15px;\r\n}\r\n.demo-info {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n\n\n\n# selection 配置项\n\n参数                 说明                 类型                     默认值\nreserveselection   是否启用分页选中           boolean                false\nselectable         是否可以勾选             function(row, index)   -\nbanner             是否显示选中项横幅          boolean                false\nctrlselect         是否启用 ctrl 键点击选中    boolean                true\nshiftselect        是否启用 shift 键批量选中   boolean                true\nmaxdisplay         直接显示的最大数量          number                 3\nlabelkey           显示的字段名             string                 \'id\'\nclear              是否显示清除按钮           boolean                true\ndatasyncselected   控制数据同步方向           boolean                false\n\n\n# singleselection 配置项\n\n参数           说明                类型                     默认值\nselectable   是否可以勾选            function(row, index)   -\nbanner       是否显示选中项横幅         boolean                false\nctrlselect   是否启用 ctrl 键点击选中   boolean                true\nlabelkey     显示的字段名            string                 \'id\'\nclear        是否显示清除按钮          boolean                true',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/dialog/baseUse.html",relativePath:"guide/dialog/baseUse.md",key:"v-1abf8fdf",path:"/guide/dialog/baseUse.html",headers:[{level:2,title:"基本使用",slug:"基本使用-2",normalizedTitle:"基本使用",charIndex:2},{level:2,title:"通过实例控制弹窗",slug:"通过实例控制弹窗",normalizedTitle:"通过实例控制弹窗",charIndex:2060},{level:2,title:"确认和取消前的钩子函数",slug:"确认和取消前的钩子函数",normalizedTitle:"确认和取消前的钩子函数",charIndex:3802},{level:2,title:"自定义底部按钮",slug:"自定义底部按钮",normalizedTitle:"自定义底部按钮",charIndex:5546},{level:2,title:"抽屉式弹窗",slug:"抽屉式弹窗",normalizedTitle:"抽屉式弹窗",charIndex:67},{level:2,title:"扩展功能：拖拽和调整大小",slug:"扩展功能-拖拽和调整大小",normalizedTitle:"扩展功能：拖拽和调整大小",charIndex:9066},{level:2,title:"API 文档",slug:"api-文档",normalizedTitle:"api 文档",charIndex:9467},{level:3,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:9109},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:2091},{level:3,title:"钩子函数",slug:"钩子函数",normalizedTitle:"钩子函数",charIndex:3809}],headersStr:"基本使用 通过实例控制弹窗 确认和取消前的钩子函数 自定义底部按钮 抽屉式弹窗 扩展功能：拖拽和调整大小 API 文档 属性 方法 钩子函数",content:'# 基本使用\n\nDialog 是一个基于 element-ui 的弹窗组件封装，提供了丰富的弹窗功能和灵活的渲染方式。它支持普通弹窗和抽屉式弹窗，并提供了拖拽、调整大小等扩展功能。\n\n\n# 基本使用\n\nDialog 组件支持两种渲染方式：\n\n * 通过 render 函数渲染内容\n * 通过 comp 配置组件渲染内容\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="openDialog"\r\n      >component配置弹窗</el-button\r\n    >\r\n    <el-button size="small" type="primary" @click="renderDialog"\r\n      >render函数弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    renderColumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.$scDialog({\r\n        title: "comp配置",\r\n        width: "500px",\r\n        comp: {\r\n          name: "sc-form",\r\n          renderColumns: this.renderColumns,\r\n        },\r\n      }).show(\r\n        () => {\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        () => {\r\n          this.$message.success("取消");\r\n        }\r\n      );\r\n    },\r\n    renderDialog() {\r\n      this.$scDialog({\r\n        title: "render函数",\r\n        width: "500px",\r\n        render: (h, vm) => {\r\n          return (\r\n            <sc-form v-model={this.form} renderColumns={this.renderColumns} />\r\n          );\r\n        },\r\n      }).show(\r\n        () => {\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        () => {\r\n          this.$message.success("取消");\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 通过实例控制弹窗\n\nDialog 组件返回的实例提供了多种控制方法：\n\n * show() 打开弹窗\n * hide() 关闭弹窗\n * loading 控制加载状态\n\n通过保存弹窗实例，可以在组件内部进行弹窗控制。\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="openDialog">弹窗</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    renderColumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      const vm = this.$scDialog({\r\n        title: "手动控制弹窗",\r\n        width: "500px",\r\n        render: (h) => {\r\n          return (\r\n            <div>\r\n              <el-button\r\n                onClick={() => vm.hide()}\r\n                type="primary"\r\n                style="margin-bottom: 20px;"\r\n              >\r\n                点击关闭弹窗\r\n              </el-button>\r\n              <el-button\r\n                onClick={() => (vm.loading = true)}\r\n                type="primary"\r\n                style="margin-bottom: 20px;"\r\n              >\r\n                弹窗loading\r\n              </el-button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n      vm.show(() => {\r\n        this.$message.success("确认");\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 确认和取消前的钩子函数\n\nDialog 组件提供了确认和取消前的钩子函数，可以在这些函数中执行自定义逻辑：\n\n * confirm 确认前钩子，可以执行表单验证等操作\n * cancel 取消前钩子，可以执行确认提示等操作\n\n这些钩子函数接收一个回调函数作为参数，需要手动调用该回调函数才能关闭弹窗。\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="openDialog"\r\n      >confirm 弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    renderColumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n          required: true,\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n          required: true,\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.$scDialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        render: () => (\r\n          <sc-form\r\n            ref="form"\r\n            v-model={this.form}\r\n            renderColumns={this.renderColumns}\r\n          />\r\n        ),\r\n        confirm: async (cb) => {\r\n          this.$message.success("确认之前校验表单");\r\n          await this.$refs.form.validate();\r\n          cb();\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        cancel: async (cb) => {\r\n          this.$message.error("取消之前");\r\n          cb();\r\n        },\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 自定义底部按钮\n\nDialog 组件支持自定义底部按钮区域：\n\n * footer 配置底部按钮，可以是对象或布尔值\n * footer.align 设置底部按钮的对齐方式，支持 left、center、right\n * footer.confirm 配置确认按钮，设为 false 可隐藏\n * footer.cancel 配置取消按钮，设为 false 可隐藏\n * footer.handles 添加自定义按钮\n * footer.hidden 设为 true 可隐藏整个底部区域\n * footer 设为 false 可隐藏整个底部区域\n\n通过 footer.render 函数可以完全自定义底部内容，该函数接收三个参数：\n\n * h - 渲染函数\n * vm - 弹窗实例\n * buttonRender - 默认按钮渲染函数，可以在自定义内容中调用此函数渲染默认按钮\n\n// 示例：自定义底部内容，添加额外按钮并保留默认按钮\nfooter: { \n  render: (h, vm, buttonRender) => { \n    return ( \n      <div class="custom-dialog-footer"> \n        <el-button type="primary"> \n          自定义按钮 \n        </el-button> \n        <div>{buttonRender()}</div> \n      </div> \n    ); \n  }, \n},\n\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="openDialog"\r\n      >自定义底部按钮</el-button\r\n    >\r\n    <el-button size="small" type="primary" @click="openDialog1"\r\n      >隐藏底部按钮</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    renderColumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.$scDialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        footer: {\r\n          align: "left",\r\n          confirm: {\r\n            label: "确认111",\r\n            type: "primary",\r\n          },\r\n          cancel: false,\r\n          handles: [\r\n            {\r\n              label: "自定义",\r\n              type: "primary",\r\n              onClick: (vm) => {\r\n                vm.hide();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }).show();\r\n    },\r\n    openDialog1() {\r\n      this.$scDialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 抽屉式弹窗\n\nDialog 组件支持抽屉式弹窗模式：\n\n * 设置 drawer: true 可启用抽屉模式\n * 抽屉模式下，弹窗从右侧滑出\n * 抽屉模式继承了 Element UI 的 Drawer 组件的所有特性\n\n更多配置可参考 Element UI Drawer 组件\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="openDialog"\r\n      >抽屉式弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    renderColumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.$scDialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        drawer: true,\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 扩展功能：拖拽和调整大小\n\nDialog 组件提供了丰富的交互功能，增强用户体验：\n\n属性           说明                          类型        默认值\ndrag         启用拖拽功能，可通过拖动标题栏移动弹窗位置       Boolean   false\ndragSize     启用调整大小功能，可通过拖动弹窗边缘调整大小      Boolean   false\nfullscreen   启用全屏功能，可通过点击标题栏图标最大化/还原弹窗   Boolean   false\n\n启用这些功能后，弹窗支持以下交互操作：\n\n * 点击标题栏中的 图标可以最大化/还原弹窗\n * 点击标题栏中的 图标可以拖拽弹窗（按住拖动）\n * 拖动弹窗右边缘可以调整宽度\n * 拖动弹窗下边缘可以调整高度\n * 拖动弹窗右下角可以同时调整宽度和高度\n\n\n# API 文档\n\n继承 el-dialog 和 el-drawer 组件的 API\n\n\n# 属性\n\n属性名              说明           类型               默认值\ntitle            弹窗标题         String           -\nwidth            弹窗宽度         String           \'600px\'\ndrawer           是否使用抽屉模式     Boolean          false\ndrag             是否启用拖拽功能     Boolean          true\ndragSize         是否启用调整大小功能   Boolean          true\nfullscreen       是否启用全屏功能     Boolean          true\nfooter           底部按钮配置       Object/Boolean   -\nfooter.align     底部按钮对齐方式     String           \'right\'\nfooter.hidden    是否隐藏底部       Boolean          false\nfooter.confirm   确认按钮配置       Object/Boolean   -\nfooter.cancel    取消按钮配置       Object/Boolean   -\nfooter.handles   自定义按钮列表      Array            []\nfooter.render    自定义底部内容      Function         -\nrender           内容渲染函数       Function         -\ncomp             组件配置         Object           -\ncache            关闭后是否缓存实例    Boolean          false\nclass            自定义类名        String           -\n\n\n# 方法\n\n方法名       说明       参数                                    返回值\nshow      显示弹窗     (confirmCb:()=>{}, cancelCb:()=>{})   弹窗实例\nhide      隐藏弹窗     -                                     弹窗实例\nconfirm   触发确认操作   (params)                              Promise\ncancel    触发取消操作   (params)                              弹窗实例\ndestroy   销毁弹窗实例   -                                     -\n\n\n# 钩子函数\n\n名称        说明        参数\nconfirm   确认前钩子     (callback:()=>{}, instance, params)\ncancel    取消前钩子     (callback:()=>{}, instance, params)\nclosed    弹窗关闭后钩子   (instance)\ncreated   弹窗创建时钩子   (instance)\nmounted   弹窗挂载时钩子   (instance)',normalizedContent:'# 基本使用\n\ndialog 是一个基于 element-ui 的弹窗组件封装，提供了丰富的弹窗功能和灵活的渲染方式。它支持普通弹窗和抽屉式弹窗，并提供了拖拽、调整大小等扩展功能。\n\n\n# 基本使用\n\ndialog 组件支持两种渲染方式：\n\n * 通过 render 函数渲染内容\n * 通过 comp 配置组件渲染内容\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="opendialog"\r\n      >component配置弹窗</el-button\r\n    >\r\n    <el-button size="small" type="primary" @click="renderdialog"\r\n      >render函数弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    rendercolumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    opendialog() {\r\n      this.$scdialog({\r\n        title: "comp配置",\r\n        width: "500px",\r\n        comp: {\r\n          name: "sc-form",\r\n          rendercolumns: this.rendercolumns,\r\n        },\r\n      }).show(\r\n        () => {\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        () => {\r\n          this.$message.success("取消");\r\n        }\r\n      );\r\n    },\r\n    renderdialog() {\r\n      this.$scdialog({\r\n        title: "render函数",\r\n        width: "500px",\r\n        render: (h, vm) => {\r\n          return (\r\n            <sc-form v-model={this.form} rendercolumns={this.rendercolumns} />\r\n          );\r\n        },\r\n      }).show(\r\n        () => {\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        () => {\r\n          this.$message.success("取消");\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 通过实例控制弹窗\n\ndialog 组件返回的实例提供了多种控制方法：\n\n * show() 打开弹窗\n * hide() 关闭弹窗\n * loading 控制加载状态\n\n通过保存弹窗实例，可以在组件内部进行弹窗控制。\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="opendialog">弹窗</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    rendercolumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    opendialog() {\r\n      const vm = this.$scdialog({\r\n        title: "手动控制弹窗",\r\n        width: "500px",\r\n        render: (h) => {\r\n          return (\r\n            <div>\r\n              <el-button\r\n                onclick={() => vm.hide()}\r\n                type="primary"\r\n                style="margin-bottom: 20px;"\r\n              >\r\n                点击关闭弹窗\r\n              </el-button>\r\n              <el-button\r\n                onclick={() => (vm.loading = true)}\r\n                type="primary"\r\n                style="margin-bottom: 20px;"\r\n              >\r\n                弹窗loading\r\n              </el-button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n      vm.show(() => {\r\n        this.$message.success("确认");\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 确认和取消前的钩子函数\n\ndialog 组件提供了确认和取消前的钩子函数，可以在这些函数中执行自定义逻辑：\n\n * confirm 确认前钩子，可以执行表单验证等操作\n * cancel 取消前钩子，可以执行确认提示等操作\n\n这些钩子函数接收一个回调函数作为参数，需要手动调用该回调函数才能关闭弹窗。\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="opendialog"\r\n      >confirm 弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    rendercolumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n          required: true,\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n          required: true,\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    opendialog() {\r\n      this.$scdialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        render: () => (\r\n          <sc-form\r\n            ref="form"\r\n            v-model={this.form}\r\n            rendercolumns={this.rendercolumns}\r\n          />\r\n        ),\r\n        confirm: async (cb) => {\r\n          this.$message.success("确认之前校验表单");\r\n          await this.$refs.form.validate();\r\n          cb();\r\n          console.log(this.form, "this.form");\r\n          this.$message.success("确认");\r\n        },\r\n        cancel: async (cb) => {\r\n          this.$message.error("取消之前");\r\n          cb();\r\n        },\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 自定义底部按钮\n\ndialog 组件支持自定义底部按钮区域：\n\n * footer 配置底部按钮，可以是对象或布尔值\n * footer.align 设置底部按钮的对齐方式，支持 left、center、right\n * footer.confirm 配置确认按钮，设为 false 可隐藏\n * footer.cancel 配置取消按钮，设为 false 可隐藏\n * footer.handles 添加自定义按钮\n * footer.hidden 设为 true 可隐藏整个底部区域\n * footer 设为 false 可隐藏整个底部区域\n\n通过 footer.render 函数可以完全自定义底部内容，该函数接收三个参数：\n\n * h - 渲染函数\n * vm - 弹窗实例\n * buttonrender - 默认按钮渲染函数，可以在自定义内容中调用此函数渲染默认按钮\n\n// 示例：自定义底部内容，添加额外按钮并保留默认按钮\nfooter: { \n  render: (h, vm, buttonrender) => { \n    return ( \n      <div class="custom-dialog-footer"> \n        <el-button type="primary"> \n          自定义按钮 \n        </el-button> \n        <div>{buttonrender()}</div> \n      </div> \n    ); \n  }, \n},\n\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="opendialog"\r\n      >自定义底部按钮</el-button\r\n    >\r\n    <el-button size="small" type="primary" @click="opendialog1"\r\n      >隐藏底部按钮</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    rendercolumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    opendialog() {\r\n      this.$scdialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        footer: {\r\n          align: "left",\r\n          confirm: {\r\n            label: "确认111",\r\n            type: "primary",\r\n          },\r\n          cancel: false,\r\n          handles: [\r\n            {\r\n              label: "自定义",\r\n              type: "primary",\r\n              onclick: (vm) => {\r\n                vm.hide();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }).show();\r\n    },\r\n    opendialog1() {\r\n      this.$scdialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 抽屉式弹窗\n\ndialog 组件支持抽屉式弹窗模式：\n\n * 设置 drawer: true 可启用抽屉模式\n * 抽屉模式下，弹窗从右侧滑出\n * 抽屉模式继承了 element ui 的 drawer 组件的所有特性\n\n更多配置可参考 element ui drawer 组件\n\n<template>\r\n  <div>\r\n    <el-button size="small" type="primary" @click="opendialog"\r\n      >抽屉式弹窗</el-button\r\n    >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n    };\r\n  },\r\n  computed: {\r\n    rendercolumns() {\r\n      return [\r\n        {\r\n          prop: "name",\r\n          label: "姓名",\r\n        },\r\n        {\r\n          prop: "age",\r\n          label: "年龄",\r\n        },\r\n        {\r\n          prop: "sex",\r\n          label: "性别",\r\n          comp: {\r\n            name: "el-checkbox-group",\r\n            options: [\r\n              {\r\n                label: "男",\r\n                value: "男",\r\n              },\r\n              {\r\n                label: "女",\r\n                value: "女",\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n  methods: {\r\n    opendialog() {\r\n      this.$scdialog({\r\n        title: "弹窗",\r\n        width: "500px",\r\n        drawer: true,\r\n      }).show();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss" scoped></style>\r\n\n\n\n# 扩展功能：拖拽和调整大小\n\ndialog 组件提供了丰富的交互功能，增强用户体验：\n\n属性           说明                          类型        默认值\ndrag         启用拖拽功能，可通过拖动标题栏移动弹窗位置       boolean   false\ndragsize     启用调整大小功能，可通过拖动弹窗边缘调整大小      boolean   false\nfullscreen   启用全屏功能，可通过点击标题栏图标最大化/还原弹窗   boolean   false\n\n启用这些功能后，弹窗支持以下交互操作：\n\n * 点击标题栏中的 图标可以最大化/还原弹窗\n * 点击标题栏中的 图标可以拖拽弹窗（按住拖动）\n * 拖动弹窗右边缘可以调整宽度\n * 拖动弹窗下边缘可以调整高度\n * 拖动弹窗右下角可以同时调整宽度和高度\n\n\n# api 文档\n\n继承 el-dialog 和 el-drawer 组件的 api\n\n\n# 属性\n\n属性名              说明           类型               默认值\ntitle            弹窗标题         string           -\nwidth            弹窗宽度         string           \'600px\'\ndrawer           是否使用抽屉模式     boolean          false\ndrag             是否启用拖拽功能     boolean          true\ndragsize         是否启用调整大小功能   boolean          true\nfullscreen       是否启用全屏功能     boolean          true\nfooter           底部按钮配置       object/boolean   -\nfooter.align     底部按钮对齐方式     string           \'right\'\nfooter.hidden    是否隐藏底部       boolean          false\nfooter.confirm   确认按钮配置       object/boolean   -\nfooter.cancel    取消按钮配置       object/boolean   -\nfooter.handles   自定义按钮列表      array            []\nfooter.render    自定义底部内容      function         -\nrender           内容渲染函数       function         -\ncomp             组件配置         object           -\ncache            关闭后是否缓存实例    boolean          false\nclass            自定义类名        string           -\n\n\n# 方法\n\n方法名       说明       参数                                    返回值\nshow      显示弹窗     (confirmcb:()=>{}, cancelcb:()=>{})   弹窗实例\nhide      隐藏弹窗     -                                     弹窗实例\nconfirm   触发确认操作   (params)                              promise\ncancel    触发取消操作   (params)                              弹窗实例\ndestroy   销毁弹窗实例   -                                     -\n\n\n# 钩子函数\n\n名称        说明        参数\nconfirm   确认前钩子     (callback:()=>{}, instance, params)\ncancel    取消前钩子     (callback:()=>{}, instance, params)\nclosed    弹窗关闭后钩子   (instance)\ncreated   弹窗创建时钩子   (instance)\nmounted   弹窗挂载时钩子   (instance)',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/dict/baseUse.html",relativePath:"guide/dict/baseUse.md",key:"v-6c0f357a",path:"/guide/dict/baseUse.html",headers:[{level:2,title:"使用字典+增强方法",slug:"使用字典-增强方法",normalizedTitle:"使用字典+增强方法",charIndex:11},{level:2,title:"字典联动",slug:"字典联动",normalizedTitle:"字典联动",charIndex:1689},{level:2,title:"局部字典+联动",slug:"局部字典-联动",normalizedTitle:"局部字典+联动",charIndex:3793},{level:2,title:"字典配合组件使用",slug:"字典配合组件使用",normalizedTitle:"字典配合组件使用",charIndex:5295},{level:2,title:"全局注册",slug:"全局注册",normalizedTitle:"全局注册",charIndex:7079},{level:2,title:"字典注册",slug:"字典注册",normalizedTitle:"字典注册",charIndex:8065},{level:2,title:"动态参数",slug:"动态参数",normalizedTitle:"动态参数",charIndex:8751},{level:2,title:"自定义增强方法",slug:"自定义增强方法",normalizedTitle:"自定义增强方法",charIndex:9042}],headersStr:"使用字典+增强方法 字典联动 局部字典+联动 字典配合组件使用 全局注册 字典注册 动态参数 自定义增强方法",content:'# 基本使用\n\n\n# 使用字典+增强方法\n\n默认字典与全局字典无需注册，直接使用即可\n\n\n<template>\r\n  <div v-if="isMounted">\r\n    <sc-form v-model="form" :options="options">\r\n      <template #defaultDict>\r\n        <el-select v-model="form.defaultDict">\r\n          <el-option\r\n            v-for="item in $scDict.gender"\r\n            :key="item.value"\r\n            :label="item.label"\r\n            :value="item.value"\r\n          />\r\n        </el-select>\r\n      </template>\r\n      <template #normalDict>\r\n        <el-select v-model="form.normalDict">\r\n          <el-option\r\n            v-for="item in $scDict.countries"\r\n            :key="item.value"\r\n            :label="item.label"\r\n            :value="item.value"\r\n          />\r\n        </el-select>\r\n      </template>\r\n    </sc-form>\r\n\r\n    \x3c!-- 展示标签文本 --\x3e\r\n    <p>\r\n      使用增强方法 findLabel 获取标签：{{\r\n        $scDict.countries.findLabel(form.normalDict)\r\n      }}\r\n    </p>\r\n    <p>\r\n      使用增强方法 getOption 获取完整对象：{{\r\n        $scDict.countries.getOption(form.normalDict)\r\n      }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n      tableData: [],\r\n      isMounted: false,\r\n      options: {\r\n        renderColumns: [\r\n          {\r\n            label: "默认字典",\r\n            prop: "defaultDict",\r\n          },\r\n          {\r\n            label: "普通注册字典",\r\n            prop: "normalDict",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.isMounted = true;\r\n    this.$scDict.register("countries", {\r\n      request: mockApi.getProvinces,\r\n    });\r\n    this.$scDict.countries.wait().then((res) => {\r\n      console.log("字典加载完成", res);\r\n    });\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 字典联动\n\n<template>\r\n  <el-form v-if="isMounted" :model="form" label-width="80px">\r\n    \x3c!-- 省份选择 --\x3e\r\n    <el-form-item label="省份">\r\n      <el-select v-model="form.province" placeholder="请选择省份" clearable>\r\n        <el-option\r\n          v-for="item in $scDict.provinces"\r\n          :key="item.value"\r\n          :label="item.label"\r\n          :value="item.value"\r\n        />\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    \x3c!-- 城市选择 --\x3e\r\n    <el-form-item label="城市">\r\n      <el-select\r\n        v-model="form.city"\r\n        placeholder="请选择城市"\r\n        :disabled="!form.province"\r\n        clearable\r\n      >\r\n        <el-option\r\n          v-for="item in $scDict.cities"\r\n          :key="item.value"\r\n          :label="item.label"\r\n          :value="item.value"\r\n        />\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    \x3c!-- 显示选中结果 --\x3e\r\n    <el-form-item label="当前选择">\r\n      <div class="selected-info">\r\n        {{ selectedAddress }}\r\n      </div>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        province: "",\r\n        city: "",\r\n      },\r\n      isMounted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    selectedAddress() {\r\n      if (!this.isMounted) return;\r\n      if (!this.form.province) return "未选择";\r\n      const province = this.$scDict.provinces.findLabel(this.form.province);\r\n      const city = this.$scDict.cities.findLabel(this.form.city);\r\n      return city ? `${province} - ${city}` : province;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.isMounted = true;\r\n    // 注册省份字典\r\n    this.$scDict.register("provinces", {\r\n      request: mockApi.getProvinces,\r\n      immediate: true,\r\n    });\r\n\r\n    // 注册城市字典，使用函数形式的params监听省份变化\r\n    this.$scDict.register("cities", {\r\n      request: mockApi.getCities,\r\n      // 监听省份变化，返回请求参数\r\n      params: () => this.form.province,\r\n    });\r\n  },\r\n  watch: {\r\n    // 当省份改变时，清空城市选择\r\n    "form.province"() {\r\n      this.form.city = "";\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.selected-info {\r\n  color: #409eff;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n\n\n\n# 局部字典+联动\n\n字典数据不共用，需要配合现有组件使用，local 设置局部字典\n\n\n<template>\r\n  <sc-crud v-if="isMounted" :data.sync="data" :options="options"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../mock";\r\nexport default {\r\n  name: "AddressSelect",\r\n  data() {\r\n    return {\r\n      isMounted: false,\r\n      data: [\r\n        {\r\n          province: "",\r\n          city: "",\r\n        },\r\n        {\r\n          province: "",\r\n          city: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.isMounted = true;\r\n    this.$scDict.register("provinces", {\r\n      request: mockApi.getProvinces,\r\n      immediate: true,\r\n    });\r\n  },\r\n  computed: {\r\n    options() {\r\n      if (!this.isMounted) return {};\r\n      return {\r\n        renderColumns: [\r\n          {\r\n            label: "省份",\r\n            prop: "pro",\r\n            comp: {\r\n              name: "el-select",\r\n              options: this.$scDict.provinces,\r\n              on: {\r\n                change: (val, { row }) => {\r\n                  row.city = "";\r\n                },\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "城市",\r\n            prop: "city",\r\n            dict: {\r\n              local: true,\r\n              request: mockApi.getCities,\r\n              // 监听省份变化，返回请求参数\r\n              params: ({ row }) => row.pro,\r\n              immediate: false,\r\n            },\r\n            comp: {\r\n              name: "el-select",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 字典配合组件使用\n\n<template>\r\n  <div>\r\n    <sc-form v-model="form" :options="options"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        sexValue: [],\r\n      },\r\n      options: {\r\n        labelWidth: "150px",\r\n        renderColumns: [\r\n          {\r\n            prop: "cascade",\r\n            label: "级联数据格式化组件",\r\n            dict: "cascade",\r\n            comp: {\r\n              name: "sc-cascade-format",\r\n            },\r\n          },\r\n          {\r\n            prop: "cascade",\r\n            label: "级联组件",\r\n            dict: "cascade",\r\n            comp: {\r\n              name: "el-cascader",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexValue",\r\n            label: " 值格式化标签组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "sc-value-format",\r\n              color: "auto",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexValue",\r\n            label: "选择器",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n            },\r\n          },\r\n          {\r\n            prop: "sexValue",\r\n            label: "开关组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-switch",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexValue",\r\n            label: "单选框组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-radio-group",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexValue",\r\n            label: "复选框组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-checkbox-group",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 全局注册\n\nimport superCrud from "src";\n\nVue.use(superCrud, {\n  // 默认字典配置项\n  dict: {\n    request: (key) => request({\n      url: \'/dict/type/\' + key,\n      method: \'get\'\n    }),\n    value: "value",\n    label: "label",\n    color: "color",\n    children: "children",\n  },\n  // 注册全局字典模板\n  template: {\n    dicts: {\n      userStatus: {\n        request: () => request(\'/api/user/status\'),\n        transform: (data) => {\n          return data.map(item => ({\n            label: item.name,\n            value: item.id\n          }))\n        }\n      },\n      userList: {\n        request: () => request(\'/api/user/list\'),\n      }\n    }\n  },\n});\n\n\n全局注册的字典直接使用即可, 会通过 $scDict[key] 自动获取字典数据\n\n\nkey 为字典的注册名称：\n\n * 匹配到名为key的全局字典模板\n * 如果匹配不到名为key的全局字典模板，会自动将key作为默认字典请求函数的参数\n\n<template>\n  <div>\n    {{ $scDict.userStatus }}\n  </div>\n</template>\n<script>\nexport default {\n  async created() {\n    await this.$scDict.sys_normal_disable.wait();\n    console.log(this.$scDict.sys_normal_disable);\n  },\n};\n<\/script>\n\n\n\n# 字典注册\n\n// 方式一：直接传入请求函数\nthis.$scDict.register(\'userStatus\', request(\'/api/user/status\'))\n\n// 方式二：传入配置对象\nthis.$scDict.register(\'userList\', {\n  request: () => request(\'/api/user/list\'),\n  immediate: true,\n  transform: (data) => {\n    return data.map(item => ({\n      label: item.name,\n      value: item.id\n    }))\n  }\n})\n\n// 方式三：本地静态数据\nthis.$scDict.register(\'gender\', {\n  options: [\n    { label: \'男\', value: 1 },\n    { label: \'女\', value: 2 }\n  ]\n})\n\n// 批量注册\nthis.$scDict.registerBatch({\n  gender: {\n    options: [\n      { label: \'男\', value: 1 },\n      { label: \'女\', value: 2 }\n    ]\n  },\n  userStatus: () => request(\'/api/user/status\'),\n  userList: () => request(\'/api/user/list\'),\n})\n\n\n\n# 动态参数\n\n// 参数为函数形式时监听响应式数据变化\nthis.$scDict.register(\'cityList\', {\n  request: (params) => request(\'/api/cities\', params),\n  params: () => ({\n    provinceId: this.selectedProvince\n  }),\n  immediate: true  // 会立即执行 params 函数并请求数据\n})\n\n// 手动传入参数\nthis.$scDict.get(\'cityList\', { provinceId: 1 })\n\n\n\n# 自定义增强方法\n\nthis.$scDict.register(\'countries\', {\n  request: mockApi.getProvinces,\n  enhanceDict: {\n    customFindLabel: (value, key, dictData, meta) =>\n      dictData.find((item) => item.value === value)?.label,\n  },\n});\n\n// 使用\nthis.$scDict.countries.customFindLabel(1)\n',normalizedContent:'# 基本使用\n\n\n# 使用字典+增强方法\n\n默认字典与全局字典无需注册，直接使用即可\n\n\n<template>\r\n  <div v-if="ismounted">\r\n    <sc-form v-model="form" :options="options">\r\n      <template #defaultdict>\r\n        <el-select v-model="form.defaultdict">\r\n          <el-option\r\n            v-for="item in $scdict.gender"\r\n            :key="item.value"\r\n            :label="item.label"\r\n            :value="item.value"\r\n          />\r\n        </el-select>\r\n      </template>\r\n      <template #normaldict>\r\n        <el-select v-model="form.normaldict">\r\n          <el-option\r\n            v-for="item in $scdict.countries"\r\n            :key="item.value"\r\n            :label="item.label"\r\n            :value="item.value"\r\n          />\r\n        </el-select>\r\n      </template>\r\n    </sc-form>\r\n\r\n    \x3c!-- 展示标签文本 --\x3e\r\n    <p>\r\n      使用增强方法 findlabel 获取标签：{{\r\n        $scdict.countries.findlabel(form.normaldict)\r\n      }}\r\n    </p>\r\n    <p>\r\n      使用增强方法 getoption 获取完整对象：{{\r\n        $scdict.countries.getoption(form.normaldict)\r\n      }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n      tabledata: [],\r\n      ismounted: false,\r\n      options: {\r\n        rendercolumns: [\r\n          {\r\n            label: "默认字典",\r\n            prop: "defaultdict",\r\n          },\r\n          {\r\n            label: "普通注册字典",\r\n            prop: "normaldict",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.ismounted = true;\r\n    this.$scdict.register("countries", {\r\n      request: mockapi.getprovinces,\r\n    });\r\n    this.$scdict.countries.wait().then((res) => {\r\n      console.log("字典加载完成", res);\r\n    });\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 字典联动\n\n<template>\r\n  <el-form v-if="ismounted" :model="form" label-width="80px">\r\n    \x3c!-- 省份选择 --\x3e\r\n    <el-form-item label="省份">\r\n      <el-select v-model="form.province" placeholder="请选择省份" clearable>\r\n        <el-option\r\n          v-for="item in $scdict.provinces"\r\n          :key="item.value"\r\n          :label="item.label"\r\n          :value="item.value"\r\n        />\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    \x3c!-- 城市选择 --\x3e\r\n    <el-form-item label="城市">\r\n      <el-select\r\n        v-model="form.city"\r\n        placeholder="请选择城市"\r\n        :disabled="!form.province"\r\n        clearable\r\n      >\r\n        <el-option\r\n          v-for="item in $scdict.cities"\r\n          :key="item.value"\r\n          :label="item.label"\r\n          :value="item.value"\r\n        />\r\n      </el-select>\r\n    </el-form-item>\r\n\r\n    \x3c!-- 显示选中结果 --\x3e\r\n    <el-form-item label="当前选择">\r\n      <div class="selected-info">\r\n        {{ selectedaddress }}\r\n      </div>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        province: "",\r\n        city: "",\r\n      },\r\n      ismounted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    selectedaddress() {\r\n      if (!this.ismounted) return;\r\n      if (!this.form.province) return "未选择";\r\n      const province = this.$scdict.provinces.findlabel(this.form.province);\r\n      const city = this.$scdict.cities.findlabel(this.form.city);\r\n      return city ? `${province} - ${city}` : province;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.ismounted = true;\r\n    // 注册省份字典\r\n    this.$scdict.register("provinces", {\r\n      request: mockapi.getprovinces,\r\n      immediate: true,\r\n    });\r\n\r\n    // 注册城市字典，使用函数形式的params监听省份变化\r\n    this.$scdict.register("cities", {\r\n      request: mockapi.getcities,\r\n      // 监听省份变化，返回请求参数\r\n      params: () => this.form.province,\r\n    });\r\n  },\r\n  watch: {\r\n    // 当省份改变时，清空城市选择\r\n    "form.province"() {\r\n      this.form.city = "";\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.selected-info {\r\n  color: #409eff;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n\n\n\n# 局部字典+联动\n\n字典数据不共用，需要配合现有组件使用，local 设置局部字典\n\n\n<template>\r\n  <sc-crud v-if="ismounted" :data.sync="data" :options="options"> </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../mock";\r\nexport default {\r\n  name: "addressselect",\r\n  data() {\r\n    return {\r\n      ismounted: false,\r\n      data: [\r\n        {\r\n          province: "",\r\n          city: "",\r\n        },\r\n        {\r\n          province: "",\r\n          city: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.ismounted = true;\r\n    this.$scdict.register("provinces", {\r\n      request: mockapi.getprovinces,\r\n      immediate: true,\r\n    });\r\n  },\r\n  computed: {\r\n    options() {\r\n      if (!this.ismounted) return {};\r\n      return {\r\n        rendercolumns: [\r\n          {\r\n            label: "省份",\r\n            prop: "pro",\r\n            comp: {\r\n              name: "el-select",\r\n              options: this.$scdict.provinces,\r\n              on: {\r\n                change: (val, { row }) => {\r\n                  row.city = "";\r\n                },\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "城市",\r\n            prop: "city",\r\n            dict: {\r\n              local: true,\r\n              request: mockapi.getcities,\r\n              // 监听省份变化，返回请求参数\r\n              params: ({ row }) => row.pro,\r\n              immediate: false,\r\n            },\r\n            comp: {\r\n              name: "el-select",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 字典配合组件使用\n\n<template>\r\n  <div>\r\n    <sc-form v-model="form" :options="options"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        sexvalue: [],\r\n      },\r\n      options: {\r\n        labelwidth: "150px",\r\n        rendercolumns: [\r\n          {\r\n            prop: "cascade",\r\n            label: "级联数据格式化组件",\r\n            dict: "cascade",\r\n            comp: {\r\n              name: "sc-cascade-format",\r\n            },\r\n          },\r\n          {\r\n            prop: "cascade",\r\n            label: "级联组件",\r\n            dict: "cascade",\r\n            comp: {\r\n              name: "el-cascader",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexvalue",\r\n            label: " 值格式化标签组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "sc-value-format",\r\n              color: "auto",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexvalue",\r\n            label: "选择器",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n            },\r\n          },\r\n          {\r\n            prop: "sexvalue",\r\n            label: "开关组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-switch",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexvalue",\r\n            label: "单选框组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-radio-group",\r\n            },\r\n          },\r\n          {\r\n            prop: "sexvalue",\r\n            label: "复选框组件",\r\n            dict: "gender",\r\n            comp: {\r\n              name: "el-checkbox-group",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  created() {},\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 全局注册\n\nimport supercrud from "src";\n\nvue.use(supercrud, {\n  // 默认字典配置项\n  dict: {\n    request: (key) => request({\n      url: \'/dict/type/\' + key,\n      method: \'get\'\n    }),\n    value: "value",\n    label: "label",\n    color: "color",\n    children: "children",\n  },\n  // 注册全局字典模板\n  template: {\n    dicts: {\n      userstatus: {\n        request: () => request(\'/api/user/status\'),\n        transform: (data) => {\n          return data.map(item => ({\n            label: item.name,\n            value: item.id\n          }))\n        }\n      },\n      userlist: {\n        request: () => request(\'/api/user/list\'),\n      }\n    }\n  },\n});\n\n\n全局注册的字典直接使用即可, 会通过 $scdict[key] 自动获取字典数据\n\n\nkey 为字典的注册名称：\n\n * 匹配到名为key的全局字典模板\n * 如果匹配不到名为key的全局字典模板，会自动将key作为默认字典请求函数的参数\n\n<template>\n  <div>\n    {{ $scdict.userstatus }}\n  </div>\n</template>\n<script>\nexport default {\n  async created() {\n    await this.$scdict.sys_normal_disable.wait();\n    console.log(this.$scdict.sys_normal_disable);\n  },\n};\n<\/script>\n\n\n\n# 字典注册\n\n// 方式一：直接传入请求函数\nthis.$scdict.register(\'userstatus\', request(\'/api/user/status\'))\n\n// 方式二：传入配置对象\nthis.$scdict.register(\'userlist\', {\n  request: () => request(\'/api/user/list\'),\n  immediate: true,\n  transform: (data) => {\n    return data.map(item => ({\n      label: item.name,\n      value: item.id\n    }))\n  }\n})\n\n// 方式三：本地静态数据\nthis.$scdict.register(\'gender\', {\n  options: [\n    { label: \'男\', value: 1 },\n    { label: \'女\', value: 2 }\n  ]\n})\n\n// 批量注册\nthis.$scdict.registerbatch({\n  gender: {\n    options: [\n      { label: \'男\', value: 1 },\n      { label: \'女\', value: 2 }\n    ]\n  },\n  userstatus: () => request(\'/api/user/status\'),\n  userlist: () => request(\'/api/user/list\'),\n})\n\n\n\n# 动态参数\n\n// 参数为函数形式时监听响应式数据变化\nthis.$scdict.register(\'citylist\', {\n  request: (params) => request(\'/api/cities\', params),\n  params: () => ({\n    provinceid: this.selectedprovince\n  }),\n  immediate: true  // 会立即执行 params 函数并请求数据\n})\n\n// 手动传入参数\nthis.$scdict.get(\'citylist\', { provinceid: 1 })\n\n\n\n# 自定义增强方法\n\nthis.$scdict.register(\'countries\', {\n  request: mockapi.getprovinces,\n  enhancedict: {\n    customfindlabel: (value, key, dictdata, meta) =>\n      dictdata.find((item) => item.value === value)?.label,\n  },\n});\n\n// 使用\nthis.$scdict.countries.customfindlabel(1)\n',charsets:{cjk:!0}},{title:"表格校验",frontmatter:{},regularPath:"/guide/crud/validate.html",relativePath:"guide/crud/validate.md",key:"v-38f5f4b7",path:"/guide/crud/validate.html",headers:[{level:2,title:"基础用法",slug:"基础用法",normalizedTitle:"基础用法",charIndex:63},{level:2,title:"正则校验",slug:"正则校验",normalizedTitle:"正则校验",charIndex:28},{level:2,title:"自定义校验",slug:"自定义校验",normalizedTitle:"自定义校验",charIndex:33},{level:2,title:"树级校验",slug:"树级校验",normalizedTitle:"树级校验",charIndex:7743},{level:2,title:"联动校验",slug:"联动校验",normalizedTitle:"联动校验",charIndex:9290},{level:2,title:"全量校验",slug:"全量校验",normalizedTitle:"全量校验",charIndex:11594},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:13478},{level:3,title:"Column 配置",slug:"column-配置",normalizedTitle:"column 配置",charIndex:13486},{level:3,title:"rules 配置",slug:"rules-配置",normalizedTitle:"rules 配置",charIndex:13660},{level:3,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:13789},{level:3,title:"validateField 方法options参数",slug:"validatefield-方法options参数",normalizedTitle:"validatefield 方法options参数",charIndex:14142}],headersStr:"基础用法 正则校验 自定义校验 树级校验 联动校验 全量校验 API Column 配置 rules 配置 Methods validateField 方法options参数",content:'# 表格校验\n\n表格组件支持表单校验功能,包括必填校验、正则校验和自定义校验规则。同时提供了错误提示和错误状态管理。\n\n\n# 基础用法\n\n通过配置列的 required 属性来启用必填校验。支持布尔值和对象两种配置方式:\n\nrenderColumns: [\n  {\n    prop: "name",\n    label: "姓名", \n    required: true // 简单配置\n  },\n  {\n    prop: "age",\n    label: "年龄",\n    required: { // 详细配置 \n      message: "年龄不能为空",\n      trigger: "blur"\n    }\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 57,\r\n          idNumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handleRow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onClick: (ctx) => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onClick: (ctx) => {\r\n                this.$refs.crud.clearValidate();\r\n              },\r\n            },\r\n            {\r\n              label: "表格第二行校验",\r\n              type: "primary",\r\n              onClick: (ctx) => {\r\n                this.$refs.crud.validateField(1);\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            isEdit: true,\r\n            required: ({ $index }) => {\r\n              return $index === 1;\r\n            },\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            required: true,\r\n            isEdit: true,\r\n            form: {\r\n              // 使用form字段自定义编辑模式的组件\r\n              comp: {\r\n                name: "el-select",\r\n                clearable: true,\r\n                children: [\r\n                  {\r\n                    name: "el-option",\r\n                    label: "男",\r\n                    value: "男",\r\n                  },\r\n                  {\r\n                    name: "el-option",\r\n                    label: "女",\r\n                    value: "女",\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 正则校验\n\n通过配置列的 rules 属性来添加正则校验规则。支持内置正则模板和自定义正则对象:\n\nrenderColumns: [\n  {\n    prop: "phone",\n    label: "手机号",\n    rules: ["integer"] // 使用内置正则或预设规则\n  },\n  {\n    prop: "email", \n    label: "邮箱",\n    rules: [{ // 自定义正则\n      regular: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\n      message: "请输入正确的邮箱格式"\n    }]\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n      isEdit: false,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handleRow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onClick: (ctx) => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onClick: (ctx) => {\r\n                this.$refs.crud.clearValidate();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "正整数校验",\r\n            isEdit: true,\r\n            rules: ["integer"],\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "自定义正则校验",\r\n            isEdit: true,\r\n            form: {\r\n              comp: {\r\n                placeholder: "请输入2到16个汉字",\r\n              },\r\n            },\r\n            rules: [\r\n              {\r\n                regular: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\r\n                msg: "请输入2到16个汉字",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 自定义校验\n\n通过配置 rules 的 validator 函数来自定义校验规则。支持获取 scope 参数:\n\nrenderColumns: [\n  {\n    prop: "age",\n    label: "年龄", \n    rules: [{\n      validator: (rule, value, callback, scope) => {\n        if (value < 18) {\n          callback(new Error("年龄不能小于18岁"));\n        } else {\n          callback();\n        }\n      },\n      trigger: "change"\n    }]\n  },\n  {\n    prop: "age",\n    label: "年龄", \n    rules: (scope)=>[{\n      validator: (rule, value, callback) => {\n        if (value < 18) {\n          callback(new Error("年龄不能小于18岁"));\n        } else {\n          callback();\n        }\n      },\n      trigger: "change"\n    }]\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          createTime: "2018-06-02 12:28:47",\r\n          createUser: 94,\r\n          id: 56,\r\n          idNumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updateTime: "2018-09-08 16:33:19",\r\n          updateUser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handleRow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onClick: () => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onClick: () => {\r\n                this.$refs.crud.clearValidate();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            isEdit: true,\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (value) {\r\n                    callback();\r\n                  } else {\r\n                    callback(new Error("error1"));\r\n                  }\r\n                },\r\n                trigger: "change",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 树级校验\n\n<template>\r\n  <sc-crud\r\n    default-expand-all\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "部门A",\r\n          manager: "张三",\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "小组A-1",\r\n              manager: "李四",\r\n              children: [\r\n                {\r\n                  id: 111,\r\n                  name: "成员A-1-1",\r\n                  manager: "",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "小组A-2",\r\n              manager: "王五",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "部门B",\r\n          manager: "赵六",\r\n          children: [\r\n            {\r\n              id: 21,\r\n              name: "小组B-1",\r\n              manager: "",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: {},\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "名称",\r\n            isEdit: false,\r\n          },\r\n          {\r\n            prop: "manager",\r\n            label: "负责人",\r\n            required: true,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 联动校验\n\n通过方法 validateField 函数来精确控制每个校验单元格。\n\n<template>\r\n  <sc-crud ref="crud" default-expand-all :options="options" :data="data">\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "总数量",\r\n          number: 100,\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "子数量",\r\n              number: 50,\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "子数量",\r\n              number: 30,\r\n            },\r\n            {\r\n              id: 13,\r\n              name: "子数量",\r\n              number: "",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "名称",\r\n          },\r\n          {\r\n            prop: "number",\r\n            label: "数量",\r\n            isEdit: ({ row }) => row.name !== "总数量",\r\n            required: true,\r\n            form: {\r\n              comp: {\r\n                type: "number",\r\n                onBlur: (v, { row }) => {\r\n                  const father = this.data[0];\r\n                  father.children.forEach((i) => {\r\n                    if (row === i) return;\r\n                    this.$refs.crud.validateField({\r\n                      row: i,\r\n                      prop: "number",\r\n                    });\r\n                  });\r\n                },\r\n              },\r\n            },\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  const father = this.data[0];\r\n                  if (father.children.some((i) => !i.number)) {\r\n                    callback();\r\n                    return;\r\n                  }\r\n                  let totalNumber = 0;\r\n                  father.children.forEach((item) => {\r\n                    totalNumber += Number(item.number);\r\n                  });\r\n                  if (totalNumber !== father.number) {\r\n                    callback(new Error("【子数量】总和不等于【总数量】"));\r\n                  } else {\r\n                    callback();\r\n                  }\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 全量校验\n\nvalidateAll：对表格所有数据（本地分页、虚拟滚动等场景）进行全量校验\n参数：\nmode：校验模式，all（默认，收集所有错误并弹窗）或 first（遇到第一个错误即中断，且提示报错）\nmaxShow：弹窗中最多显示的错误条数，超出后用“……”省略\n\n\n<template>\r\n  <sc-crud\r\n    ref="crud"\r\n    :loading.sync="loading"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        localPagination: true,\r\n        handleRow: {\r\n          handles: [\r\n            {\r\n              label: "全量校验",\r\n              type: "primary",\r\n              onClick: () => {\r\n                this.$refs.crud.validateAll();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "empty",\r\n            label: "空数据",\r\n            isEdit: true,\r\n            required: true,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n        searchForm: {\r\n          columnWidth: "220px",\r\n          labelWidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockApi.getList(300)({\r\n          pageNum: 1,\r\n          pageSize: 300,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# Column 配置\n\n参数         说明     类型                             默认值\nrequired   是否必填   boolean/object                 false\nrules      校验规则   string/array/function(scope)   -\n\n\n# rules 配置\n\n属性名         类型         说明\nvalidator   Function   自定义验证函数\nmessage     String     错误提示信息\ntrigger     String     触发方式\n\n\n# Methods\n\n方法名             说明            参数                              返回值\nvalidate        校验整个表格        callback(可选)                    Promise\nvalidateField   校验指定行         options: {index/id/row, prop}   Promise\nclearValidate   清除校验          -                               -\nvalidateAll     校验所有数据（含树级）   options: {mode, maxShow}        Promise\n\n\n# validateField 方法options参数\n\n参数      说明       类型\nindex   行索引      number\nid      行ID      string/number\nrow     行数据对象    object\nprop    校验的字段名   string',normalizedContent:'# 表格校验\n\n表格组件支持表单校验功能,包括必填校验、正则校验和自定义校验规则。同时提供了错误提示和错误状态管理。\n\n\n# 基础用法\n\n通过配置列的 required 属性来启用必填校验。支持布尔值和对象两种配置方式:\n\nrendercolumns: [\n  {\n    prop: "name",\n    label: "姓名", \n    required: true // 简单配置\n  },\n  {\n    prop: "age",\n    label: "年龄",\n    required: { // 详细配置 \n      message: "年龄不能为空",\n      trigger: "blur"\n    }\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 57,\r\n          idnumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handlerow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onclick: (ctx) => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onclick: (ctx) => {\r\n                this.$refs.crud.clearvalidate();\r\n              },\r\n            },\r\n            {\r\n              label: "表格第二行校验",\r\n              type: "primary",\r\n              onclick: (ctx) => {\r\n                this.$refs.crud.validatefield(1);\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            isedit: true,\r\n            required: ({ $index }) => {\r\n              return $index === 1;\r\n            },\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            required: true,\r\n            isedit: true,\r\n            form: {\r\n              // 使用form字段自定义编辑模式的组件\r\n              comp: {\r\n                name: "el-select",\r\n                clearable: true,\r\n                children: [\r\n                  {\r\n                    name: "el-option",\r\n                    label: "男",\r\n                    value: "男",\r\n                  },\r\n                  {\r\n                    name: "el-option",\r\n                    label: "女",\r\n                    value: "女",\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 正则校验\n\n通过配置列的 rules 属性来添加正则校验规则。支持内置正则模板和自定义正则对象:\n\nrendercolumns: [\n  {\n    prop: "phone",\n    label: "手机号",\n    rules: ["integer"] // 使用内置正则或预设规则\n  },\n  {\n    prop: "email", \n    label: "邮箱",\n    rules: [{ // 自定义正则\n      regular: /^[a-za-z0-9_-]+@[a-za-z0-9_-]+(\\.[a-za-z0-9_-]+)+$/,\n      message: "请输入正确的邮箱格式"\n    }]\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "识间华中张认",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n      isedit: false,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handlerow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onclick: (ctx) => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onclick: (ctx) => {\r\n                this.$refs.crud.clearvalidate();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "正整数校验",\r\n            isedit: true,\r\n            rules: ["integer"],\r\n          },\r\n          {\r\n            prop: "username",\r\n            label: "自定义正则校验",\r\n            isedit: true,\r\n            form: {\r\n              comp: {\r\n                placeholder: "请输入2到16个汉字",\r\n              },\r\n            },\r\n            rules: [\r\n              {\r\n                regular: /^(?:[\\u4e00-\\u9fa5·]{2,16})$/,\r\n                msg: "请输入2到16个汉字",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 自定义校验\n\n通过配置 rules 的 validator 函数来自定义校验规则。支持获取 scope 参数:\n\nrendercolumns: [\n  {\n    prop: "age",\n    label: "年龄", \n    rules: [{\n      validator: (rule, value, callback, scope) => {\n        if (value < 18) {\n          callback(new error("年龄不能小于18岁"));\n        } else {\n          callback();\n        }\n      },\n      trigger: "change"\n    }]\n  },\n  {\n    prop: "age",\n    label: "年龄", \n    rules: (scope)=>[{\n      validator: (rule, value, callback) => {\n        if (value < 18) {\n          callback(new error("年龄不能小于18岁"));\n        } else {\n          callback();\n        }\n      },\n      trigger: "change"\n    }]\n  }\n]\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          createtime: "2018-06-02 12:28:47",\r\n          createuser: 94,\r\n          id: 56,\r\n          idnumber: "8",\r\n          name: "",\r\n          password: "sed laboris",\r\n          phone: "18157668675",\r\n          gender: "男",\r\n          age: 20,\r\n          status: 35,\r\n          updatetime: "2018-09-08 16:33:19",\r\n          updateuser: 58,\r\n          username: "石洋",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        handlerow: {\r\n          handles: [\r\n            {\r\n              label: "表格校验",\r\n              type: "primary",\r\n              onclick: () => {\r\n                this.$refs.crud.validate();\r\n              },\r\n            },\r\n            {\r\n              label: "清除校验",\r\n              type: "primary",\r\n              onclick: () => {\r\n                this.$refs.crud.clearvalidate();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "昵称",\r\n            isedit: true,\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (value) {\r\n                    callback();\r\n                  } else {\r\n                    callback(new error("error1"));\r\n                  }\r\n                },\r\n                trigger: "change",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 树级校验\n\n<template>\r\n  <sc-crud\r\n    default-expand-all\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "部门a",\r\n          manager: "张三",\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "小组a-1",\r\n              manager: "李四",\r\n              children: [\r\n                {\r\n                  id: 111,\r\n                  name: "成员a-1-1",\r\n                  manager: "",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "小组a-2",\r\n              manager: "王五",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "部门b",\r\n          manager: "赵六",\r\n          children: [\r\n            {\r\n              id: 21,\r\n              name: "小组b-1",\r\n              manager: "",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: {},\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "名称",\r\n            isedit: false,\r\n          },\r\n          {\r\n            prop: "manager",\r\n            label: "负责人",\r\n            required: true,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 联动校验\n\n通过方法 validatefield 函数来精确控制每个校验单元格。\n\n<template>\r\n  <sc-crud ref="crud" default-expand-all :options="options" :data="data">\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "总数量",\r\n          number: 100,\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "子数量",\r\n              number: 50,\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "子数量",\r\n              number: 30,\r\n            },\r\n            {\r\n              id: 13,\r\n              name: "子数量",\r\n              number: "",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "名称",\r\n          },\r\n          {\r\n            prop: "number",\r\n            label: "数量",\r\n            isedit: ({ row }) => row.name !== "总数量",\r\n            required: true,\r\n            form: {\r\n              comp: {\r\n                type: "number",\r\n                onblur: (v, { row }) => {\r\n                  const father = this.data[0];\r\n                  father.children.foreach((i) => {\r\n                    if (row === i) return;\r\n                    this.$refs.crud.validatefield({\r\n                      row: i,\r\n                      prop: "number",\r\n                    });\r\n                  });\r\n                },\r\n              },\r\n            },\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  const father = this.data[0];\r\n                  if (father.children.some((i) => !i.number)) {\r\n                    callback();\r\n                    return;\r\n                  }\r\n                  let totalnumber = 0;\r\n                  father.children.foreach((item) => {\r\n                    totalnumber += number(item.number);\r\n                  });\r\n                  if (totalnumber !== father.number) {\r\n                    callback(new error("【子数量】总和不等于【总数量】"));\r\n                  } else {\r\n                    callback();\r\n                  }\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\n\n\n# 全量校验\n\nvalidateall：对表格所有数据（本地分页、虚拟滚动等场景）进行全量校验\n参数：\nmode：校验模式，all（默认，收集所有错误并弹窗）或 first（遇到第一个错误即中断，且提示报错）\nmaxshow：弹窗中最多显示的错误条数，超出后用“……”省略\n\n\n<template>\r\n  <sc-crud\r\n    ref="crud"\r\n    :loading.sync="loading"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        border: true,\r\n        init: true,\r\n        localpagination: true,\r\n        handlerow: {\r\n          handles: [\r\n            {\r\n              label: "全量校验",\r\n              type: "primary",\r\n              onclick: () => {\r\n                this.$refs.crud.validateall();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "empty",\r\n            label: "空数据",\r\n            isedit: true,\r\n            required: true,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n        searchform: {\r\n          columnwidth: "220px",\r\n          labelwidth: "80px",\r\n        },\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      try {\r\n        const { data, total } = await mockapi.getlist(300)({\r\n          pagenum: 1,\r\n          pagesize: 300,\r\n        });\r\n        this.data = data;\r\n        this.total = total;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# column 配置\n\n参数         说明     类型                             默认值\nrequired   是否必填   boolean/object                 false\nrules      校验规则   string/array/function(scope)   -\n\n\n# rules 配置\n\n属性名         类型         说明\nvalidator   function   自定义验证函数\nmessage     string     错误提示信息\ntrigger     string     触发方式\n\n\n# methods\n\n方法名             说明            参数                              返回值\nvalidate        校验整个表格        callback(可选)                    promise\nvalidatefield   校验指定行         options: {index/id/row, prop}   promise\nclearvalidate   清除校验          -                               -\nvalidateall     校验所有数据（含树级）   options: {mode, maxshow}        promise\n\n\n# validatefield 方法options参数\n\n参数      说明       类型\nindex   行索引      number\nid      行id      string/number\nrow     行数据对象    object\nprop    校验的字段名   string',charsets:{cjk:!0}},{title:"字典组件",frontmatter:{},regularPath:"/guide/dict/component.html",relativePath:"guide/dict/component.md",key:"v-322f6716",path:"/guide/dict/component.html",headers:[{level:2,title:"展示组件",slug:"展示组件",normalizedTitle:"展示组件",charIndex:11},{level:3,title:"DateFormat 日期格式化",slug:"dateformat-日期格式化",normalizedTitle:"dateformat 日期格式化",charIndex:20},{level:3,title:"ValueFormat 值格式化",slug:"valueformat-值格式化",normalizedTitle:"valueformat 值格式化",charIndex:297},{level:3,title:"CascadeFormat 级联数据格式化",slug:"cascadeformat-级联数据格式化",normalizedTitle:"cascadeformat 级联数据格式化",charIndex:1239},{level:2,title:"表单组件",slug:"表单组件",normalizedTitle:"表单组件",charIndex:1869},{level:3,title:"Select 选择器",slug:"select-选择器",normalizedTitle:"select 选择器",charIndex:1973},{level:3,title:"Switch 开关",slug:"switch-开关",normalizedTitle:"switch 开关",charIndex:2534},{level:3,title:"Radio 单选框",slug:"radio-单选框",normalizedTitle:"radio 单选框",charIndex:2764},{level:3,title:"Checkbox 复选框",slug:"checkbox-复选框",normalizedTitle:"checkbox 复选框",charIndex:3190},{level:3,title:"Cascade 级联选择器",slug:"cascade-级联选择器",normalizedTitle:"cascade 级联选择器",charIndex:3886}],headersStr:"展示组件 DateFormat 日期格式化 ValueFormat 值格式化 CascadeFormat 级联数据格式化 表单组件 Select 选择器 Switch 开关 Radio 单选框 Checkbox 复选框 Cascade 级联选择器",content:"# 字典组件\n\n\n# 展示组件\n\n\n# DateFormat 日期格式化\n\n用于格式化日期时间的展示。\n\n参数            说明                            类型       默认值\nvalue         日期时间值，支持long、string、date等格式   any      -\nvalueFormat   输入格式化，不传则由dayjs自动转化           string   -\nformat        输出格式化                         string   YYYY-MM-DD HH:mm:ss\n\n\n# ValueFormat 值格式化\n\n用于将值格式化为标签形式展示。\n\n参数            说明                                                类型             默认值\nvalue         需要格式化的值，多选支持'1,2,3'或[1,2,3]                       string/array   -\nmultiple      是否多选                                              boolean        true\nseparator     多选值的分隔符                                           string         ,\ncolor         标签颜色，支持auto/primary/success/warning/danger/info   string         -\neffect        标签主题                                              string         -\nautoColors    自动颜色列表                                            array          ['primary', 'success', 'warning', 'danger']\nautoEffects   自动主题列表                                            array          ['light', 'plain']\nscope         其他组件传入的参数                                         object         -\nprops         配置选项                                              object         {value:'value', label:'label'}\n\n\n# CascadeFormat 级联数据格式化\n\n用于格式化级联数据的展示。\n\n参数          说明                                                类型             默认值\nvalue       级联值，单选时支持'1,2,3'或[1,2,3]，多选时支持[[1,2,3],[4,5,6]]   string/array   -\nseparator   值的分隔符                                             string         ,\nmultiple    是否多选                                              boolean        false\nscope       其他组件传入的参数                                         object         -\noptions     可选项数据源                                            array          -\nprops       配置选项                                              object         {value:'value', label:'label'}\n\n\n# 表单组件\n\nel-select,el-cascader,el-checkbox-group,el-radio-group,el-switch组件在使用comp进行组件渲染时已默认映射为封装的字典组件\n\n\n# Select 选择器\n\n基于el-select的字典选择器。\n\n参数          说明                        类型                            默认值\nvalue       选中值，多选支持'1,2,3'或[1,2,3]   number/string/boolean/array   -\nseparator   多选值的分隔符                   string                        ,\nmultiple    是否多选                      boolean                       false\nscope       其他组件传入的参数                 object                        -\noptions     可选项数据源                    array                         -\nprops       配置选项                      object                        {value:'value', label:'label'}\n\n\n# Switch 开关\n\n基于el-switch的字典开关。\n\n参数        说明          类型       默认值\nvalue     开关值         any      -\nscope     其他组件传入的参数   object   -\noptions   可选项数据源      array    -\nprops     配置选项        object   {value:'value', label:'label'}\n\n\n# Radio 单选框\n\n基于el-radio-group的字典单选框。\n\n参数        说明                                   类型       默认值\nvalue     选中值                                  any      -\ntype      单选框类型，可选值:el-radio/el-radio-button   string   el-radio\nscope     其他组件传入的参数                            object   -\noptions   可选项数据源                               array    -\nprops     配置选项                                 object   {value:'value', label:'label'}\n\n\n# Checkbox 复选框\n\n基于el-checkbox-group的字典复选框。\n\n参数          说明                                         类型                            默认值\nvalue       选中值，多选支持'1,2,3'或[1,2,3]                    number/string/boolean/array   -\nseparator   值的分隔符                                      string                        ,\ntype        复选框类型，可选值:el-checkbox/el-checkbox-button   string                        el-checkbox\nscope       其他组件传入的参数                                  object                        -\noptions     可选项数据源                                     array                         -\nprops       配置选项                                       object                        {value:'value', label:'label'}\n\n\n# Cascade 级联选择器\n\n基于el-cascader的字典级联选择器。\n\n参数        说明                        类型       默认值\nvalue     选中值，多选支持'1,2,3'或[1,2,3]   array    []\nscope     其他组件传入的参数                 object   -\noptions   可选项数据源                    array    -",normalizedContent:"# 字典组件\n\n\n# 展示组件\n\n\n# dateformat 日期格式化\n\n用于格式化日期时间的展示。\n\n参数            说明                            类型       默认值\nvalue         日期时间值，支持long、string、date等格式   any      -\nvalueformat   输入格式化，不传则由dayjs自动转化           string   -\nformat        输出格式化                         string   yyyy-mm-dd hh:mm:ss\n\n\n# valueformat 值格式化\n\n用于将值格式化为标签形式展示。\n\n参数            说明                                                类型             默认值\nvalue         需要格式化的值，多选支持'1,2,3'或[1,2,3]                       string/array   -\nmultiple      是否多选                                              boolean        true\nseparator     多选值的分隔符                                           string         ,\ncolor         标签颜色，支持auto/primary/success/warning/danger/info   string         -\neffect        标签主题                                              string         -\nautocolors    自动颜色列表                                            array          ['primary', 'success', 'warning', 'danger']\nautoeffects   自动主题列表                                            array          ['light', 'plain']\nscope         其他组件传入的参数                                         object         -\nprops         配置选项                                              object         {value:'value', label:'label'}\n\n\n# cascadeformat 级联数据格式化\n\n用于格式化级联数据的展示。\n\n参数          说明                                                类型             默认值\nvalue       级联值，单选时支持'1,2,3'或[1,2,3]，多选时支持[[1,2,3],[4,5,6]]   string/array   -\nseparator   值的分隔符                                             string         ,\nmultiple    是否多选                                              boolean        false\nscope       其他组件传入的参数                                         object         -\noptions     可选项数据源                                            array          -\nprops       配置选项                                              object         {value:'value', label:'label'}\n\n\n# 表单组件\n\nel-select,el-cascader,el-checkbox-group,el-radio-group,el-switch组件在使用comp进行组件渲染时已默认映射为封装的字典组件\n\n\n# select 选择器\n\n基于el-select的字典选择器。\n\n参数          说明                        类型                            默认值\nvalue       选中值，多选支持'1,2,3'或[1,2,3]   number/string/boolean/array   -\nseparator   多选值的分隔符                   string                        ,\nmultiple    是否多选                      boolean                       false\nscope       其他组件传入的参数                 object                        -\noptions     可选项数据源                    array                         -\nprops       配置选项                      object                        {value:'value', label:'label'}\n\n\n# switch 开关\n\n基于el-switch的字典开关。\n\n参数        说明          类型       默认值\nvalue     开关值         any      -\nscope     其他组件传入的参数   object   -\noptions   可选项数据源      array    -\nprops     配置选项        object   {value:'value', label:'label'}\n\n\n# radio 单选框\n\n基于el-radio-group的字典单选框。\n\n参数        说明                                   类型       默认值\nvalue     选中值                                  any      -\ntype      单选框类型，可选值:el-radio/el-radio-button   string   el-radio\nscope     其他组件传入的参数                            object   -\noptions   可选项数据源                               array    -\nprops     配置选项                                 object   {value:'value', label:'label'}\n\n\n# checkbox 复选框\n\n基于el-checkbox-group的字典复选框。\n\n参数          说明                                         类型                            默认值\nvalue       选中值，多选支持'1,2,3'或[1,2,3]                    number/string/boolean/array   -\nseparator   值的分隔符                                      string                        ,\ntype        复选框类型，可选值:el-checkbox/el-checkbox-button   string                        el-checkbox\nscope       其他组件传入的参数                                  object                        -\noptions     可选项数据源                                     array                         -\nprops       配置选项                                       object                        {value:'value', label:'label'}\n\n\n# cascade 级联选择器\n\n基于el-cascader的字典级联选择器。\n\n参数        说明                        类型       默认值\nvalue     选中值，多选支持'1,2,3'或[1,2,3]   array    []\nscope     其他组件传入的参数                 object   -\noptions   可选项数据源                    array    -",charsets:{cjk:!0}},{title:"表格编辑",frontmatter:{},regularPath:"/guide/crud/tableEdit.html",relativePath:"guide/crud/tableEdit.md",key:"v-43b81a2f",path:"/guide/crud/tableEdit.html",headers:[{level:2,title:"基础配置",slug:"基础配置",normalizedTitle:"基础配置",charIndex:65},{level:2,title:"自由编辑",slug:"自由编辑",normalizedTitle:"自由编辑",charIndex:41},{level:3,title:"全局自由编辑",slug:"全局自由编辑",normalizedTitle:"全局自由编辑",charIndex:652},{level:3,title:"单列自由编辑",slug:"单列自由编辑",normalizedTitle:"单列自由编辑",charIndex:2437},{level:2,title:"行编辑",slug:"行编辑",normalizedTitle:"行编辑",charIndex:31},{level:3,title:"手动触发 - 操作列",slug:"手动触发-操作列",normalizedTitle:"手动触发 - 操作列",charIndex:4065},{level:3,title:"手动触发 - 批量编辑",slug:"手动触发-批量编辑",normalizedTitle:"手动触发 - 批量编辑",charIndex:6408},{level:3,title:"手动触发 - 调用方法",slug:"手动触发-调用方法",normalizedTitle:"手动触发 - 调用方法",charIndex:9239},{level:3,title:"单击触发",slug:"单击触发",normalizedTitle:"单击触发",charIndex:12770},{level:2,title:"单元格编辑",slug:"单元格编辑",normalizedTitle:"单元格编辑",charIndex:35},{level:2,title:"控制编辑状态",slug:"控制编辑状态",normalizedTitle:"控制编辑状态",charIndex:19638},{level:2,title:"新增删除操作",slug:"新增删除操作",normalizedTitle:"新增删除操作",charIndex:25767},{level:3,title:"基本配置",slug:"基本配置",normalizedTitle:"基本配置",charIndex:25778},{level:3,title:"事件处理",slug:"事件处理-5",normalizedTitle:"事件处理",charIndex:4178},{level:2,title:"树形数据编辑",slug:"树形数据编辑",normalizedTitle:"树形数据编辑",charIndex:30303},{level:2,title:"弹窗编辑",slug:"弹窗编辑",normalizedTitle:"弹窗编辑",charIndex:227},{level:3,title:"基本配置",slug:"基本配置-2",normalizedTitle:"基本配置",charIndex:25778},{level:3,title:"事件处理",slug:"事件处理-6",normalizedTitle:"事件处理",charIndex:4178},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:38078},{level:3,title:"editConfig 配置",slug:"editconfig-配置",normalizedTitle:"editconfig 配置",charIndex:74},{level:3,title:"Column 配置",slug:"column-配置",normalizedTitle:"column 配置",charIndex:39102},{level:3,title:"slots",slug:"slots",normalizedTitle:"slots",charIndex:39790},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:39933},{level:3,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:40676},{level:3,title:"options 配置",slug:"options-配置",normalizedTitle:"options 配置",charIndex:41458}],headersStr:"基础配置 自由编辑 全局自由编辑 单列自由编辑 行编辑 手动触发 - 操作列 手动触发 - 批量编辑 手动触发 - 调用方法 单击触发 单元格编辑 控制编辑状态 新增删除操作 基本配置 事件处理 树形数据编辑 弹窗编辑 基本配置 事件处理 API editConfig 配置 Column 配置 slots Events Methods options 配置",content:'# 表格编辑\n\n表格编辑功能允许用户直接在表格中编辑数据，支持行编辑、单元格编辑和自由编辑等多种模式，以及多种触发方式。\n\n\n# 基础配置\n\n通过 editConfig 配置表格的编辑模式和触发方式。\n编辑模式下，默认渲染input组件，需要通过包裹一层 form 对象才能自定义配置编辑组件。\n\noptions: {\n  editConfig: {\n    // 编辑模式：row(行编辑)、cell(单元格编辑)、free(自由编辑)、dialog(弹窗编辑)\n    mode: \'row\',\n    // 触发方式：manual(手动)、click(单击)、dblclick(双击)\n    trigger: \'manual\',\n    // 编辑按钮触发\n    edit: true,\n  },\n  renderColumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      form: { // 自定义编辑组件配置\n        comp: {\n          name: \'el-select\',\n          options: [\n            {\n              label: \'选项1\',\n              value: \'选项1\',\n            }\n          ]\n        },\n      }\n    }\n  ]\n}\n\n\n\n# 自由编辑\n\n\n# 全局自由编辑\n\nmode: free 自由编辑\n自由编辑模式下，所有可编辑的单元格始终处于编辑状态。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isEdit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "free",\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "1", label: "选项1" },\r\n                  { value: "2", label: "选项2" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单列自由编辑\n\nisEdit 设置单列自由编辑\n\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="isEdit = !isEdit"\r\n      >切换第三列编辑状态</el-button\r\n    >\r\n    <sc-crud :search.sync="searchForm" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isEdit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            isEdit: true,\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            isEdit: this.isEdit,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            isEdit: true,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 行编辑\n\n\n# 手动触发 - 操作列\n\n通过操作列编辑按钮 edit触发编辑状态。\n\neditConfig: {\n  mode: "row",\n  trigger: "manual",\n  edit: {} // 操作列按钮配置\n}\n\n\n# 事件处理\n\n@edit(done, scope) 点击编辑触发，参数done(params)，可设置编辑后的行数据\n@save(done, scope, unLoading) 点击保存触发，参数done(params)，可设置保存后的行数据\n@cancel(done, scope) 点击取消触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n      @cancel="cancel"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isEdit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: {\r\n            hasPermi: ["xx:xx:xx"],\r\n          }, // 操作列按钮配置\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      console.log("edit", scope);\r\n      this.$message.info("点击编辑", scope);\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      console.log("save", scope);\r\n      this.$message.success("点击保存", scope);\r\n      done();\r\n    },\r\n    cancel(done, scope) {\r\n      console.log("cancel", scope);\r\n      this.$message.warning("点击取消", scope);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 手动触发 - 批量编辑\n\n通过批量编辑按钮 batch 触发编辑状态。\n\neditConfig: {\n  mode: "row",\n  trigger: "manual",\n  batch: {\n    isSelect: true, // 是否批量编辑选中项，搭配selection使用\n  } // 批量操作按钮配置\n}\n\n\n# 事件处理\n\n@batchEdit(done, rows) 点击批量编辑触发，参数done(rows)，可传递需要编辑的行，默认编辑所有行\n@batchSave(done, rows) 点击批量保存触发，参数done(rows)，可传递需要保存的行，默认保存所有编辑行\n@batchCancel(done, rows) 点击批量取消触发，参数done(rows)，可传递需要取消的行，默认取消所有编辑行\n\n\n<template>\r\n  <div>\r\n    <el-button @click="isSelection = !isSelection"\r\n      >切换为批量编辑选中项</el-button\r\n    >\r\n    <el-button @click="isAll = !isAll">切换为编辑所有项</el-button>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @batchEdit="batchEdit"\r\n      @batchSave="batchSave"\r\n      @batchCancel="batchCancel"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isEdit: true,\r\n      isSelection: false,\r\n      isAll: false,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          batch: {\r\n            isSelect: this.isSelection,\r\n            hasPermi: ["xx:xx:xx"],\r\n          }, // 批量操作按钮配置\r\n        },\r\n        selection: this.isSelection,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    batchEdit(done) {\r\n      console.log("batchEdit");\r\n      this.$message.info("点击批量编辑");\r\n      done(this.isAll ? this.data : this.data.slice(0, 2));\r\n    },\r\n    batchSave(done, rows) {\r\n      console.log("batchSave", rows);\r\n      this.$message.success("点击批量保存", rows);\r\n      done();\r\n    },\r\n    batchCancel(done, rows) {\r\n      console.log("batchCancel", rows);\r\n      this.$message.warning("点击批量取消", rows);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 手动触发 - 调用方法\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>方法调用示例：</h3>\r\n      <el-button @click="setFirstRowEdit">设置第一行编辑</el-button>\r\n      <el-button @click="setMultiRowEdit">设置多行编辑</el-button>\r\n      <el-button @click="cancelRowEdit">取消编辑</el-button>\r\n      <el-button @click="saveRowEdit">保存编辑</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>其他操作：</h3>\r\n      <el-button @click="addNewRow">新增行</el-button>\r\n      <el-button @click="addNewRowToFirst">新增至首行</el-button>\r\n      <el-button @click="clearAllEditStatus">清除所有编辑</el-button>\r\n      <el-button @click="showEditingStatus">显示编辑状态</el-button>\r\n    </div>\r\n\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      ref="crud"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: true,\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n          { prop: "date", label: "日期" },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 设置第一行进入编辑状态\r\n    setFirstRowEdit() {\r\n      const firstRow = this.data[0];\r\n      this.$refs.crud.setRowEdit(firstRow, {\r\n        type: "edit",\r\n        prop: "name", // 聚焦到name列\r\n      });\r\n    },\r\n\r\n    // 设置多行进入编辑状态\r\n    setMultiRowEdit() {\r\n      const rows = this.data.slice(0, 2); // 获取前两行\r\n      this.$refs.crud.setRowEdit(rows, { type: "edit" });\r\n    },\r\n\r\n    // 取消编辑状态\r\n    cancelRowEdit() {\r\n      const editingRows = this.$refs.crud.getEditingRows();\r\n      this.$refs.crud.setRowEdit(editingRows, { type: "cancel" });\r\n    },\r\n\r\n    // 保存编辑状态\r\n    saveRowEdit() {\r\n      const editingRows = this.$refs.crud.getEditingRows();\r\n      this.$refs.crud.setRowEdit(editingRows, { type: "save" });\r\n    },\r\n\r\n    // 新增行\r\n    addNewRow() {\r\n      this.$refs.crud.addRow({\r\n        name: "新用户",\r\n        gender: "男",\r\n        age: 25,\r\n      });\r\n    },\r\n\r\n    // 在首行新增\r\n    addNewRowToFirst() {\r\n      this.$refs.crud.addRow(\r\n        {\r\n          name: "新用户",\r\n          gender: "男",\r\n          age: 25,\r\n        },\r\n        "first"\r\n      );\r\n    },\r\n\r\n    // 清除所有编辑状态\r\n    clearAllEditStatus() {\r\n      this.$refs.crud.clearAllEdit();\r\n    },\r\n\r\n    // 显示编辑状态信息\r\n    showEditingStatus() {\r\n      // 获取所有编辑状态的行\r\n      const editingRows = this.$refs.crud.getEditingRows();\r\n      console.log("正在编辑的行:", editingRows);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单击触发\n\n点击行时触发编辑状态。\n\neditConfig: {\n  mode: "row",\n  trigger: "click",\n}\n\n\n# 事件处理\n\n@edit(done, scope) 点击编辑触发，参数done(params)，可设置编辑后的行数据\n@save(done, scope, unLoading) 点击保存触发，参数done(params)，可设置保存后的行数据\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isEdit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "click",\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      this.$message.info("编辑");\r\n      console.log(scope, "edit");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      this.$message.success("保存");\r\n      console.log(scope, "save");\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单元格编辑\n\n单元格编辑模式下，点击或双击单元格时，只有该单元格进入编辑状态\n\neditConfig: {\n  mode: "cell",\n}\n\n\n# 事件处理\n\n@edit(done, scope, column) 点击编辑触发，参数done(params)，可设置编辑后的数据\n@save(done, value, scope, column, unLoading) 点击保存触发，参数done(params)，可设置保存后的数据\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n          time: "12:00:00",\r\n          datetime: "2021-01-01 12:00:00",\r\n          color: "#409EFF",\r\n          switch: true,\r\n          rate: 3,\r\n          slider: 50,\r\n          radio: "1",\r\n          checkbox: ["1"],\r\n          select: "1",\r\n          cascader: ["1", "1-1"],\r\n          textarea: "这是一段文本",\r\n          number: 100,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n          time: "13:00:00",\r\n          datetime: "2021-01-02 13:00:00",\r\n          color: "#67C23A",\r\n          switch: false,\r\n          rate: 4,\r\n          slider: 30,\r\n          radio: "2",\r\n          checkbox: ["2"],\r\n          select: "2",\r\n          cascader: ["2", "2-1"],\r\n          textarea: "这是另一段文本",\r\n          number: 200,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n          time: "14:00:00",\r\n          datetime: "2021-01-03 14:00:00",\r\n          color: "#E6A23C",\r\n          switch: true,\r\n          rate: 5,\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n          time: "15:00:00",\r\n          datetime: "2021-01-04 15:00:00",\r\n          color: "#F56C6C",\r\n          switch: false,\r\n          rate: 2,\r\n        },\r\n      ],\r\n      isEdit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "cell",\r\n          autofocus: true,\r\n        },\r\n        renderColumns: [\r\n          { prop: "name", label: "输入框", required: true },\r\n          {\r\n            prop: "select",\r\n            label: "选择器",\r\n            isEdit: (scope) => {\r\n              return scope.row.id === 1;\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "1", label: "选项1" },\r\n                  { value: "2", label: "选项2" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "cascader",\r\n            label: "级联选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-cascader",\r\n                options: [\r\n                  {\r\n                    value: "1",\r\n                    label: "选项1",\r\n                    children: [\r\n                      { value: "1-1", label: "选项1-1" },\r\n                      { value: "1-2", label: "选项1-2" },\r\n                    ],\r\n                  },\r\n                  {\r\n                    value: "2",\r\n                    label: "选项2",\r\n                    children: [\r\n                      { value: "2-1", label: "选项2-1" },\r\n                      { value: "2-2", label: "选项2-2" },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                "value-format": "yyyy-MM-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "time",\r\n            label: "时间选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-time-picker",\r\n                "value-format": "HH:mm:ss",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "color",\r\n            label: "颜色选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-color-picker",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "rate",\r\n            label: "评分",\r\n            form: {\r\n              comp: {\r\n                name: "el-rate",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      this.$message.info("编辑");\r\n      console.log(scope, "edit");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      this.$message.success("保存");\r\n      console.log(scope, "save");\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 控制编辑状态\n\nisRowEdit 控制行编辑状态\nisEdit 控制列与单元格编辑状态\n\noptions: {\n  editConfig: {\n    isRowEdit: (row) => { //控制行编辑状态\n      return row.id % 2 === 0;\n    }\n  }\n  renderColumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      isEdit: (row) => { //控制单元格编辑状态\n        return row.id % 2 === 0;\n      }\n    }\n  ]\n}\n\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>控制行编辑状态：</h3>\r\n      <el-button @click="handleRowChange(0)">禁用第一行</el-button>\r\n      <el-button @click="handleRowChange(1)">禁用第二行</el-button>\r\n      <el-button @click="handleRowChange(2)">禁用第三行</el-button>\r\n      <el-button @click="handleRowChange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>控制列编辑状态：</h3>\r\n      <el-button @click="handleColumnChange(\'name\')">禁用姓名列</el-button>\r\n      <el-button @click="handleColumnChange(\'gender\')">禁用性别列</el-button>\r\n      <el-button @click="handleColumnChange(\'age\')">禁用年龄列</el-button>\r\n      <el-button @click="handleColumnChange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>控制单元格编辑状态：</h3>\r\n      <el-button @click="handleCellChange(\'name\')"\r\n        >禁用姓名第一个单元格</el-button\r\n      >\r\n      <el-button @click="handleCellChange(\'gender\')"\r\n        >禁用性别第一个单元格</el-button\r\n      >\r\n      <el-button @click="handleCellChange(\'age\')"\r\n        >禁用年龄第一个单元格</el-button\r\n      >\r\n      <el-button @click="handleCellChange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      ref="crud"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      disabledRowIndex: null,\r\n      disabledCellProp: null,\r\n      disabledCell: { row: null, prop: null },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editConfig: {\r\n          mode: "row",\r\n          batch: true,\r\n          edit: true,\r\n          isRowEdit: ({ row, $index }) => {\r\n            // 如果设置了禁用行索引，则该行不可编辑\r\n            if (this.disabledRowIndex !== null) {\r\n              return $index !== this.disabledRowIndex;\r\n            }\r\n            return true;\r\n          },\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            isEdit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledCell.row === 0 &&\r\n                this.disabledCell.prop === "name"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledCellProp !== "name";\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            isEdit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledCell.row === 0 &&\r\n                this.disabledCell.prop === "gender"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledCellProp !== "gender";\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            isEdit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledCell.row === 0 &&\r\n                this.disabledCell.prop === "age"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledCellProp !== "age";\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  format: "yyyy-MM-dd",\r\n                  valueFormat: "yyyy-MM-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 控制行编辑状态\r\n    handleRowChange(index) {\r\n      this.disabledRowIndex = index;\r\n      this.$refs.crud.clearAllEdit();\r\n    },\r\n\r\n    // 控制单元格编辑状态\r\n    handleColumnChange(prop) {\r\n      this.disabledCellProp = prop;\r\n      this.$refs.crud.clearAllEdit();\r\n    },\r\n    handleCellChange(prop) {\r\n      if (prop === null) {\r\n        this.disabledCell = { row: null, prop: null };\r\n      } else {\r\n        // 设置第一行的指定列单元格为禁用状态\r\n        this.disabledCell = { row: 0, prop };\r\n      }\r\n      this.$refs.crud.clearAllEdit();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 新增删除操作\n\n\n# 基本配置\n\neditConfig: {\n  mode: \'row\',\n  trigger: \'manual\',\n  rowEdit: {\n    hasPermi: [\'xx\'] // 可以用于设置按钮权限等\n  },\n  // 底部新增行按钮配置\n  lastAdd: {\n    type: \'last\', // first(第一行新增)、last(最后一行新增)\n  },\n  addChild: {}, // 子级新增按钮配置\n  // 新增行按钮配置\n  rowAdd: {\n    type: \'first\', // first(第一行新增)、last(最后一行新增)\n  },\n  // 批量删除按钮配置\n  batchDelete: {\n    confirm: (rows) => `是否删除序号为${rows.map(row => row.$index + 1).join(\',\')}的数据？`, // 删除提示\n  },\n  // 删除按钮配置\n  delete: {\n    confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\n  },\n},\n\n\n\n# 事件处理\n\n@add 点击新增触发，参数done(params)，可设置新增的行数据\n@delete 点击删除触发\n@batchDelete 点击批量删除触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @add="add"\r\n      @delete="handleDelete"\r\n      @batchDelete="handleBatchDelete"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "孙七",\r\n          gender: "男",\r\n          age: 24,\r\n          city: "成都",\r\n          date: "2021-01-05",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "周八",\r\n          gender: "女",\r\n          age: 25,\r\n          city: "重庆",\r\n          date: "2021-01-06",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        selection: true,\r\n        editConfig: {\r\n          mode: "row",\r\n          edit: {},\r\n          add: {\r\n            addType: "last",\r\n          },\r\n          lastAdd: {},\r\n          delete: {\r\n            confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\r\n          },\r\n          batchDelete: {\r\n            confirm: (rows) =>\r\n              `是否删除序号为${rows\r\n                .map((row) => row.$index + 1)\r\n                .join(",")}的数据？`, // 删除提示\r\n          },\r\n        },\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  valueFormat: "yyyy-MM-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    add(done, scope) {\r\n      console.log("add", scope);\r\n      done();\r\n    },\r\n    handleDelete(done, scope) {\r\n      console.log("handleDelete", scope);\r\n      done();\r\n    },\r\n    handleBatchDelete(done, rows) {\r\n      console.log("handleBatchDelete", rows);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 树形数据编辑\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n      @cancel="cancel"\r\n      @add="add"\r\n      @delete="handleDelete"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "部门1",\r\n          manager: "张三",\r\n          count: 10,\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "子部门1-1",\r\n              manager: "李四",\r\n              count: 5,\r\n              children: [\r\n                {\r\n                  id: 111,\r\n                  name: "子部门1-1-1",\r\n                  manager: "王五",\r\n                  count: 2,\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "子部门1-2",\r\n              manager: "赵六",\r\n              count: 3,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "部门2",\r\n          manager: "钱七",\r\n          count: 8,\r\n          children: [\r\n            {\r\n              id: 21,\r\n              name: "子部门2-1",\r\n              manager: "孙八",\r\n              count: 4,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        // 编辑配置\r\n        editConfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          // 编辑\r\n          edit: true,\r\n          // 批量编辑\r\n          batch: true,\r\n          // 新增\r\n          add: true,\r\n          // 新增子节点\r\n          addChild: true,\r\n          // 删除\r\n          delete: {\r\n            confirm: (scope) => `是否删除${scope.row.name}及其子部门？`,\r\n          },\r\n          batchDelete: true,\r\n        },\r\n        selection: true,\r\n        // 表格列配置\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "部门名称",\r\n            width: 200,\r\n          },\r\n          {\r\n            prop: "manager",\r\n            label: "负责人",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "张三", value: "张三" },\r\n                  { label: "李四", value: "李四" },\r\n                  { label: "王五", value: "王五" },\r\n                  { label: "赵六", value: "赵六" },\r\n                  { label: "钱七", value: "钱七" },\r\n                  { label: "孙八", value: "孙八" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "count",\r\n            label: "人数",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 编辑事件\r\n    edit(done, scope) {\r\n      console.log("编辑节点", scope);\r\n      this.$message.info(`编辑部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 保存事件\r\n    save(done, scope) {\r\n      console.log("保存节点", scope);\r\n      this.$message.success(`保存部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 取消事件\r\n    cancel(done, scope) {\r\n      console.log("取消编辑", scope);\r\n      this.$message.warning(`取消编辑：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 新增事件\r\n    add(done, scope, parentRow) {\r\n      console.log("新增节点", scope, parentRow);\r\n      const type = parentRow ? "子部门" : "部门";\r\n      this.$message.success(`新增${type}：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 删除事件\r\n    handleDelete(done, scope) {\r\n      console.log("删除节点", scope);\r\n      this.$message.success(`删除部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 添加子节点\r\n    handleAddChild(scope) {\r\n      this.$refs.crud.handleRowAdd({}, "last", scope.row);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 弹窗编辑\n\n\n# 基本配置\n\noptions: {\n  editConfig: {\n    mode: \'dialog\',\n    // 编辑按钮配置\n    edit: {},\n    // 新增按钮配置\n    add: {\n      type: \'first\', // first(第一行新增)、last(最后一行新增)\n    },\n    // 查看按钮配置\n    view: {},\n  },\n  dialog: {}, // 自定义弹窗配置\n  addForm: {}, // 新增表单配置\n  editForm: {}, // 查看表单配置\n  viewForm: {}, // 通用表单配置\n  formOptions: {}, // 通用自定义表单配置\n}\n\n\n\n# 事件处理\n\n@add 点击新增触发\n@edit 点击编辑触发\n@save 点击保存触发\n@view 点击查看触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchForm"\r\n      :options="options"\r\n      :data="data"\r\n      @add="add"\r\n      @edit="edit"\r\n      @view="view"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      options: {\r\n        editConfig: {\r\n          mode: "dialog",\r\n          edit: {},\r\n          add: {\r\n            addType: "first",\r\n          },\r\n          view: {},\r\n          delete: true,\r\n          lastAdd: {},\r\n        },\r\n        dialog: {}, // 自定义弹窗配置\r\n        formOptions: {}, // 自定义表单配置\r\n        renderColumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            form: {},\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  valueFormat: "yyyy-MM-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "孙七",\r\n          gender: "男",\r\n          age: 24,\r\n          city: "成都",\r\n          date: "2021-01-05",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "周八",\r\n          gender: "女",\r\n          age: 25,\r\n          city: "重庆",\r\n          date: "2021-01-06",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    add(done, scope) {\r\n      this.$message("点击新增");\r\n      done();\r\n    },\r\n    edit(done, scope) {\r\n      this.$message("点击编辑");\r\n      done();\r\n    },\r\n    view(done, scope) {\r\n      this.$message("点击查看");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      setTimeout(() => {\r\n        done();\r\n        this.$message("点击保存");\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# editConfig 配置\n\n参数            说明                   类型                        可选值\nmode          编辑模式                 string                    free,cell,row,dialog\ntrigger       触发方式                 string                    manual,click,dblclick\nedit          编辑按钮配置               object                    -\nbatch         批量操作按钮配置，仅限row模式     object                    -\nadd           新增按钮配置               object                    -\nlastAdd       底部新增行按钮配置            object                    -\naddChild      子级新增按钮配置             object                    -\nbatchDelete   批量删除按钮配置             object                    -\ndelete        删除按钮配置               object                    -\nview          查看按钮配置，仅限dialog模式    object                    -\nisRowEdit     控制行是否可编辑             function({row, $index})   -\nautofocus     是否自动聚焦，支持字符串(prop)   boolean/string            true\nexclusive     行编辑是否互斥(同时只能编辑一行)    boolean                   false\ndisabled      禁用编辑                 boolean                   false\n\n\n# Column 配置\n\n参数                  说明           类型                                默认值\nisEdit              是否可编辑        boolean/function({row, $index})   false\nadd                 仅自定义新增组件     boolean/Object                    默认继承form配置\nedit                仅自定义编辑组件     boolean/Object                    默认继承form配置\nform                自定义编辑、新增组件   boolean/Object                    -\nform.prop           编辑字段         boolean/Object                    默认继承列的prop\nform.comp           编辑组件         object                            el-input\nform.render         编辑组件渲染函数     function                          -\nform.validateProp   编辑组件验证字段     string                            默认继承form.prop\n\n\n# slots\n\n插槽名           说明           默认值\n{prop}-form   自定义编辑、新增组件   -\n{prop}-add    仅自定义新增组件     默认继承form\n{prop}-edit   仅自定义编辑组件     默认继承form\n\n\n# Events\n\n事件名                 说明                   参数\n@add                点击新增按钮时              done(params), scope\n@edit               点击编辑按钮时              done(params), scope\n@save               点击保存按钮时              done(params), scope, unLoading\n@cancel             点击取消按钮时              done(params), scope\n@delete             点击删除按钮时              done, scope, unLoading\n@view               点击查看按钮时，仅限dialog模式   done, scope\n@batchEdit          点击批量编辑按钮时，仅限row模式    done(rows), rows\n@batchSave          点击批量保存按钮时，仅限row模式    done(rows), rows, unLoading\n@batchCancel        点击批量取消按钮时，仅限row模式    done(rows)\n@batchDelete        点击批量删除按钮时，仅限row模式    done, rows, unLoading\n@editStatusChange   编辑状态变化时触发            {mode, rowKey, row, prop, type}\n\n\n# Methods\n\n方法名              说明                          参数                                                            返回值\nsetRowEdit       设置行编辑状态                     (rows: object/array, options: {type: string, prop: string})   -\nsetBatchEdit     批量设置行编辑状态，不传rows则设置所有行      (type: string, rows: object/array)                            -\nsetCellEdit      设置单元格编辑状态                   (row: object, prop: string)                                   -\naddRow           新增表格行, 传parentRow则新增当前行子级   (params: object, type: first/last, parentRow: object)         -\nclearAllEdit     清除所有编辑状态                    -                                                             -\ngetEditingRows   获取所有编辑状态的行                  -                                                             array\n\n\n# options 配置\n\n参数             说明             类型                        默认值\nfreeEdit       快捷自由编辑模式       boolean                   false\ncellEdit       快捷单元格编辑模式      boolean                   false\nrowEdit        快捷行编辑模式        boolean                   false\nbatchEdit      快捷批量编辑模式       boolean                   false\nbatchRowEdit   快捷行编辑+批量编辑模式   boolean                   false\nisRowEdit      控制行是否可编辑的函数    function({row, $index})   -\naddForm        新增表单配置         Object                    {}\neditForm       编辑表单配置         Object                    {}\nviewForm       查看表单配置         Object                    {viewType: "form"}\nformOptions    通用表单配置         Object                    {}\ndialog         弹窗配置           Object                    {}',normalizedContent:'# 表格编辑\n\n表格编辑功能允许用户直接在表格中编辑数据，支持行编辑、单元格编辑和自由编辑等多种模式，以及多种触发方式。\n\n\n# 基础配置\n\n通过 editconfig 配置表格的编辑模式和触发方式。\n编辑模式下，默认渲染input组件，需要通过包裹一层 form 对象才能自定义配置编辑组件。\n\noptions: {\n  editconfig: {\n    // 编辑模式：row(行编辑)、cell(单元格编辑)、free(自由编辑)、dialog(弹窗编辑)\n    mode: \'row\',\n    // 触发方式：manual(手动)、click(单击)、dblclick(双击)\n    trigger: \'manual\',\n    // 编辑按钮触发\n    edit: true,\n  },\n  rendercolumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      form: { // 自定义编辑组件配置\n        comp: {\n          name: \'el-select\',\n          options: [\n            {\n              label: \'选项1\',\n              value: \'选项1\',\n            }\n          ]\n        },\n      }\n    }\n  ]\n}\n\n\n\n# 自由编辑\n\n\n# 全局自由编辑\n\nmode: free 自由编辑\n自由编辑模式下，所有可编辑的单元格始终处于编辑状态。\n\n<template>\r\n  <div>\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isedit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "free",\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "1", label: "选项1" },\r\n                  { value: "2", label: "选项2" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单列自由编辑\n\nisedit 设置单列自由编辑\n\n\n<template>\r\n  <div>\r\n    <el-button type="primary" @click="isedit = !isedit"\r\n      >切换第三列编辑状态</el-button\r\n    >\r\n    <sc-crud :search.sync="searchform" :options="options" :data="data">\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isedit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            isedit: true,\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            isedit: this.isedit,\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            isedit: true,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 行编辑\n\n\n# 手动触发 - 操作列\n\n通过操作列编辑按钮 edit触发编辑状态。\n\neditconfig: {\n  mode: "row",\n  trigger: "manual",\n  edit: {} // 操作列按钮配置\n}\n\n\n# 事件处理\n\n@edit(done, scope) 点击编辑触发，参数done(params)，可设置编辑后的行数据\n@save(done, scope, unloading) 点击保存触发，参数done(params)，可设置保存后的行数据\n@cancel(done, scope) 点击取消触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n      @cancel="cancel"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isedit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: {\r\n            haspermi: ["xx:xx:xx"],\r\n          }, // 操作列按钮配置\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      console.log("edit", scope);\r\n      this.$message.info("点击编辑", scope);\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      console.log("save", scope);\r\n      this.$message.success("点击保存", scope);\r\n      done();\r\n    },\r\n    cancel(done, scope) {\r\n      console.log("cancel", scope);\r\n      this.$message.warning("点击取消", scope);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 手动触发 - 批量编辑\n\n通过批量编辑按钮 batch 触发编辑状态。\n\neditconfig: {\n  mode: "row",\n  trigger: "manual",\n  batch: {\n    isselect: true, // 是否批量编辑选中项，搭配selection使用\n  } // 批量操作按钮配置\n}\n\n\n# 事件处理\n\n@batchedit(done, rows) 点击批量编辑触发，参数done(rows)，可传递需要编辑的行，默认编辑所有行\n@batchsave(done, rows) 点击批量保存触发，参数done(rows)，可传递需要保存的行，默认保存所有编辑行\n@batchcancel(done, rows) 点击批量取消触发，参数done(rows)，可传递需要取消的行，默认取消所有编辑行\n\n\n<template>\r\n  <div>\r\n    <el-button @click="isselection = !isselection"\r\n      >切换为批量编辑选中项</el-button\r\n    >\r\n    <el-button @click="isall = !isall">切换为编辑所有项</el-button>\r\n    <sc-crud\r\n      ref="crud"\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @batchedit="batchedit"\r\n      @batchsave="batchsave"\r\n      @batchcancel="batchcancel"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isedit: true,\r\n      isselection: false,\r\n      isall: false,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          batch: {\r\n            isselect: this.isselection,\r\n            haspermi: ["xx:xx:xx"],\r\n          }, // 批量操作按钮配置\r\n        },\r\n        selection: this.isselection,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    batchedit(done) {\r\n      console.log("batchedit");\r\n      this.$message.info("点击批量编辑");\r\n      done(this.isall ? this.data : this.data.slice(0, 2));\r\n    },\r\n    batchsave(done, rows) {\r\n      console.log("batchsave", rows);\r\n      this.$message.success("点击批量保存", rows);\r\n      done();\r\n    },\r\n    batchcancel(done, rows) {\r\n      console.log("batchcancel", rows);\r\n      this.$message.warning("点击批量取消", rows);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 手动触发 - 调用方法\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>方法调用示例：</h3>\r\n      <el-button @click="setfirstrowedit">设置第一行编辑</el-button>\r\n      <el-button @click="setmultirowedit">设置多行编辑</el-button>\r\n      <el-button @click="cancelrowedit">取消编辑</el-button>\r\n      <el-button @click="saverowedit">保存编辑</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>其他操作：</h3>\r\n      <el-button @click="addnewrow">新增行</el-button>\r\n      <el-button @click="addnewrowtofirst">新增至首行</el-button>\r\n      <el-button @click="clearalleditstatus">清除所有编辑</el-button>\r\n      <el-button @click="showeditingstatus">显示编辑状态</el-button>\r\n    </div>\r\n\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      ref="crud"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          edit: true,\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n          { prop: "date", label: "日期" },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 设置第一行进入编辑状态\r\n    setfirstrowedit() {\r\n      const firstrow = this.data[0];\r\n      this.$refs.crud.setrowedit(firstrow, {\r\n        type: "edit",\r\n        prop: "name", // 聚焦到name列\r\n      });\r\n    },\r\n\r\n    // 设置多行进入编辑状态\r\n    setmultirowedit() {\r\n      const rows = this.data.slice(0, 2); // 获取前两行\r\n      this.$refs.crud.setrowedit(rows, { type: "edit" });\r\n    },\r\n\r\n    // 取消编辑状态\r\n    cancelrowedit() {\r\n      const editingrows = this.$refs.crud.geteditingrows();\r\n      this.$refs.crud.setrowedit(editingrows, { type: "cancel" });\r\n    },\r\n\r\n    // 保存编辑状态\r\n    saverowedit() {\r\n      const editingrows = this.$refs.crud.geteditingrows();\r\n      this.$refs.crud.setrowedit(editingrows, { type: "save" });\r\n    },\r\n\r\n    // 新增行\r\n    addnewrow() {\r\n      this.$refs.crud.addrow({\r\n        name: "新用户",\r\n        gender: "男",\r\n        age: 25,\r\n      });\r\n    },\r\n\r\n    // 在首行新增\r\n    addnewrowtofirst() {\r\n      this.$refs.crud.addrow(\r\n        {\r\n          name: "新用户",\r\n          gender: "男",\r\n          age: 25,\r\n        },\r\n        "first"\r\n      );\r\n    },\r\n\r\n    // 清除所有编辑状态\r\n    clearalleditstatus() {\r\n      this.$refs.crud.clearalledit();\r\n    },\r\n\r\n    // 显示编辑状态信息\r\n    showeditingstatus() {\r\n      // 获取所有编辑状态的行\r\n      const editingrows = this.$refs.crud.geteditingrows();\r\n      console.log("正在编辑的行:", editingrows);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单击触发\n\n点击行时触发编辑状态。\n\neditconfig: {\n  mode: "row",\n  trigger: "click",\n}\n\n\n# 事件处理\n\n@edit(done, scope) 点击编辑触发，参数done(params)，可设置编辑后的行数据\n@save(done, scope, unloading) 点击保存触发，参数done(params)，可设置保存后的行数据\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      isedit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "click",\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      this.$message.info("编辑");\r\n      console.log(scope, "edit");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      this.$message.success("保存");\r\n      console.log(scope, "save");\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单元格编辑\n\n单元格编辑模式下，点击或双击单元格时，只有该单元格进入编辑状态\n\neditconfig: {\n  mode: "cell",\n}\n\n\n# 事件处理\n\n@edit(done, scope, column) 点击编辑触发，参数done(params)，可设置编辑后的数据\n@save(done, value, scope, column, unloading) 点击保存触发，参数done(params)，可设置保存后的数据\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n          time: "12:00:00",\r\n          datetime: "2021-01-01 12:00:00",\r\n          color: "#409eff",\r\n          switch: true,\r\n          rate: 3,\r\n          slider: 50,\r\n          radio: "1",\r\n          checkbox: ["1"],\r\n          select: "1",\r\n          cascader: ["1", "1-1"],\r\n          textarea: "这是一段文本",\r\n          number: 100,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n          time: "13:00:00",\r\n          datetime: "2021-01-02 13:00:00",\r\n          color: "#67c23a",\r\n          switch: false,\r\n          rate: 4,\r\n          slider: 30,\r\n          radio: "2",\r\n          checkbox: ["2"],\r\n          select: "2",\r\n          cascader: ["2", "2-1"],\r\n          textarea: "这是另一段文本",\r\n          number: 200,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n          time: "14:00:00",\r\n          datetime: "2021-01-03 14:00:00",\r\n          color: "#e6a23c",\r\n          switch: true,\r\n          rate: 5,\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n          time: "15:00:00",\r\n          datetime: "2021-01-04 15:00:00",\r\n          color: "#f56c6c",\r\n          switch: false,\r\n          rate: 2,\r\n        },\r\n      ],\r\n      isedit: true,\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "cell",\r\n          autofocus: true,\r\n        },\r\n        rendercolumns: [\r\n          { prop: "name", label: "输入框", required: true },\r\n          {\r\n            prop: "select",\r\n            label: "选择器",\r\n            isedit: (scope) => {\r\n              return scope.row.id === 1;\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "1", label: "选项1" },\r\n                  { value: "2", label: "选项2" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "cascader",\r\n            label: "级联选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-cascader",\r\n                options: [\r\n                  {\r\n                    value: "1",\r\n                    label: "选项1",\r\n                    children: [\r\n                      { value: "1-1", label: "选项1-1" },\r\n                      { value: "1-2", label: "选项1-2" },\r\n                    ],\r\n                  },\r\n                  {\r\n                    value: "2",\r\n                    label: "选项2",\r\n                    children: [\r\n                      { value: "2-1", label: "选项2-1" },\r\n                      { value: "2-2", label: "选项2-2" },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                "value-format": "yyyy-mm-dd",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "time",\r\n            label: "时间选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-time-picker",\r\n                "value-format": "hh:mm:ss",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "color",\r\n            label: "颜色选择器",\r\n            form: {\r\n              comp: {\r\n                name: "el-color-picker",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "rate",\r\n            label: "评分",\r\n            form: {\r\n              comp: {\r\n                name: "el-rate",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    edit(done, scope) {\r\n      this.$message.info("编辑");\r\n      console.log(scope, "edit");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      this.$message.success("保存");\r\n      console.log(scope, "save");\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 控制编辑状态\n\nisrowedit 控制行编辑状态\nisedit 控制列与单元格编辑状态\n\noptions: {\n  editconfig: {\n    isrowedit: (row) => { //控制行编辑状态\n      return row.id % 2 === 0;\n    }\n  }\n  rendercolumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      isedit: (row) => { //控制单元格编辑状态\n        return row.id % 2 === 0;\n      }\n    }\n  ]\n}\n\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>控制行编辑状态：</h3>\r\n      <el-button @click="handlerowchange(0)">禁用第一行</el-button>\r\n      <el-button @click="handlerowchange(1)">禁用第二行</el-button>\r\n      <el-button @click="handlerowchange(2)">禁用第三行</el-button>\r\n      <el-button @click="handlerowchange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>控制列编辑状态：</h3>\r\n      <el-button @click="handlecolumnchange(\'name\')">禁用姓名列</el-button>\r\n      <el-button @click="handlecolumnchange(\'gender\')">禁用性别列</el-button>\r\n      <el-button @click="handlecolumnchange(\'age\')">禁用年龄列</el-button>\r\n      <el-button @click="handlecolumnchange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <div style="margin-bottom: 20px;">\r\n      <h3>控制单元格编辑状态：</h3>\r\n      <el-button @click="handlecellchange(\'name\')"\r\n        >禁用姓名第一个单元格</el-button\r\n      >\r\n      <el-button @click="handlecellchange(\'gender\')"\r\n        >禁用性别第一个单元格</el-button\r\n      >\r\n      <el-button @click="handlecellchange(\'age\')"\r\n        >禁用年龄第一个单元格</el-button\r\n      >\r\n      <el-button @click="handlecellchange(null)">取消禁用</el-button>\r\n    </div>\r\n\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      ref="crud"\r\n      :options="options"\r\n      :data="data"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n      ],\r\n      disabledrowindex: null,\r\n      disabledcellprop: null,\r\n      disabledcell: { row: null, prop: null },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        editconfig: {\r\n          mode: "row",\r\n          batch: true,\r\n          edit: true,\r\n          isrowedit: ({ row, $index }) => {\r\n            // 如果设置了禁用行索引，则该行不可编辑\r\n            if (this.disabledrowindex !== null) {\r\n              return $index !== this.disabledrowindex;\r\n            }\r\n            return true;\r\n          },\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            isedit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledcell.row === 0 &&\r\n                this.disabledcell.prop === "name"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledcellprop !== "name";\r\n            },\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            isedit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledcell.row === 0 &&\r\n                this.disabledcell.prop === "gender"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledcellprop !== "gender";\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            isedit: ({ row, $index }) => {\r\n              if (\r\n                this.disabledcell.row === 0 &&\r\n                this.disabledcell.prop === "age"\r\n              ) {\r\n                return $index !== 0;\r\n              }\r\n              return this.disabledcellprop !== "age";\r\n            },\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  format: "yyyy-mm-dd",\r\n                  valueformat: "yyyy-mm-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 控制行编辑状态\r\n    handlerowchange(index) {\r\n      this.disabledrowindex = index;\r\n      this.$refs.crud.clearalledit();\r\n    },\r\n\r\n    // 控制单元格编辑状态\r\n    handlecolumnchange(prop) {\r\n      this.disabledcellprop = prop;\r\n      this.$refs.crud.clearalledit();\r\n    },\r\n    handlecellchange(prop) {\r\n      if (prop === null) {\r\n        this.disabledcell = { row: null, prop: null };\r\n      } else {\r\n        // 设置第一行的指定列单元格为禁用状态\r\n        this.disabledcell = { row: 0, prop };\r\n      }\r\n      this.$refs.crud.clearalledit();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 新增删除操作\n\n\n# 基本配置\n\neditconfig: {\n  mode: \'row\',\n  trigger: \'manual\',\n  rowedit: {\n    haspermi: [\'xx\'] // 可以用于设置按钮权限等\n  },\n  // 底部新增行按钮配置\n  lastadd: {\n    type: \'last\', // first(第一行新增)、last(最后一行新增)\n  },\n  addchild: {}, // 子级新增按钮配置\n  // 新增行按钮配置\n  rowadd: {\n    type: \'first\', // first(第一行新增)、last(最后一行新增)\n  },\n  // 批量删除按钮配置\n  batchdelete: {\n    confirm: (rows) => `是否删除序号为${rows.map(row => row.$index + 1).join(\',\')}的数据？`, // 删除提示\n  },\n  // 删除按钮配置\n  delete: {\n    confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\n  },\n},\n\n\n\n# 事件处理\n\n@add 点击新增触发，参数done(params)，可设置新增的行数据\n@delete 点击删除触发\n@batchdelete 点击批量删除触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @add="add"\r\n      @delete="handledelete"\r\n      @batchdelete="handlebatchdelete"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "孙七",\r\n          gender: "男",\r\n          age: 24,\r\n          city: "成都",\r\n          date: "2021-01-05",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "周八",\r\n          gender: "女",\r\n          age: 25,\r\n          city: "重庆",\r\n          date: "2021-01-06",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        selection: true,\r\n        editconfig: {\r\n          mode: "row",\r\n          edit: {},\r\n          add: {\r\n            addtype: "last",\r\n          },\r\n          lastadd: {},\r\n          delete: {\r\n            confirm: (scope) => `是否删除序号为${scope.$index + 1}的数据？`, // 删除提示\r\n          },\r\n          batchdelete: {\r\n            confirm: (rows) =>\r\n              `是否删除序号为${rows\r\n                .map((row) => row.$index + 1)\r\n                .join(",")}的数据？`, // 删除提示\r\n          },\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  valueformat: "yyyy-mm-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    add(done, scope) {\r\n      console.log("add", scope);\r\n      done();\r\n    },\r\n    handledelete(done, scope) {\r\n      console.log("handledelete", scope);\r\n      done();\r\n    },\r\n    handlebatchdelete(done, rows) {\r\n      console.log("handlebatchdelete", rows);\r\n      done();\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 树形数据编辑\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @edit="edit"\r\n      @save="save"\r\n      @cancel="cancel"\r\n      @add="add"\r\n      @delete="handledelete"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "部门1",\r\n          manager: "张三",\r\n          count: 10,\r\n          children: [\r\n            {\r\n              id: 11,\r\n              name: "子部门1-1",\r\n              manager: "李四",\r\n              count: 5,\r\n              children: [\r\n                {\r\n                  id: 111,\r\n                  name: "子部门1-1-1",\r\n                  manager: "王五",\r\n                  count: 2,\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              id: 12,\r\n              name: "子部门1-2",\r\n              manager: "赵六",\r\n              count: 3,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "部门2",\r\n          manager: "钱七",\r\n          count: 8,\r\n          children: [\r\n            {\r\n              id: 21,\r\n              name: "子部门2-1",\r\n              manager: "孙八",\r\n              count: 4,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        // 编辑配置\r\n        editconfig: {\r\n          mode: "row",\r\n          trigger: "manual",\r\n          // 编辑\r\n          edit: true,\r\n          // 批量编辑\r\n          batch: true,\r\n          // 新增\r\n          add: true,\r\n          // 新增子节点\r\n          addchild: true,\r\n          // 删除\r\n          delete: {\r\n            confirm: (scope) => `是否删除${scope.row.name}及其子部门？`,\r\n          },\r\n          batchdelete: true,\r\n        },\r\n        selection: true,\r\n        // 表格列配置\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "部门名称",\r\n            width: 200,\r\n          },\r\n          {\r\n            prop: "manager",\r\n            label: "负责人",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "张三", value: "张三" },\r\n                  { label: "李四", value: "李四" },\r\n                  { label: "王五", value: "王五" },\r\n                  { label: "赵六", value: "赵六" },\r\n                  { label: "钱七", value: "钱七" },\r\n                  { label: "孙八", value: "孙八" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "count",\r\n            label: "人数",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    // 编辑事件\r\n    edit(done, scope) {\r\n      console.log("编辑节点", scope);\r\n      this.$message.info(`编辑部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 保存事件\r\n    save(done, scope) {\r\n      console.log("保存节点", scope);\r\n      this.$message.success(`保存部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 取消事件\r\n    cancel(done, scope) {\r\n      console.log("取消编辑", scope);\r\n      this.$message.warning(`取消编辑：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 新增事件\r\n    add(done, scope, parentrow) {\r\n      console.log("新增节点", scope, parentrow);\r\n      const type = parentrow ? "子部门" : "部门";\r\n      this.$message.success(`新增${type}：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 删除事件\r\n    handledelete(done, scope) {\r\n      console.log("删除节点", scope);\r\n      this.$message.success(`删除部门：${scope.row.name}`);\r\n      done();\r\n    },\r\n    // 添加子节点\r\n    handleaddchild(scope) {\r\n      this.$refs.crud.handlerowadd({}, "last", scope.row);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 弹窗编辑\n\n\n# 基本配置\n\noptions: {\n  editconfig: {\n    mode: \'dialog\',\n    // 编辑按钮配置\n    edit: {},\n    // 新增按钮配置\n    add: {\n      type: \'first\', // first(第一行新增)、last(最后一行新增)\n    },\n    // 查看按钮配置\n    view: {},\n  },\n  dialog: {}, // 自定义弹窗配置\n  addform: {}, // 新增表单配置\n  editform: {}, // 查看表单配置\n  viewform: {}, // 通用表单配置\n  formoptions: {}, // 通用自定义表单配置\n}\n\n\n\n# 事件处理\n\n@add 点击新增触发\n@edit 点击编辑触发\n@save 点击保存触发\n@view 点击查看触发\n\n\n<template>\r\n  <div>\r\n    <sc-crud\r\n      :search.sync="searchform"\r\n      :options="options"\r\n      :data="data"\r\n      @add="add"\r\n      @edit="edit"\r\n      @view="view"\r\n      @save="save"\r\n    >\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchform: {},\r\n      options: {\r\n        editconfig: {\r\n          mode: "dialog",\r\n          edit: {},\r\n          add: {\r\n            addtype: "first",\r\n          },\r\n          view: {},\r\n          delete: true,\r\n          lastadd: {},\r\n        },\r\n        dialog: {}, // 自定义弹窗配置\r\n        formoptions: {}, // 自定义表单配置\r\n        rendercolumns: [\r\n          {\r\n            prop: "name",\r\n            label: "姓名",\r\n            form: {},\r\n          },\r\n          {\r\n            prop: "gender",\r\n            label: "性别",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "男", label: "男" },\r\n                  { value: "女", label: "女" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "age",\r\n            label: "年龄",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: 20, label: "20" },\r\n                  { value: 21, label: "21" },\r\n                  { value: 22, label: "22" },\r\n                  { value: 23, label: "23" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "city",\r\n            label: "城市",\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { value: "北京", label: "北京" },\r\n                  { value: "上海", label: "上海" },\r\n                  { value: "广州", label: "广州" },\r\n                  { value: "深圳", label: "深圳" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "date",\r\n            label: "日期",\r\n            form: {\r\n              comp: {\r\n                name: "el-date-picker",\r\n                props: {\r\n                  type: "date",\r\n                  placeholder: "选择日期",\r\n                  valueformat: "yyyy-mm-dd",\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      data: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          gender: "男",\r\n          age: 20,\r\n          city: "北京",\r\n          date: "2021-01-01",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          gender: "女",\r\n          age: 21,\r\n          city: "上海",\r\n          date: "2021-01-02",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          gender: "男",\r\n          age: 22,\r\n          city: "广州",\r\n          date: "2021-01-03",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          gender: "女",\r\n          age: 23,\r\n          city: "深圳",\r\n          date: "2021-01-04",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "孙七",\r\n          gender: "男",\r\n          age: 24,\r\n          city: "成都",\r\n          date: "2021-01-05",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: "周八",\r\n          gender: "女",\r\n          age: 25,\r\n          city: "重庆",\r\n          date: "2021-01-06",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    add(done, scope) {\r\n      this.$message("点击新增");\r\n      done();\r\n    },\r\n    edit(done, scope) {\r\n      this.$message("点击编辑");\r\n      done();\r\n    },\r\n    view(done, scope) {\r\n      this.$message("点击查看");\r\n      done();\r\n    },\r\n    save(done, scope) {\r\n      settimeout(() => {\r\n        done();\r\n        this.$message("点击保存");\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# editconfig 配置\n\n参数            说明                   类型                        可选值\nmode          编辑模式                 string                    free,cell,row,dialog\ntrigger       触发方式                 string                    manual,click,dblclick\nedit          编辑按钮配置               object                    -\nbatch         批量操作按钮配置，仅限row模式     object                    -\nadd           新增按钮配置               object                    -\nlastadd       底部新增行按钮配置            object                    -\naddchild      子级新增按钮配置             object                    -\nbatchdelete   批量删除按钮配置             object                    -\ndelete        删除按钮配置               object                    -\nview          查看按钮配置，仅限dialog模式    object                    -\nisrowedit     控制行是否可编辑             function({row, $index})   -\nautofocus     是否自动聚焦，支持字符串(prop)   boolean/string            true\nexclusive     行编辑是否互斥(同时只能编辑一行)    boolean                   false\ndisabled      禁用编辑                 boolean                   false\n\n\n# column 配置\n\n参数                  说明           类型                                默认值\nisedit              是否可编辑        boolean/function({row, $index})   false\nadd                 仅自定义新增组件     boolean/object                    默认继承form配置\nedit                仅自定义编辑组件     boolean/object                    默认继承form配置\nform                自定义编辑、新增组件   boolean/object                    -\nform.prop           编辑字段         boolean/object                    默认继承列的prop\nform.comp           编辑组件         object                            el-input\nform.render         编辑组件渲染函数     function                          -\nform.validateprop   编辑组件验证字段     string                            默认继承form.prop\n\n\n# slots\n\n插槽名           说明           默认值\n{prop}-form   自定义编辑、新增组件   -\n{prop}-add    仅自定义新增组件     默认继承form\n{prop}-edit   仅自定义编辑组件     默认继承form\n\n\n# events\n\n事件名                 说明                   参数\n@add                点击新增按钮时              done(params), scope\n@edit               点击编辑按钮时              done(params), scope\n@save               点击保存按钮时              done(params), scope, unloading\n@cancel             点击取消按钮时              done(params), scope\n@delete             点击删除按钮时              done, scope, unloading\n@view               点击查看按钮时，仅限dialog模式   done, scope\n@batchedit          点击批量编辑按钮时，仅限row模式    done(rows), rows\n@batchsave          点击批量保存按钮时，仅限row模式    done(rows), rows, unloading\n@batchcancel        点击批量取消按钮时，仅限row模式    done(rows)\n@batchdelete        点击批量删除按钮时，仅限row模式    done, rows, unloading\n@editstatuschange   编辑状态变化时触发            {mode, rowkey, row, prop, type}\n\n\n# methods\n\n方法名              说明                          参数                                                            返回值\nsetrowedit       设置行编辑状态                     (rows: object/array, options: {type: string, prop: string})   -\nsetbatchedit     批量设置行编辑状态，不传rows则设置所有行      (type: string, rows: object/array)                            -\nsetcelledit      设置单元格编辑状态                   (row: object, prop: string)                                   -\naddrow           新增表格行, 传parentrow则新增当前行子级   (params: object, type: first/last, parentrow: object)         -\nclearalledit     清除所有编辑状态                    -                                                             -\ngeteditingrows   获取所有编辑状态的行                  -                                                             array\n\n\n# options 配置\n\n参数             说明             类型                        默认值\nfreeedit       快捷自由编辑模式       boolean                   false\ncelledit       快捷单元格编辑模式      boolean                   false\nrowedit        快捷行编辑模式        boolean                   false\nbatchedit      快捷批量编辑模式       boolean                   false\nbatchrowedit   快捷行编辑+批量编辑模式   boolean                   false\nisrowedit      控制行是否可编辑的函数    function({row, $index})   -\naddform        新增表单配置         object                    {}\neditform       编辑表单配置         object                    {}\nviewform       查看表单配置         object                    {viewtype: "form"}\nformoptions    通用表单配置         object                    {}\ndialog         弹窗配置           object                    {}',charsets:{cjk:!0}},{title:"基本配置",frontmatter:{},regularPath:"/guide/form/baseUse.html",relativePath:"guide/form/baseUse.md",key:"v-c2e301b2",path:"/guide/form/baseUse.html",headers:[{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:11},{level:3,title:"基础配置",slug:"基础配置",normalizedTitle:"基础配置",charIndex:88},{level:2,title:"布局",slug:"布局",normalizedTitle:"布局",charIndex:180},{level:3,title:"Grid布局（默认）",slug:"grid布局-默认",normalizedTitle:"grid布局（默认）",charIndex:1125},{level:3,title:"Element UI 布局",slug:"element-ui-布局",normalizedTitle:"element ui 布局",charIndex:2309},{level:2,title:"校验功能",slug:"校验功能",normalizedTitle:"校验功能",charIndex:2373},{level:2,title:"显示/隐藏控制",slug:"显示-隐藏控制",normalizedTitle:"显示/隐藏控制",charIndex:3550},{level:2,title:"提示功能",slug:"提示功能",normalizedTitle:"提示功能",charIndex:4347},{level:2,title:"标签配置",slug:"标签配置",normalizedTitle:"标签配置",charIndex:5285},{level:2,title:"草稿箱功能",slug:"草稿箱功能",normalizedTitle:"草稿箱功能",charIndex:6521},{level:2,title:"右键菜单",slug:"右键菜单",normalizedTitle:"右键菜单",charIndex:6554},{level:2,title:"分组功能",slug:"分组功能",normalizedTitle:"分组功能",charIndex:7108},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:8481},{level:3,title:"Form 属性",slug:"form-属性",normalizedTitle:"form 属性",charIndex:8489},{level:3,title:"Options 配置项",slug:"options-配置项",normalizedTitle:"options 配置项",charIndex:8660},{level:3,title:"renderColumns 配置",slug:"rendercolumns-配置",normalizedTitle:"rendercolumns 配置",charIndex:9589},{level:3,title:"contextMenu 配置",slug:"contextmenu-配置",normalizedTitle:"contextmenu 配置",charIndex:10417},{level:3,title:"action 配置",slug:"action-配置",normalizedTitle:"action 配置",charIndex:97},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:11124},{level:3,title:"插槽",slug:"插槽",normalizedTitle:"插槽",charIndex:4435}],headersStr:"基本使用 基础配置 布局 Grid布局（默认） Element UI 布局 校验功能 显示/隐藏控制 提示功能 标签配置 草稿箱功能 右键菜单 分组功能 API Form 属性 Options 配置项 renderColumns 配置 contextMenu 配置 action 配置 Events 插槽",content:'# 基本配置\n\n\n# 基本使用\n\nv-model="data" 绑定的表单值data可以不用声明属性name,gender来绑定响应式，组件内部会自动进行响应式处理。\n\n\n# 基础配置\n\n * action 配置表单按钮\n * labelWidth 标签宽度，默认 100px\n * labelPosition 标签位置，默认 right\n * layout 布局类型，默认 grid\n * shrinkLabel 是否收缩标签，默认 true\n * scrollError 是否滚动至错误信息，默认 true\n * hiddenLabel 是否隐藏标签\n * labelOverTip 标签超出一行是否隐藏并显示隐藏内容\n\n<template>\r\n  <div>\r\n    <sc-form\r\n      :options="options"\r\n      :loading.sync="loading"\r\n      v-model="data"\r\n      @submit="submit"\r\n    >\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        action: {\r\n          submit: {},\r\n          reset: {},\r\n        },\r\n        columns: 2,\r\n        columnGap: "10px",\r\n        renderColumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n            required: true,\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n  methods: {\r\n    submit(cb, form) {\r\n      setTimeout(() => {\r\n        cb();\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 布局\n\n\n# Grid布局（默认）\n\n表单默认使用Grid网格布局，提供灵活的响应式布局能力：\n\n基础配置：\n\n * columns - 设置表单列数，默认为1列\n * columnGap - 列间距\n * rowGap - 行间距\n\nrenderColumns项配置：\n\n * widthSize - 表单项占据的列数（跨列）\n * heightSize - 表单项占据的行数（跨行）\n\nGrid布局支持表单项的跨行跨列显示，适合复杂的表单布局需求。更多Grid组件配置请参考 Grid布局组件文档\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        layout: "grid",\r\n        columns: 2,\r\n        columnGap: "10px",\r\n        rowGap: "10px",\r\n        renderColumns: [\r\n          {\r\n            label: "widthSize",\r\n            prop: "widthSize",\r\n            widthSize: 2,\r\n          },\r\n          {\r\n            label: "heightSize",\r\n            prop: "heightSize",\r\n            heightSize: 2,\r\n            comp: {\r\n              type: "textarea",\r\n              autosize: { minRows: 4 },\r\n            },\r\n          },\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "age",\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# Element UI 布局\n\n当 layout="el-row" 时，可以使用 Element UI 的栅格布局系统。\n\n\n# 校验功能\n\nrenderColumns 项中支持以下校验配置：\n\n * required 必填\n * rules 校验规则\n * 支持异步校验\n * 支持自定义校验规则\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        action: {\r\n          submit: {},\r\n          reset: {},\r\n        },\r\n        renderColumns: [\r\n          {\r\n            label: "必填项",\r\n            prop: "required",\r\n            required: true,\r\n          },\r\n          {\r\n            label: "正则",\r\n            prop: "regulars",\r\n            rules: ["number"],\r\n          },\r\n          {\r\n            label: "自定义",\r\n            prop: "custom",\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (value) {\r\n                    callback();\r\n                  } else {\r\n                    callback(new Error("error1"));\r\n                  }\r\n                },\r\n                trigger: "change",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 显示/隐藏控制\n\nrenderColumns 项中支持：\n\n * hidden 隐藏字段\n * show 显示字段\n * 支持动态控制显示隐藏\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      data: {},\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        columns: 2,\r\n        renderColumns: [\r\n          {\r\n            label: "输入值显示",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "hidden隐藏项",\r\n            prop: "hidden",\r\n            hidden: !this.data.name,\r\n          },\r\n          {\r\n            label: "show隐藏项",\r\n            prop: "show",\r\n            show: this.data.name,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 提示功能\n\nrenderColumns 项中支持：\n\n * tooltip 提示文本\n * tooltipRender 提示渲染函数\n * #[prop]-tooltip 提示插槽\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #slot-tooltip> 提示slot </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        labelWidth: "120px",\r\n        renderColumns: [\r\n          {\r\n            required: true,\r\n            label: "提示提示提示提示提示",\r\n            prop: "tooltip",\r\n            tooltip: "提示",\r\n            labelOverTip: true,\r\n          },\r\n          {\r\n            label: "提示slot",\r\n            prop: "slot",\r\n          },\r\n          {\r\n            label: "提示render",\r\n            prop: "tooltipRender",\r\n            tooltipRender: () => <div>提示render</div>,\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 标签配置\n\n * colon 标签后面是否添加冒号\n\nrenderColumns 项中支持：\n\n * label 标签文本\n * labelRender 标签渲染函数\n * #[prop]-label 标签插槽\n * hiddenLabel 隐藏标签\n * labelOverTip 标签超出隐藏\n * labelWidth 单独设置标签宽度\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #slot-label> label-slot </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        colon: true,\r\n        hiddenLabel: false,\r\n        labelOverTip: false,\r\n        renderColumns: [\r\n          {\r\n            label: "标签",\r\n            prop: "label",\r\n          },\r\n          {\r\n            label: "标签Slot",\r\n            prop: "slot",\r\n          },\r\n          {\r\n            label: "标签Render",\r\n            prop: "render",\r\n            labelRender: () => <span>label-render</span>,\r\n          },\r\n          {\r\n            label: "隐藏标签",\r\n            prop: "label",\r\n            hiddenLabel: true,\r\n          },\r\n          {\r\n            label: "超出隐藏标签超出超出超出",\r\n            prop: "over",\r\n            labelOverTip: true,\r\n            position: true,\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 草稿箱功能\n\n表单组件内置了草稿箱功能，支持：\n\n * 保存草稿：右键菜单或通过 contextMenu.saveDraft 配置\n * 加载草稿：支持加载当前字段或完整加载\n * 草稿管理：支持预览、删除、清空等操作\n * 草稿搜索：支持按名称搜索草稿\n\n配置示例：\n\n{\n  contextMenu: {\n    saveDraft: true, // 启用保存草稿\n    loadDraft: true, // 启用加载草稿\n    draft: true // 启用草稿箱\n  }\n}\n\n\n\n# 右键菜单\n\n表单组件提供了丰富的右键菜单功能，包括：\n\n * 生成测试数据（mock）\n * 重置表单\n * 复制数据\n * 粘贴数据（支持当前/全部）\n * 草稿箱相关操作\n\n配置示例：\n\n{\n  contextMenu: {\n    mock: true, // 生成测试数据\n    copy: true, // 复制数据\n    reset: true, // 重置表单\n    paste: true, // 粘贴数据\n    saveDraft: true, // 保存草稿\n    loadDraft: true, // 加载草稿\n    draft: true, // 草稿箱\n    handles: [] // 自定义菜单项\n  }\n}\n\n\n\n# 分组功能\n\n通过 group 属性开启分组模式，支持：\n\n * 设置分组标题\n * 配置分组内表单项\n * 自定义分组样式\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #custom>\r\n        自定义内容\r\n      </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      data: {},\r\n      options: {\r\n        group: true,\r\n        action: {\r\n          submit: true,\r\n        },\r\n        renderColumns: [\r\n          {\r\n            label: "slot自定义内容",\r\n            prop: "custom",\r\n          },\r\n          {\r\n            label: "render自定义内容",\r\n            render: (h, scope) => {\r\n              return "自定义内容";\r\n            },\r\n          },\r\n          {\r\n            label: "分组1",\r\n            columns: 2,\r\n            children: [\r\n              {\r\n                label: "子项1",\r\n                prop: "1",\r\n              },\r\n              {\r\n                label: "子项2",\r\n                prop: "2",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "分组2",\r\n            children: [\r\n              {\r\n                label: "子项1",\r\n                prop: "3",\r\n              },\r\n              {\r\n                label: "子项2",\r\n                prop: "4",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {},\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n\n# Form 属性\n\n参数                说明       类型        默认值\nvalue / v-model   表单数据对象   object    -\nloading           加载状态     boolean   -\noptions           组件配置     object    -\n\n\n# Options 配置项\n\n参数              说明                  类型        默认值\ntitle           表单标题                string    -\ndetail          是否开启详情模式            boolean   false\nborder          是否开启边框模式            boolean   false\ngroup           是否开启分组模式            boolean   false\nlabelWidth      标签宽度                string    \'100px\'\nlabelPosition   标签位置                \'right\'   \'left\'\nlayout          布局类型                \'grid\'    \'el-row\'\ncolumns         表单列数（Grid布局时）       number    1\ncolumnGap       列间距（Grid布局时）        string    -\nrowGap          行间距（Grid布局时）        string    -\nshrinkLabel     是否收缩标签              boolean   true\nscrollError     是否滚动至错误信息           boolean   true\nhiddenLabel     是否隐藏标签              boolean   false\nlabelOverTip    标签超出一行是否隐藏并显示隐藏内容   boolean   false\ncontextMenu     右键菜单配置              object    \naction          操作列配置               object    \ncolon           标签后面是否添加冒号          boolean   false\n\n\n# renderColumns 配置\n\n参数              说明                  类型                 默认值\nprop            表单字段名               string             -\nlabel           标签文本                string             -\nwidthSize       占据列数（Grid布局时）       number \\ string    1\nheightSize      占据行数（Grid布局时）       number \\ string    1\ntooltip         提示文本                string             -\ntooltipRender   提示渲染函数              function           -\nlabelWidth      单独配置标签宽度            string             \'100px\'\nlabelRender     标签渲染函数              function           -\nlabelOverTip    标签超出一行是否隐藏并显示隐藏内容   boolean            -\nhiddenLabel     是否隐藏标签              boolean            -\nchildren        子表单项配置(分组时使用)       array              -\ndetail          详情模式配置              boolean \\ object   -\ninitValue       初始值                 any                -\n\n\n# contextMenu 配置\n\n参数          说明           类型        默认值\nshow        是否显示右键菜单     boolean   -\nhidden      是否隐藏右键菜单     boolean   -\nmock        生成测试数据按钮配置   object    true\ncopy        复制数据按钮配置     object    true\nreset       重置表单按钮配置     object    true\npaste       粘贴数据按钮配置     object    true\nsaveDraft   保存草稿按钮配置     object    true\nloadDraft   加载草稿按钮配置     object    true\ndraft       草稿箱按钮配置      object    true\nhandles     自定义菜单项       array     []\n\n\n# action 配置\n\n参数        说明         类型        默认值\nshow      是否显示操作按钮   boolean   -\nhidden    是否隐藏操作按钮   boolean   -\nsubmit    提交按钮配置     object    -\nreset     重置按钮配置     object    -\nhandles   自定义按钮      array     []\nalign     按钮对齐方式     string    \'center\'\n\n\n# Events\n\n事件名             说明          回调参数\nsubmit          表单提交时触发     (value: object)\nreset           表单重置时触发     -\nmock-data       生成测试数据时触发   (value: object)\ncopy            复制数据时触发     (value: string)\npaste           粘贴数据时触发     (value: object)\ndraft-loaded    加载草稿时触发     (draft: object)\ndraft-deleted   删除草稿时触发     (draft: object)\n\n\n# 插槽\n\n插槽名              说明        作用域参数\n[prop]-label     自定义标签内容   { item, scope }\n[prop]-tooltip   自定义提示内容   { item, scope }\ntitle            自定义表单标题   -',normalizedContent:'# 基本配置\n\n\n# 基本使用\n\nv-model="data" 绑定的表单值data可以不用声明属性name,gender来绑定响应式，组件内部会自动进行响应式处理。\n\n\n# 基础配置\n\n * action 配置表单按钮\n * labelwidth 标签宽度，默认 100px\n * labelposition 标签位置，默认 right\n * layout 布局类型，默认 grid\n * shrinklabel 是否收缩标签，默认 true\n * scrollerror 是否滚动至错误信息，默认 true\n * hiddenlabel 是否隐藏标签\n * labelovertip 标签超出一行是否隐藏并显示隐藏内容\n\n<template>\r\n  <div>\r\n    <sc-form\r\n      :options="options"\r\n      :loading.sync="loading"\r\n      v-model="data"\r\n      @submit="submit"\r\n    >\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        action: {\r\n          submit: {},\r\n          reset: {},\r\n        },\r\n        columns: 2,\r\n        columngap: "10px",\r\n        rendercolumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n            required: true,\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n  methods: {\r\n    submit(cb, form) {\r\n      settimeout(() => {\r\n        cb();\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 布局\n\n\n# grid布局（默认）\n\n表单默认使用grid网格布局，提供灵活的响应式布局能力：\n\n基础配置：\n\n * columns - 设置表单列数，默认为1列\n * columngap - 列间距\n * rowgap - 行间距\n\nrendercolumns项配置：\n\n * widthsize - 表单项占据的列数（跨列）\n * heightsize - 表单项占据的行数（跨行）\n\ngrid布局支持表单项的跨行跨列显示，适合复杂的表单布局需求。更多grid组件配置请参考 grid布局组件文档\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        layout: "grid",\r\n        columns: 2,\r\n        columngap: "10px",\r\n        rowgap: "10px",\r\n        rendercolumns: [\r\n          {\r\n            label: "widthsize",\r\n            prop: "widthsize",\r\n            widthsize: 2,\r\n          },\r\n          {\r\n            label: "heightsize",\r\n            prop: "heightsize",\r\n            heightsize: 2,\r\n            comp: {\r\n              type: "textarea",\r\n              autosize: { minrows: 4 },\r\n            },\r\n          },\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "age",\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# element ui 布局\n\n当 layout="el-row" 时，可以使用 element ui 的栅格布局系统。\n\n\n# 校验功能\n\nrendercolumns 项中支持以下校验配置：\n\n * required 必填\n * rules 校验规则\n * 支持异步校验\n * 支持自定义校验规则\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        action: {\r\n          submit: {},\r\n          reset: {},\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            label: "必填项",\r\n            prop: "required",\r\n            required: true,\r\n          },\r\n          {\r\n            label: "正则",\r\n            prop: "regulars",\r\n            rules: ["number"],\r\n          },\r\n          {\r\n            label: "自定义",\r\n            prop: "custom",\r\n            rules: [\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (value) {\r\n                    callback();\r\n                  } else {\r\n                    callback(new error("error1"));\r\n                  }\r\n                },\r\n                trigger: "change",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 显示/隐藏控制\n\nrendercolumns 项中支持：\n\n * hidden 隐藏字段\n * show 显示字段\n * 支持动态控制显示隐藏\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      data: {},\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        columns: 2,\r\n        rendercolumns: [\r\n          {\r\n            label: "输入值显示",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "hidden隐藏项",\r\n            prop: "hidden",\r\n            hidden: !this.data.name,\r\n          },\r\n          {\r\n            label: "show隐藏项",\r\n            prop: "show",\r\n            show: this.data.name,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 提示功能\n\nrendercolumns 项中支持：\n\n * tooltip 提示文本\n * tooltiprender 提示渲染函数\n * #[prop]-tooltip 提示插槽\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #slot-tooltip> 提示slot </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        labelwidth: "120px",\r\n        rendercolumns: [\r\n          {\r\n            required: true,\r\n            label: "提示提示提示提示提示",\r\n            prop: "tooltip",\r\n            tooltip: "提示",\r\n            labelovertip: true,\r\n          },\r\n          {\r\n            label: "提示slot",\r\n            prop: "slot",\r\n          },\r\n          {\r\n            label: "提示render",\r\n            prop: "tooltiprender",\r\n            tooltiprender: () => <div>提示render</div>,\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 标签配置\n\n * colon 标签后面是否添加冒号\n\nrendercolumns 项中支持：\n\n * label 标签文本\n * labelrender 标签渲染函数\n * #[prop]-label 标签插槽\n * hiddenlabel 隐藏标签\n * labelovertip 标签超出隐藏\n * labelwidth 单独设置标签宽度\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #slot-label> label-slot </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      options: {\r\n        columns: 2,\r\n        colon: true,\r\n        hiddenlabel: false,\r\n        labelovertip: false,\r\n        rendercolumns: [\r\n          {\r\n            label: "标签",\r\n            prop: "label",\r\n          },\r\n          {\r\n            label: "标签slot",\r\n            prop: "slot",\r\n          },\r\n          {\r\n            label: "标签render",\r\n            prop: "render",\r\n            labelrender: () => <span>label-render</span>,\r\n          },\r\n          {\r\n            label: "隐藏标签",\r\n            prop: "label",\r\n            hiddenlabel: true,\r\n          },\r\n          {\r\n            label: "超出隐藏标签超出超出超出",\r\n            prop: "over",\r\n            labelovertip: true,\r\n            position: true,\r\n          },\r\n        ],\r\n      },\r\n      data: {},\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 草稿箱功能\n\n表单组件内置了草稿箱功能，支持：\n\n * 保存草稿：右键菜单或通过 contextmenu.savedraft 配置\n * 加载草稿：支持加载当前字段或完整加载\n * 草稿管理：支持预览、删除、清空等操作\n * 草稿搜索：支持按名称搜索草稿\n\n配置示例：\n\n{\n  contextmenu: {\n    savedraft: true, // 启用保存草稿\n    loaddraft: true, // 启用加载草稿\n    draft: true // 启用草稿箱\n  }\n}\n\n\n\n# 右键菜单\n\n表单组件提供了丰富的右键菜单功能，包括：\n\n * 生成测试数据（mock）\n * 重置表单\n * 复制数据\n * 粘贴数据（支持当前/全部）\n * 草稿箱相关操作\n\n配置示例：\n\n{\n  contextmenu: {\n    mock: true, // 生成测试数据\n    copy: true, // 复制数据\n    reset: true, // 重置表单\n    paste: true, // 粘贴数据\n    savedraft: true, // 保存草稿\n    loaddraft: true, // 加载草稿\n    draft: true, // 草稿箱\n    handles: [] // 自定义菜单项\n  }\n}\n\n\n\n# 分组功能\n\n通过 group 属性开启分组模式，支持：\n\n * 设置分组标题\n * 配置分组内表单项\n * 自定义分组样式\n\n<template>\r\n  <div>\r\n    <sc-form :options="options" :loading.sync="loading" v-model="data">\r\n      <template #custom>\r\n        自定义内容\r\n      </template>\r\n    </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      data: {},\r\n      options: {\r\n        group: true,\r\n        action: {\r\n          submit: true,\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            label: "slot自定义内容",\r\n            prop: "custom",\r\n          },\r\n          {\r\n            label: "render自定义内容",\r\n            render: (h, scope) => {\r\n              return "自定义内容";\r\n            },\r\n          },\r\n          {\r\n            label: "分组1",\r\n            columns: 2,\r\n            children: [\r\n              {\r\n                label: "子项1",\r\n                prop: "1",\r\n              },\r\n              {\r\n                label: "子项2",\r\n                prop: "2",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: "分组2",\r\n            children: [\r\n              {\r\n                label: "子项1",\r\n                prop: "3",\r\n              },\r\n              {\r\n                label: "子项2",\r\n                prop: "4",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {},\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n\n# form 属性\n\n参数                说明       类型        默认值\nvalue / v-model   表单数据对象   object    -\nloading           加载状态     boolean   -\noptions           组件配置     object    -\n\n\n# options 配置项\n\n参数              说明                  类型        默认值\ntitle           表单标题                string    -\ndetail          是否开启详情模式            boolean   false\nborder          是否开启边框模式            boolean   false\ngroup           是否开启分组模式            boolean   false\nlabelwidth      标签宽度                string    \'100px\'\nlabelposition   标签位置                \'right\'   \'left\'\nlayout          布局类型                \'grid\'    \'el-row\'\ncolumns         表单列数（grid布局时）       number    1\ncolumngap       列间距（grid布局时）        string    -\nrowgap          行间距（grid布局时）        string    -\nshrinklabel     是否收缩标签              boolean   true\nscrollerror     是否滚动至错误信息           boolean   true\nhiddenlabel     是否隐藏标签              boolean   false\nlabelovertip    标签超出一行是否隐藏并显示隐藏内容   boolean   false\ncontextmenu     右键菜单配置              object    \naction          操作列配置               object    \ncolon           标签后面是否添加冒号          boolean   false\n\n\n# rendercolumns 配置\n\n参数              说明                  类型                 默认值\nprop            表单字段名               string             -\nlabel           标签文本                string             -\nwidthsize       占据列数（grid布局时）       number \\ string    1\nheightsize      占据行数（grid布局时）       number \\ string    1\ntooltip         提示文本                string             -\ntooltiprender   提示渲染函数              function           -\nlabelwidth      单独配置标签宽度            string             \'100px\'\nlabelrender     标签渲染函数              function           -\nlabelovertip    标签超出一行是否隐藏并显示隐藏内容   boolean            -\nhiddenlabel     是否隐藏标签              boolean            -\nchildren        子表单项配置(分组时使用)       array              -\ndetail          详情模式配置              boolean \\ object   -\ninitvalue       初始值                 any                -\n\n\n# contextmenu 配置\n\n参数          说明           类型        默认值\nshow        是否显示右键菜单     boolean   -\nhidden      是否隐藏右键菜单     boolean   -\nmock        生成测试数据按钮配置   object    true\ncopy        复制数据按钮配置     object    true\nreset       重置表单按钮配置     object    true\npaste       粘贴数据按钮配置     object    true\nsavedraft   保存草稿按钮配置     object    true\nloaddraft   加载草稿按钮配置     object    true\ndraft       草稿箱按钮配置      object    true\nhandles     自定义菜单项       array     []\n\n\n# action 配置\n\n参数        说明         类型        默认值\nshow      是否显示操作按钮   boolean   -\nhidden    是否隐藏操作按钮   boolean   -\nsubmit    提交按钮配置     object    -\nreset     重置按钮配置     object    -\nhandles   自定义按钮      array     []\nalign     按钮对齐方式     string    \'center\'\n\n\n# events\n\n事件名             说明          回调参数\nsubmit          表单提交时触发     (value: object)\nreset           表单重置时触发     -\nmock-data       生成测试数据时触发   (value: object)\ncopy            复制数据时触发     (value: string)\npaste           粘贴数据时触发     (value: object)\ndraft-loaded    加载草稿时触发     (draft: object)\ndraft-deleted   删除草稿时触发     (draft: object)\n\n\n# 插槽\n\n插槽名              说明        作用域参数\n[prop]-label     自定义标签内容   { item, scope }\n[prop]-tooltip   自定义提示内容   { item, scope }\ntitle            自定义表单标题   -',charsets:{cjk:!0}},{title:"配置文档",frontmatter:{},regularPath:"/guide/dict/config.html",relativePath:"guide/dict/config.md",key:"v-4d40edb7",path:"/guide/dict/config.html",headers:[{level:2,title:"基础配置项",slug:"基础配置项",normalizedTitle:"基础配置项",charIndex:11},{level:2,title:"字典方法",slug:"字典方法",normalizedTitle:"字典方法",charIndex:844},{level:2,title:"字典数据增强方法",slug:"字典数据增强方法",normalizedTitle:"字典数据增强方法",charIndex:1170}],headersStr:"基础配置项 字典方法 字典数据增强方法",content:"# 配置文档\n\n\n# 基础配置项\n\n配置项            类型                默认值        说明\nrequest        Function          -          字典数据请求函数(返回Promise)\nlabel          String            label      标签字段名\nvalue          String            value      值字段名\ncolor          String            color      颜色字段名\nchildren       String            children   子节点字段名\nparams         Object/Function   -          请求参数，支持函数形式监听响应式数据变化\nimmediate      Boolean           false      是否立即加载，默认为懒加载，即使用时才加载\ncache          Boolean           true       是否启用缓存\ndataPath       String            data       字典数组的路径\ntransform      Function          -          数据转换函数\notherPath      String/Array      -          需要额外获取的数据路径\ndebounceTime   Number            300        防抖时间（毫秒）\nenhanceDict    Object            -          自定义增强方法\nlocal          Boolean           false      是否启用局部字典，组件配置使用时，才有效\n\n\n# 字典方法\n\n方法名             说明                          参数\nregister        注册字典                        (key, config)\nregisterBatch   批量注册字典                      (config)\nget             获取字典                        (key, params)\nclear           清空字典，不传参数则清空所有字典            (key)\nwait            等待字典加载完成 ，不传参数则等待所有字典加载完成   (key)\n\n\n# 字典数据增强方法\n\n每个字典数组都会被自动注入以下方法：\n\n方法名                说明               返回值\nfindLabel(value)   根据值查找对应的标签       String\ntoMap()            将字典转换为值-标签映射对象   Object\nvalues()           获取所有值的数组         Array\nlabels()           获取所有标签的数组        Array\ngetOption(value)   根据值获取完整选项        Object\nwait()             等待字典加载完成         Promise\nready              字典是否加载完成的变量      Boolean",normalizedContent:"# 配置文档\n\n\n# 基础配置项\n\n配置项            类型                默认值        说明\nrequest        function          -          字典数据请求函数(返回promise)\nlabel          string            label      标签字段名\nvalue          string            value      值字段名\ncolor          string            color      颜色字段名\nchildren       string            children   子节点字段名\nparams         object/function   -          请求参数，支持函数形式监听响应式数据变化\nimmediate      boolean           false      是否立即加载，默认为懒加载，即使用时才加载\ncache          boolean           true       是否启用缓存\ndatapath       string            data       字典数组的路径\ntransform      function          -          数据转换函数\notherpath      string/array      -          需要额外获取的数据路径\ndebouncetime   number            300        防抖时间（毫秒）\nenhancedict    object            -          自定义增强方法\nlocal          boolean           false      是否启用局部字典，组件配置使用时，才有效\n\n\n# 字典方法\n\n方法名             说明                          参数\nregister        注册字典                        (key, config)\nregisterbatch   批量注册字典                      (config)\nget             获取字典                        (key, params)\nclear           清空字典，不传参数则清空所有字典            (key)\nwait            等待字典加载完成 ，不传参数则等待所有字典加载完成   (key)\n\n\n# 字典数据增强方法\n\n每个字典数组都会被自动注入以下方法：\n\n方法名                说明               返回值\nfindlabel(value)   根据值查找对应的标签       string\ntomap()            将字典转换为值-标签映射对象   object\nvalues()           获取所有值的数组         array\nlabels()           获取所有标签的数组        array\ngetoption(value)   根据值获取完整选项        object\nwait()             等待字典加载完成         promise\nready              字典是否加载完成的变量      boolean",charsets:{cjk:!0}},{title:"详情模式",frontmatter:{},regularPath:"/guide/form/detail.html",relativePath:"guide/form/detail.md",key:"v-a4ffa1d2",path:"/guide/form/detail.html",headers:[{level:2,title:"基础详情模式",slug:"基础详情模式",normalizedTitle:"基础详情模式",charIndex:40},{level:2,title:"单个表单项详情模式",slug:"单个表单项详情模式",normalizedTitle:"单个表单项详情模式",charIndex:4583},{level:2,title:"边框模式",slug:"边框模式",normalizedTitle:"边框模式",charIndex:6118},{level:2,title:"自定义详情展示",slug:"自定义详情展示",normalizedTitle:"自定义详情展示",charIndex:8146}],headersStr:"基础详情模式 单个表单项详情模式 边框模式 自定义详情展示",content:'# 详情模式\n\n详情模式将表单转换为只读展示状态，适用于数据查看场景。\n\n\n# 基础详情模式\n\n设置 detail: true 开启全部表单项详情模式，表单将变为只读状态。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictData: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三张三张三张三张三张三张三",\r\n        gender: "男",\r\n        age: 25,\r\n        birthday: "1998-05-15",\r\n        email: "zhangsan@example.com",\r\n        phone: "13800138000",\r\n        isActive: true,\r\n        salary: 8500.5,\r\n        joinDate: "2023-01-15",\r\n        address: "北京市朝阳区",\r\n        checkbox: ["1", "2"],\r\n        select: "1,2",\r\n        rating: 4,\r\n        description: "这是一个详细的描述信息，用于展示多行文本输入框的效果。",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        colon: true,\r\n        detail: this.detail,\r\n        layout: "grid",\r\n        columns: 3,\r\n        columnGap: "20px",\r\n        rowGap: "15px",\r\n        renderColumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n            comp: {\r\n              name: "el-input",\r\n              placeholder: "1111",\r\n            },\r\n            detail: {\r\n              formatter: (row) => {\r\n                return row.name;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n            comp: {\r\n              name: "el-select",\r\n              options: [\r\n                { value: "男", label: "男" },\r\n                { value: "女", label: "女" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "age",\r\n            comp: {\r\n              name: "el-input-number",\r\n              min: 0,\r\n              max: 120,\r\n            },\r\n          },\r\n          {\r\n            label: "生日",\r\n            prop: "birthday",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              format: "yyyy-MM-dd",\r\n              "value-format": "yyyy-MM-dd",\r\n            },\r\n          },\r\n          {\r\n            label: "邮箱",\r\n            prop: "email",\r\n            comp: {\r\n              name: "el-input",\r\n              type: "email",\r\n              placeholder: "请输入邮箱地址",\r\n            },\r\n          },\r\n          {\r\n            label: "手机号",\r\n            prop: "phone",\r\n            comp: {\r\n              name: "el-input",\r\n              placeholder: "请输入手机号",\r\n            },\r\n          },\r\n          {\r\n            label: "是否激活",\r\n            prop: "isActive",\r\n            comp: {\r\n              name: "el-switch",\r\n            },\r\n          },\r\n          {\r\n            label: "薪资",\r\n            prop: "salary",\r\n            comp: {\r\n              name: "el-input-number",\r\n              precision: 2,\r\n              step: 100,\r\n              min: 0,\r\n            },\r\n          },\r\n          {\r\n            label: "入职日期",\r\n            prop: "joinDate",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              format: "yyyy-MM-dd",\r\n              "value-format": "yyyy-MM-dd",\r\n            },\r\n          },\r\n          {\r\n            label: "多选框",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictData,\r\n            },\r\n          },\r\n          {\r\n            label: "下拉选择",\r\n            prop: "select",\r\n            comp: {\r\n              name: "sc-select",\r\n              multiple: true,\r\n              options: this.dictData,\r\n            },\r\n            detail: {\r\n              comp: {\r\n                name: "sc-value-format",\r\n                options: this.dictData,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "评分",\r\n            prop: "rating",\r\n            comp: {\r\n              name: "el-rate",\r\n              max: 5,\r\n              "show-text": true,\r\n            },\r\n          },\r\n          {\r\n            label: "描述",\r\n            prop: "description",\r\n            widthSize: 3,\r\n            comp: {\r\n              name: "el-input",\r\n              type: "textarea",\r\n              rows: 3,\r\n              placeholder: "请输入描述信息",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单个表单项详情模式\n\nrenderColumns 项中支持 detail 配置，用于开启、关闭单个表单项的详情模式。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictData: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三",\r\n        gender: "男",\r\n        checkbox: ["1", "2"],\r\n        select: "1",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        columns: 2,\r\n        columnGap: "10px",\r\n        renderColumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            detail: this.detail,\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictData,\r\n            },\r\n          },\r\n          {\r\n            label: "select",\r\n            prop: "select",\r\n            detail: this.detail,\r\n            comp: {\r\n              name: "sc-select",\r\n              options: this.dictData,\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 边框模式\n\n设置 border: true 开启带边框的详情模式，提供更清晰的数据结构展示。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data" border> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictData: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三张三张三张三张三张三张三张三张三张三张三张三张三",\r\n        gender: "男",\r\n        checkbox: ["1", "2"],\r\n        select: "1",\r\n        input:\r\n          "李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        detail: this.detail,\r\n        columns: 3,\r\n        // columnGap: "10px",\r\n        renderColumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictData,\r\n            },\r\n            contentTip: "111111111",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictData,\r\n            },\r\n          },\r\n          {\r\n            label: "select",\r\n            prop: "select",\r\n            widthSize: 2,\r\n            comp: {\r\n              name: "sc-select",\r\n              options: this.dictData,\r\n            },\r\n          },\r\n          {\r\n            label: "input",\r\n            prop: "input",\r\n            comp: {\r\n              type: "textarea",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义详情展示\n\n支持为单个字段配置独立的详情展示方式。\n\n{\n  renderColumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      detail: {\n        // 字段级详情配置\n        render: (h, { row }) => {\n          return <span style="color: #409eff">{row.name}</span>\n        }\n      }\n    },\n  ]\n}\n',normalizedContent:'# 详情模式\n\n详情模式将表单转换为只读展示状态，适用于数据查看场景。\n\n\n# 基础详情模式\n\n设置 detail: true 开启全部表单项详情模式，表单将变为只读状态。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictdata: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三张三张三张三张三张三张三",\r\n        gender: "男",\r\n        age: 25,\r\n        birthday: "1998-05-15",\r\n        email: "zhangsan@example.com",\r\n        phone: "13800138000",\r\n        isactive: true,\r\n        salary: 8500.5,\r\n        joindate: "2023-01-15",\r\n        address: "北京市朝阳区",\r\n        checkbox: ["1", "2"],\r\n        select: "1,2",\r\n        rating: 4,\r\n        description: "这是一个详细的描述信息，用于展示多行文本输入框的效果。",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        colon: true,\r\n        detail: this.detail,\r\n        layout: "grid",\r\n        columns: 3,\r\n        columngap: "20px",\r\n        rowgap: "15px",\r\n        rendercolumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n            comp: {\r\n              name: "el-input",\r\n              placeholder: "1111",\r\n            },\r\n            detail: {\r\n              formatter: (row) => {\r\n                return row.name;\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n            comp: {\r\n              name: "el-select",\r\n              options: [\r\n                { value: "男", label: "男" },\r\n                { value: "女", label: "女" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "age",\r\n            comp: {\r\n              name: "el-input-number",\r\n              min: 0,\r\n              max: 120,\r\n            },\r\n          },\r\n          {\r\n            label: "生日",\r\n            prop: "birthday",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              format: "yyyy-mm-dd",\r\n              "value-format": "yyyy-mm-dd",\r\n            },\r\n          },\r\n          {\r\n            label: "邮箱",\r\n            prop: "email",\r\n            comp: {\r\n              name: "el-input",\r\n              type: "email",\r\n              placeholder: "请输入邮箱地址",\r\n            },\r\n          },\r\n          {\r\n            label: "手机号",\r\n            prop: "phone",\r\n            comp: {\r\n              name: "el-input",\r\n              placeholder: "请输入手机号",\r\n            },\r\n          },\r\n          {\r\n            label: "是否激活",\r\n            prop: "isactive",\r\n            comp: {\r\n              name: "el-switch",\r\n            },\r\n          },\r\n          {\r\n            label: "薪资",\r\n            prop: "salary",\r\n            comp: {\r\n              name: "el-input-number",\r\n              precision: 2,\r\n              step: 100,\r\n              min: 0,\r\n            },\r\n          },\r\n          {\r\n            label: "入职日期",\r\n            prop: "joindate",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              format: "yyyy-mm-dd",\r\n              "value-format": "yyyy-mm-dd",\r\n            },\r\n          },\r\n          {\r\n            label: "多选框",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictdata,\r\n            },\r\n          },\r\n          {\r\n            label: "下拉选择",\r\n            prop: "select",\r\n            comp: {\r\n              name: "sc-select",\r\n              multiple: true,\r\n              options: this.dictdata,\r\n            },\r\n            detail: {\r\n              comp: {\r\n                name: "sc-value-format",\r\n                options: this.dictdata,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "评分",\r\n            prop: "rating",\r\n            comp: {\r\n              name: "el-rate",\r\n              max: 5,\r\n              "show-text": true,\r\n            },\r\n          },\r\n          {\r\n            label: "描述",\r\n            prop: "description",\r\n            widthsize: 3,\r\n            comp: {\r\n              name: "el-input",\r\n              type: "textarea",\r\n              rows: 3,\r\n              placeholder: "请输入描述信息",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 单个表单项详情模式\n\nrendercolumns 项中支持 detail 配置，用于开启、关闭单个表单项的详情模式。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data"> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictdata: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三",\r\n        gender: "男",\r\n        checkbox: ["1", "2"],\r\n        select: "1",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        columns: 2,\r\n        columngap: "10px",\r\n        rendercolumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            detail: this.detail,\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictdata,\r\n            },\r\n          },\r\n          {\r\n            label: "select",\r\n            prop: "select",\r\n            detail: this.detail,\r\n            comp: {\r\n              name: "sc-select",\r\n              options: this.dictdata,\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 边框模式\n\n设置 border: true 开启带边框的详情模式，提供更清晰的数据结构展示。\n\n<template>\r\n  <div>\r\n    <div style="margin-bottom: 10px;">\r\n      <el-button @click="detail = !detail" size="small">切换模式</el-button>\r\n      <el-tag>当前模式：{{ detail ? "详情" : "编辑" }}</el-tag>\r\n    </div>\r\n    <sc-form :options="options" v-model="data" border> </sc-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      detail: true,\r\n      dictdata: [\r\n        {\r\n          value: "1",\r\n          label: "张三",\r\n        },\r\n        {\r\n          value: "2",\r\n          label: "李四",\r\n        },\r\n      ],\r\n\r\n      data: {\r\n        name: "张三张三张三张三张三张三张三张三张三张三张三张三张三",\r\n        gender: "男",\r\n        checkbox: ["1", "2"],\r\n        select: "1",\r\n        input:\r\n          "李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四李四",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        detail: this.detail,\r\n        columns: 3,\r\n        // columngap: "10px",\r\n        rendercolumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "name",\r\n          },\r\n          {\r\n            label: "性别",\r\n            prop: "gender",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictdata,\r\n            },\r\n            contenttip: "111111111",\r\n          },\r\n          {\r\n            label: "checkbox",\r\n            prop: "checkbox",\r\n            comp: {\r\n              name: "sc-checkbox",\r\n              options: this.dictdata,\r\n            },\r\n          },\r\n          {\r\n            label: "select",\r\n            prop: "select",\r\n            widthsize: 2,\r\n            comp: {\r\n              name: "sc-select",\r\n              options: this.dictdata,\r\n            },\r\n          },\r\n          {\r\n            label: "input",\r\n            prop: "input",\r\n            comp: {\r\n              type: "textarea",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义详情展示\n\n支持为单个字段配置独立的详情展示方式。\n\n{\n  rendercolumns: [\n    {\n      prop: \'name\',\n      label: \'姓名\',\n      detail: {\n        // 字段级详情配置\n        render: (h, { row }) => {\n          return <span style="color: #409eff">{row.name}</span>\n        }\n      }\n    },\n  ]\n}\n',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/mockData/base.html",relativePath:"guide/mockData/base.md",key:"v-2608c0d7",path:"/guide/mockData/base.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"使用示例",slug:"使用示例",normalizedTitle:"使用示例",charIndex:117}],headersStr:"概述 使用示例",content:'# 基本使用\n\n\n# 概述\n\n通过右键功能菜单，点击生成测试数据，快速生成符合组件特性的模拟数据，用于测试和开发。无论使用哪种渲染方式，都会根据不同的表单组件类型(输入框、选择器、日期选择等)、校验规则自动生成相应格式的数据\n\n\n# 使用示例\n\n<template>\r\n  <div>\r\n    <h3>表单</h3>\r\n    <sc-form v-model="form" :options="options"> </sc-form>\r\n    <h3 style="margin-top: 20px;">表格</h3>\r\n    <sc-crud :data.sync="data" :options="crudOptions"> </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        multiSelect: [],\r\n        daterange: [],\r\n        checkbox: [],\r\n        cascader: [],\r\n        transfer: [],\r\n      },\r\n      data: [\r\n        {\r\n          id: 1,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 2,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 3,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          input: "",\r\n          select: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        renderColumns: [\r\n          // 1. 输入框类\r\n          {\r\n            prop: "input",\r\n            label: "普通输入框",\r\n            comp: {\r\n              name: "el-input",\r\n              maxlength: 20,\r\n              "show-word-limit": true,\r\n            },\r\n          },\r\n          {\r\n            prop: "input2",\r\n            label: "校验规则生成",\r\n            rules: ["email"],\r\n          },\r\n          {\r\n            prop: "textarea",\r\n            label: "文本域",\r\n            comp: {\r\n              name: "el-input",\r\n              type: "textarea",\r\n              rows: 3,\r\n              placeholder: "请输入多行文本",\r\n            },\r\n          },\r\n          {\r\n            prop: "number",\r\n            label: "数字输入框",\r\n            comp: {\r\n              name: "el-input-number",\r\n              min: 0,\r\n              max: 100,\r\n              step: 1,\r\n            },\r\n          },\r\n\r\n          // 2. 选择器类\r\n          {\r\n            prop: "select",\r\n            label: "下拉选择",\r\n            comp: {\r\n              name: "el-select",\r\n              options: [\r\n                { label: "选项1", value: "1" },\r\n                { label: "选项2", value: "2" },\r\n                { label: "选项3", value: "3" },\r\n                { label: "选项4", value: "4" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            prop: "multiSelect",\r\n            label: "多选选择器",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              options: [\r\n                { label: "选项A", value: "A" },\r\n                { label: "选项B", value: "B" },\r\n                { label: "选项C", value: "C" },\r\n                { label: "选项D", value: "D" },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 3. 日期时间类\r\n          {\r\n            prop: "date",\r\n            label: "日期选择",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              valueFormat: "yyyy-MM-dd",\r\n            },\r\n          },\r\n          {\r\n            prop: "daterange",\r\n            label: "日期范围",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "daterange",\r\n              startPlaceholder: "开始日期",\r\n              endPlaceholder: "结束日期",\r\n              valueFormat: "yyyy-MM-dd",\r\n            },\r\n          },\r\n          {\r\n            prop: "time",\r\n            label: "时间选择",\r\n            comp: {\r\n              name: "el-time-picker",\r\n              valueFormat: "HH:mm:ss",\r\n            },\r\n          },\r\n\r\n          // 4. 单选复选类\r\n          {\r\n            prop: "radio",\r\n            label: "单选组",\r\n            comp: {\r\n              name: "el-radio-group",\r\n              options: [\r\n                { label: "选项1", value: "1" },\r\n                { label: "选项2", value: "2" },\r\n                { label: "选项3", value: "3" },\r\n                { label: "选项4", value: "4" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            prop: "checkbox",\r\n            label: "复选框组",\r\n            comp: {\r\n              name: "el-checkbox-group",\r\n              options: [\r\n                { label: "选项A", value: "A" },\r\n                { label: "选项B", value: "B" },\r\n                { label: "选项C", value: "C" },\r\n                { label: "选项D", value: "D" },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 5. 级联选择器\r\n          {\r\n            prop: "cascader",\r\n            label: "级联选择",\r\n            comp: {\r\n              name: "el-cascader",\r\n              options: [\r\n                {\r\n                  value: "1",\r\n                  label: "一级1",\r\n                  children: [\r\n                    { value: "1-1", label: "二级1-1" },\r\n                    { value: "1-2", label: "二级1-2" },\r\n                  ],\r\n                },\r\n                {\r\n                  value: "2",\r\n                  label: "一级2",\r\n                  children: [\r\n                    { value: "2-1", label: "二级2-1" },\r\n                    { value: "2-2", label: "二级2-2" },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 6. 开关、滑块、评分类\r\n          {\r\n            prop: "switch",\r\n            label: "开关",\r\n            comp: {\r\n              name: "el-switch",\r\n              "active-text": "开启",\r\n              "inactive-text": "关闭",\r\n            },\r\n          },\r\n          {\r\n            prop: "slider",\r\n            label: "滑块",\r\n            comp: {\r\n              name: "el-slider",\r\n              min: 0,\r\n              max: 100,\r\n              step: 10,\r\n              "show-stops": true,\r\n            },\r\n          },\r\n          {\r\n            prop: "rate",\r\n            label: "评分",\r\n            comp: {\r\n              name: "el-rate",\r\n              max: 5,\r\n              "allow-half": true,\r\n              "show-text": true,\r\n            },\r\n          },\r\n\r\n          // 7. 穿梭框\r\n          {\r\n            prop: "transfer",\r\n            label: "穿梭框",\r\n            comp: {\r\n              name: "el-transfer",\r\n              data: [\r\n                { key: 1, label: "选项1" },\r\n                { key: 2, label: "选项2" },\r\n                { key: 3, label: "选项3" },\r\n              ],\r\n              titles: ["待选列表", "已选列表"],\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    crudOptions() {\r\n      return {\r\n        toolbar: false,\r\n        renderColumns: [\r\n          {\r\n            prop: "id",\r\n            label: "用户id",\r\n            isEdit: false,\r\n          },\r\n          {\r\n            prop: "input",\r\n            label: "名称",\r\n            isEdit: true,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                maxlength: 20,\r\n                "show-word-limit": true,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "select",\r\n            label: "选择1",\r\n            isEdit: true,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "选项1", value: "1" },\r\n                  { label: "选项2", value: "2" },\r\n                  { label: "选项3", value: "3" },\r\n                  { label: "选项4", value: "4" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',normalizedContent:'# 基本使用\n\n\n# 概述\n\n通过右键功能菜单，点击生成测试数据，快速生成符合组件特性的模拟数据，用于测试和开发。无论使用哪种渲染方式，都会根据不同的表单组件类型(输入框、选择器、日期选择等)、校验规则自动生成相应格式的数据\n\n\n# 使用示例\n\n<template>\r\n  <div>\r\n    <h3>表单</h3>\r\n    <sc-form v-model="form" :options="options"> </sc-form>\r\n    <h3 style="margin-top: 20px;">表格</h3>\r\n    <sc-crud :data.sync="data" :options="crudoptions"> </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        multiselect: [],\r\n        daterange: [],\r\n        checkbox: [],\r\n        cascader: [],\r\n        transfer: [],\r\n      },\r\n      data: [\r\n        {\r\n          id: 1,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 2,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 3,\r\n          input: "",\r\n          select: "",\r\n        },\r\n        {\r\n          id: 4,\r\n          input: "",\r\n          select: "",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    options() {\r\n      return {\r\n        rendercolumns: [\r\n          // 1. 输入框类\r\n          {\r\n            prop: "input",\r\n            label: "普通输入框",\r\n            comp: {\r\n              name: "el-input",\r\n              maxlength: 20,\r\n              "show-word-limit": true,\r\n            },\r\n          },\r\n          {\r\n            prop: "input2",\r\n            label: "校验规则生成",\r\n            rules: ["email"],\r\n          },\r\n          {\r\n            prop: "textarea",\r\n            label: "文本域",\r\n            comp: {\r\n              name: "el-input",\r\n              type: "textarea",\r\n              rows: 3,\r\n              placeholder: "请输入多行文本",\r\n            },\r\n          },\r\n          {\r\n            prop: "number",\r\n            label: "数字输入框",\r\n            comp: {\r\n              name: "el-input-number",\r\n              min: 0,\r\n              max: 100,\r\n              step: 1,\r\n            },\r\n          },\r\n\r\n          // 2. 选择器类\r\n          {\r\n            prop: "select",\r\n            label: "下拉选择",\r\n            comp: {\r\n              name: "el-select",\r\n              options: [\r\n                { label: "选项1", value: "1" },\r\n                { label: "选项2", value: "2" },\r\n                { label: "选项3", value: "3" },\r\n                { label: "选项4", value: "4" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            prop: "multiselect",\r\n            label: "多选选择器",\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              options: [\r\n                { label: "选项a", value: "a" },\r\n                { label: "选项b", value: "b" },\r\n                { label: "选项c", value: "c" },\r\n                { label: "选项d", value: "d" },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 3. 日期时间类\r\n          {\r\n            prop: "date",\r\n            label: "日期选择",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "date",\r\n              valueformat: "yyyy-mm-dd",\r\n            },\r\n          },\r\n          {\r\n            prop: "daterange",\r\n            label: "日期范围",\r\n            comp: {\r\n              name: "el-date-picker",\r\n              type: "daterange",\r\n              startplaceholder: "开始日期",\r\n              endplaceholder: "结束日期",\r\n              valueformat: "yyyy-mm-dd",\r\n            },\r\n          },\r\n          {\r\n            prop: "time",\r\n            label: "时间选择",\r\n            comp: {\r\n              name: "el-time-picker",\r\n              valueformat: "hh:mm:ss",\r\n            },\r\n          },\r\n\r\n          // 4. 单选复选类\r\n          {\r\n            prop: "radio",\r\n            label: "单选组",\r\n            comp: {\r\n              name: "el-radio-group",\r\n              options: [\r\n                { label: "选项1", value: "1" },\r\n                { label: "选项2", value: "2" },\r\n                { label: "选项3", value: "3" },\r\n                { label: "选项4", value: "4" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            prop: "checkbox",\r\n            label: "复选框组",\r\n            comp: {\r\n              name: "el-checkbox-group",\r\n              options: [\r\n                { label: "选项a", value: "a" },\r\n                { label: "选项b", value: "b" },\r\n                { label: "选项c", value: "c" },\r\n                { label: "选项d", value: "d" },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 5. 级联选择器\r\n          {\r\n            prop: "cascader",\r\n            label: "级联选择",\r\n            comp: {\r\n              name: "el-cascader",\r\n              options: [\r\n                {\r\n                  value: "1",\r\n                  label: "一级1",\r\n                  children: [\r\n                    { value: "1-1", label: "二级1-1" },\r\n                    { value: "1-2", label: "二级1-2" },\r\n                  ],\r\n                },\r\n                {\r\n                  value: "2",\r\n                  label: "一级2",\r\n                  children: [\r\n                    { value: "2-1", label: "二级2-1" },\r\n                    { value: "2-2", label: "二级2-2" },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          },\r\n\r\n          // 6. 开关、滑块、评分类\r\n          {\r\n            prop: "switch",\r\n            label: "开关",\r\n            comp: {\r\n              name: "el-switch",\r\n              "active-text": "开启",\r\n              "inactive-text": "关闭",\r\n            },\r\n          },\r\n          {\r\n            prop: "slider",\r\n            label: "滑块",\r\n            comp: {\r\n              name: "el-slider",\r\n              min: 0,\r\n              max: 100,\r\n              step: 10,\r\n              "show-stops": true,\r\n            },\r\n          },\r\n          {\r\n            prop: "rate",\r\n            label: "评分",\r\n            comp: {\r\n              name: "el-rate",\r\n              max: 5,\r\n              "allow-half": true,\r\n              "show-text": true,\r\n            },\r\n          },\r\n\r\n          // 7. 穿梭框\r\n          {\r\n            prop: "transfer",\r\n            label: "穿梭框",\r\n            comp: {\r\n              name: "el-transfer",\r\n              data: [\r\n                { key: 1, label: "选项1" },\r\n                { key: 2, label: "选项2" },\r\n                { key: 3, label: "选项3" },\r\n              ],\r\n              titles: ["待选列表", "已选列表"],\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    crudoptions() {\r\n      return {\r\n        toolbar: false,\r\n        rendercolumns: [\r\n          {\r\n            prop: "id",\r\n            label: "用户id",\r\n            isedit: false,\r\n          },\r\n          {\r\n            prop: "input",\r\n            label: "名称",\r\n            isedit: true,\r\n            form: {\r\n              comp: {\r\n                name: "el-input",\r\n                maxlength: 20,\r\n                "show-word-limit": true,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            prop: "select",\r\n            label: "选择1",\r\n            isedit: true,\r\n            form: {\r\n              comp: {\r\n                name: "el-select",\r\n                options: [\r\n                  { label: "选项1", value: "1" },\r\n                  { label: "选项2", value: "2" },\r\n                  { label: "选项3", value: "3" },\r\n                  { label: "选项4", value: "4" },\r\n                ],\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n',charsets:{cjk:!0}},{title:"格式化配置文档",frontmatter:{},regularPath:"/guide/formatData/config.html",relativePath:"guide/formatData/config.md",key:"v-507c3dd2",path:"/guide/formatData/config.html",headers:[{level:2,title:"通用配置项",slug:"通用配置项",normalizedTitle:"通用配置项",charIndex:14},{level:2,title:"预设格式化类型",slug:"预设格式化类型",normalizedTitle:"预设格式化类型",charIndex:114},{level:3,title:"strToArr（字符串转数组）",slug:"strtoarr-字符串转数组",normalizedTitle:"strtoarr（字符串转数组）",charIndex:315},{level:3,title:"multiPropToArr（多字段转数组）",slug:"multiproptoarr-多字段转数组",normalizedTitle:"multiproptoarr（多字段转数组）",charIndex:460},{level:3,title:"numberFormat（数字格式化）",slug:"numberformat-数字格式化",normalizedTitle:"numberformat（数字格式化）",charIndex:707},{level:3,title:"dateFormat（日期格式化）",slug:"dateformat-日期格式化",normalizedTitle:"dateformat（日期格式化）",charIndex:1270},{level:3,title:"weekFormat（周格式化）",slug:"weekformat-周格式化",normalizedTitle:"weekformat（周格式化）",charIndex:1608},{level:3,title:"percentFormat（百分比格式化）",slug:"percentformat-百分比格式化",normalizedTitle:"percentformat（百分比格式化）",charIndex:2068},{level:3,title:"fileSizeFormat（文件大小格式化）",slug:"filesizeformat-文件大小格式化",normalizedTitle:"filesizeformat（文件大小格式化）",charIndex:2312}],headersStr:"通用配置项 预设格式化类型 strToArr（字符串转数组） multiPropToArr（多字段转数组） numberFormat（数字格式化） dateFormat（日期格式化） weekFormat（周格式化） percentFormat（百分比格式化） fileSizeFormat（文件大小格式化）",content:'# 格式化配置文档\n\n\n# 通用配置项\n\n配置项           类型               默认值     说明\ntype          String           -       格式化类型，可选值见下方预设格式化类型\nformatValue   Boolean/String   false   是否保存格式化后的值。为 true 时存储在 ${prop} 中，为字符串时存储在指定字段中\ninput         Function         -       格式化函数\noutput        Function         -       反格式化函数\n\n\n# 预设格式化类型\n\n\n# strToArr（字符串转数组）\n\n将字符串转换为数组。\n\n数据转换：\n\n"前端,Vue,React" -> ["前端", "Vue", "React"]\n\n\n配置项         类型       默认值   说明\nseparator   String   ","   分隔符\n\n\n# multiPropToArr（多字段转数组）\n\n将多个字段的值合并为数组。\n\n数据转换：\n\n{\n  province: "浙江",\n  city: "杭州",\n  district: "西湖"\n} -> ["浙江", "杭州", "西湖"]\n\n\n配置项         类型        默认值     说明\nmultiProp   Array     -       需要合并的字段名数组\nisObject    Boolean   false   是否包裹在字段prop的对象中\n\n\n# numberFormat（数字格式化）\n\n对数字进行格式化处理。\n\n数据转换：\n\n1234.56 -> "¥1,234.56" // thousandth: true, prefix: "¥", precision: 2\n1234.5678 -> "¥1234.57" // precision: 2, round: true, prefix: "¥"\n1234 -> "1,234.00" // toFixed: true, precision: 2\n\n\n配置项          类型        默认值         说明\nprecision    Number    undefined   精度（小数位数）\nround        Boolean   true        是否四舍五入\ntoFixed      Boolean   false       是否固定小数位数\nthousandth   Boolean   false       是否显示千分位\nprefix       String    ""          前缀\nsuffix       String    ""          后缀\nkeepZero     Boolean   false       是否保留末尾0\n\n\n# dateFormat（日期格式化）\n\n对日期进行格式化处理。\n\n数据转换：\n\n"2024-03-20" -> "2024年03月20日" // valueFormat: "YYYY年MM月DD日"\n1710921600000 -> "2024年03月20日" \nnew Date() -> "2024年03月20日"\n\n\n配置项            类型       默认值            说明\nvalueFormat    String   "YYYY-MM-DD"   值格式\noutputFormat   String   null           输出格式\noutputType     String   "string"       输出类型\n\n\n# weekFormat（周格式化）\n\n对周数据进行格式化处理。\n\n数据转换：\n\n"2024-03-20" -> ["2024-03-18", "2024-03-24"] // outputType: array\n"2024-03-20" -> "2024-03-18 ~ 2024-03-24" // outputType: string\n\n\n配置项           类型        默认值            说明\nvalueFormat   String    "YYYY-MM-DD"   日期格式\nweekStart     Number    0              周起始日（0-6）\nincludeTime   Boolean   false          是否包含时间\nseparator     String    " ~ "          日期分隔符\noutputType    String    "array"        输出类型：array 或 string\n\n\n# percentFormat（百分比格式化）\n\n对百分比数据进行格式化处理。\n\n数据转换：\n\n0.1234 -> "12.34%"\n0.1 -> "10.00%" // precision: 2\n\n\n配置项          类型        默认值    说明\nprecision    Number    2      小数位数\nmultiplier   Number    100    乘数因子\naddSymbol    Boolean   true   是否添加百分号\n\n\n# fileSizeFormat（文件大小格式化）\n\n对文件大小进行格式化处理。\n\n数据转换：\n\n1024 -> "1 KB"\n1234567 -> "1.18 MB"\n1234567890 -> "1.15 GB"\n\n\n配置项         类型       默认值                             说明\nunits       Array    ["B", "KB", "MB", "GB", "TB"]   单位数组\nprecision   Number   2                               小数位数',normalizedContent:'# 格式化配置文档\n\n\n# 通用配置项\n\n配置项           类型               默认值     说明\ntype          string           -       格式化类型，可选值见下方预设格式化类型\nformatvalue   boolean/string   false   是否保存格式化后的值。为 true 时存储在 ${prop} 中，为字符串时存储在指定字段中\ninput         function         -       格式化函数\noutput        function         -       反格式化函数\n\n\n# 预设格式化类型\n\n\n# strtoarr（字符串转数组）\n\n将字符串转换为数组。\n\n数据转换：\n\n"前端,vue,react" -> ["前端", "vue", "react"]\n\n\n配置项         类型       默认值   说明\nseparator   string   ","   分隔符\n\n\n# multiproptoarr（多字段转数组）\n\n将多个字段的值合并为数组。\n\n数据转换：\n\n{\n  province: "浙江",\n  city: "杭州",\n  district: "西湖"\n} -> ["浙江", "杭州", "西湖"]\n\n\n配置项         类型        默认值     说明\nmultiprop   array     -       需要合并的字段名数组\nisobject    boolean   false   是否包裹在字段prop的对象中\n\n\n# numberformat（数字格式化）\n\n对数字进行格式化处理。\n\n数据转换：\n\n1234.56 -> "¥1,234.56" // thousandth: true, prefix: "¥", precision: 2\n1234.5678 -> "¥1234.57" // precision: 2, round: true, prefix: "¥"\n1234 -> "1,234.00" // tofixed: true, precision: 2\n\n\n配置项          类型        默认值         说明\nprecision    number    undefined   精度（小数位数）\nround        boolean   true        是否四舍五入\ntofixed      boolean   false       是否固定小数位数\nthousandth   boolean   false       是否显示千分位\nprefix       string    ""          前缀\nsuffix       string    ""          后缀\nkeepzero     boolean   false       是否保留末尾0\n\n\n# dateformat（日期格式化）\n\n对日期进行格式化处理。\n\n数据转换：\n\n"2024-03-20" -> "2024年03月20日" // valueformat: "yyyy年mm月dd日"\n1710921600000 -> "2024年03月20日" \nnew date() -> "2024年03月20日"\n\n\n配置项            类型       默认值            说明\nvalueformat    string   "yyyy-mm-dd"   值格式\noutputformat   string   null           输出格式\noutputtype     string   "string"       输出类型\n\n\n# weekformat（周格式化）\n\n对周数据进行格式化处理。\n\n数据转换：\n\n"2024-03-20" -> ["2024-03-18", "2024-03-24"] // outputtype: array\n"2024-03-20" -> "2024-03-18 ~ 2024-03-24" // outputtype: string\n\n\n配置项           类型        默认值            说明\nvalueformat   string    "yyyy-mm-dd"   日期格式\nweekstart     number    0              周起始日（0-6）\nincludetime   boolean   false          是否包含时间\nseparator     string    " ~ "          日期分隔符\noutputtype    string    "array"        输出类型：array 或 string\n\n\n# percentformat（百分比格式化）\n\n对百分比数据进行格式化处理。\n\n数据转换：\n\n0.1234 -> "12.34%"\n0.1 -> "10.00%" // precision: 2\n\n\n配置项          类型        默认值    说明\nprecision    number    2      小数位数\nmultiplier   number    100    乘数因子\naddsymbol    boolean   true   是否添加百分号\n\n\n# filesizeformat（文件大小格式化）\n\n对文件大小进行格式化处理。\n\n数据转换：\n\n1024 -> "1 kb"\n1234567 -> "1.18 mb"\n1234567890 -> "1.15 gb"\n\n\n配置项         类型       默认值                             说明\nunits       array    ["b", "kb", "mb", "gb", "tb"]   单位数组\nprecision   number   2                               小数位数',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/grid/baseUse.html",relativePath:"guide/grid/baseUse.md",key:"v-bf76f3ba",path:"/guide/grid/baseUse.html",headers:[{level:2,title:"固定列数布局",slug:"固定列数布局",normalizedTitle:"固定列数布局",charIndex:103},{level:2,title:"固定列数-列宽控制布局",slug:"固定列数-列宽控制布局",normalizedTitle:"固定列数-列宽控制布局",charIndex:2652},{level:2,title:"自动填充模式",slug:"自动填充模式",normalizedTitle:"自动填充模式",charIndex:9598},{level:2,title:"自定义单元格大小、位置",slug:"自定义单元格大小、位置",normalizedTitle:"自定义单元格大小、位置",charIndex:12067},{level:2,title:"网格区域",slug:"网格区域",normalizedTitle:"网格区域",charIndex:17128},{level:2,title:"API 文档",slug:"api-文档",normalizedTitle:"api 文档",charIndex:18211},{level:3,title:"Grid 属性",slug:"grid-属性",normalizedTitle:"grid 属性",charIndex:18222},{level:3,title:"Cell 属性",slug:"cell-属性",normalizedTitle:"cell 属性",charIndex:20408}],headersStr:"固定列数布局 固定列数-列宽控制布局 自动填充模式 自定义单元格大小、位置 网格区域 API 文档 Grid 属性 Cell 属性",content:'# 基本使用\n\nGrid 是一个基于 CSS Grid 布局封装的灵活网格组件，提供了丰富的布局功能和灵活的配置选项。它可以轻松创建响应式网格布局，支持自动填充、固定列数、区域命名等多种布局方式。\n\n\n# 固定列数布局\n\ncolumns 列数，columnGap 列间距，rowGap 行间距。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-group">\r\n        <label>列数:</label>\r\n        <el-slider\r\n          v-model="columns"\r\n          :min="1"\r\n          :max="6"\r\n          :step="1"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>列间距 (px):</label>\r\n        <el-slider\r\n          v-model="columnGap"\r\n          :min="0"\r\n          :max="50"\r\n          :step="5"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>行间距 (px):</label>\r\n        <el-slider\r\n          v-model="rowGap"\r\n          :min="0"\r\n          :max="50"\r\n          :step="5"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :columns="columns" :column-gap="columnGap" :row-gap="rowGap">\r\n        <sc-cell v-for="i in cellCount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: \'60px\' }">\r\n            {{ i }}\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      基础网格布局示例 - 当前配置：{{ columns }}列，列间距{{\r\n        columnGap\r\n      }}px，行间距{{ rowGap }}px\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "GridBase",\r\n  data() {\r\n    return {\r\n      columns: 3,\r\n      columnWidth: 100,\r\n      columnGap: 20,\r\n      rowGap: 20,\r\n      cellCount: 9,\r\n      cellHeight: 80,\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n.control-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.control-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.control-group label {\r\n  width: 120px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.control-group .el-slider {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.grid-item {\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  color: #909399;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.grid-item:hover {\r\n  background-color: #e1f3d8;\r\n  color: #67c23a;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.demo-desc {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  background: #f0f9ff;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409eff;\r\n}\r\n</style>\r\n\n\n\n# 固定列数-列宽控制布局\n\n通过设置 columns 属性来固定列数，并通过不同的 columnWidth 来控制布局：\n\n * 平均分配模式：所有列平均分配可用空间(默认), columnWidth="1fr"\n * 固定宽度模式：所有列使用固定宽度，columnWidth="200px"\n * 最小最大宽度约束模式：列宽在最小值和最大值之间自适应， columnWidth="{min: 100, max: 300}"\n * 独立列宽模式：每列可以独立设置不同的宽度， columnWidth="[120, 200, 180]"\n * 高级独立列宽模式：每列可以独立设置最小宽度和最大宽度， columnWidth="[{min: 100, max: 300}, {min: 150, max: 250}]"\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-row">\r\n        <div class="control-group">\r\n          <label>列数:</label>\r\n          <el-slider\r\n            v-model="columns"\r\n            :min="1"\r\n            :max="6"\r\n            :step="1"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n\r\n        <div class="control-group">\r\n          <label>列宽模式:</label>\r\n          <el-select\r\n            v-model="columnMode"\r\n            placeholder="选择列宽模式"\r\n            size="small"\r\n          >\r\n            <el-option label="平均分配 (1fr)" value="auto"></el-option>\r\n            <el-option label="固定宽度" value="fixed"></el-option>\r\n            <el-option label="最小宽度约束" value="minmax"></el-option>\r\n            <el-option label="独立列宽" value="independent"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnMode === \'fixed\'">\r\n        <div class="control-group">\r\n          <label>列宽 (px):</label>\r\n          <el-slider\r\n            v-model="columnWidth"\r\n            :min="80"\r\n            :max="300"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnMode === \'minmax\'">\r\n        <div class="control-group">\r\n          <label>最小列宽 (px):</label>\r\n          <el-slider\r\n            v-model="minColumnWidth"\r\n            :min="50"\r\n            :max="200"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n\r\n        <div class="control-group">\r\n          <label>最大列宽 (px):</label>\r\n          <el-slider\r\n            v-model="maxColumnWidth"\r\n            :min="150"\r\n            :max="400"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnMode === \'independent\'">\r\n        <div\r\n          class="control-group"\r\n          v-for="(width, index) in independentWidths"\r\n          :key="index"\r\n        >\r\n          <label>第{{ index + 1 }}列宽度 (px):</label>\r\n          <el-select v-model="independentWidths[index]" size="small">\r\n            <el-option label="1fr(默认)" value="1fr"></el-option>\r\n            <el-option label="100px" value="100px"></el-option>\r\n            <el-option label="200px" value="200px"></el-option>\r\n            <el-option label="300px" value="300px"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <h4>{{ getModeTitle() }}</h4>\r\n      <sc-grid\r\n        :columns="columns"\r\n        :column-width="getColumnWidthConfig()"\r\n        :column-gap="columnGap"\r\n        :row-gap="rowGap"\r\n      >\r\n        <sc-cell v-for="i in cellCount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: cellHeight + \'px\' }">\r\n            <div class="item-content">\r\n              <div class="item-number">{{ i }}</div>\r\n              <div class="item-size" v-if="columnMode !== \'auto\'">\r\n                {{ getItemSizeText() }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      {{ getFullDescription() }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "GridFixedColumns",\r\n  data() {\r\n    return {\r\n      columns: 3,\r\n      columnMode: "auto", // auto, fixed, minmax, independent\r\n      columnWidth: 150,\r\n      minColumnWidth: 100,\r\n      maxColumnWidth: 250,\r\n      columnGap: 20,\r\n      rowGap: 20,\r\n      cellCount: 9,\r\n      cellHeight: 80,\r\n      independentWidths: ["1fr", "200px", "100px"], // 独立列宽数组\r\n    };\r\n  },\r\n  watch: {\r\n    columns(newVal) {\r\n      // 当列数改变时，调整独立列宽数组的长度\r\n      if (this.columnMode === "independent") {\r\n        this.adjustIndependentWidths(newVal);\r\n      }\r\n    },\r\n    columnMode(newVal) {\r\n      // 当切换到独立列宽模式时，确保数组长度正确\r\n      if (newVal === "independent") {\r\n        this.adjustIndependentWidths(this.columns);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    adjustIndependentWidths(columnCount) {\r\n      // 调整独立列宽数组的长度\r\n      const currentLength = this.independentWidths.length;\r\n      if (currentLength < columnCount) {\r\n        // 如果数组长度不足，用默认值填充\r\n        const defaultWidth = 150;\r\n        for (let i = currentLength; i < columnCount; i++) {\r\n          this.independentWidths.push(defaultWidth);\r\n        }\r\n      } else if (currentLength > columnCount) {\r\n        // 如果数组长度过多，截断多余部分\r\n        this.independentWidths = this.independentWidths.slice(0, columnCount);\r\n      }\r\n    },\r\n    getModeTitle() {\r\n      const titles = {\r\n        auto: "平均分配列宽布局",\r\n        fixed: "固定列宽布局",\r\n        minmax: "最小最大列宽约束布局",\r\n        independent: "独立列宽布局",\r\n      };\r\n      return titles[this.columnMode] || "未知模式";\r\n    },\r\n    getModeDescription() {\r\n      const descriptions = {\r\n        auto: "1fr平均分配",\r\n        fixed: "固定宽度",\r\n        minmax: "最小最大约束",\r\n      };\r\n      return descriptions[this.columnMode] || "";\r\n    },\r\n    getColumnWidthConfig() {\r\n      switch (this.columnMode) {\r\n        case \'fixed\':\r\n          return this.columnWidth;\r\n        case \'minmax\':\r\n          return { min: this.minColumnWidth, max: this.maxColumnWidth };\r\n        case \'independent\':\r\n          return this.independentWidths;\r\n        case \'auto\':\r\n        default:\r\n          return \'1fr\';\r\n      }\r\n    },\r\n    getColumnWidth() {\r\n      return this.columnMode === "fixed" ? this.columnWidth : null;\r\n    },\r\n    getMinColumnWidth() {\r\n      return this.columnMode === "minmax" ? this.minColumnWidth : null;\r\n    },\r\n    getMaxColumnWidth() {\r\n      return this.columnMode === "minmax" ? this.maxColumnWidth : null;\r\n    },\r\n    getItemSizeText() {\r\n      if (this.columnMode === "fixed") {\r\n        return `${this.columnWidth}px`;\r\n      } else if (this.columnMode === "minmax") {\r\n        return `${this.minColumnWidth}-${this.maxColumnWidth}px`;\r\n      }\r\n      return "";\r\n    },\r\n    getFullDescription() {\r\n      const modeTexts = {\r\n        auto: "平均分配模式：所有列均等分配可用空间，每列宽度为 1fr",\r\n        fixed: `固定宽度模式：每列固定宽度为 ${this.columnWidth}px，超出容器宽度时会出现水平滚动`,\r\n        minmax: `最小最大约束模式：列宽在 ${this.minColumnWidth}px 到 ${this.maxColumnWidth}px 之间自适应调整`,\r\n        independent: "独立列宽模式：每列可以设置不同的宽度值，支持混合使用固定值和弹性值"\r\n      };\r\n      return modeTexts[this.columnMode] || "";\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n</style>\r\n\n\n\n# 自动填充模式\n\n类 flex 布局，但是可以自动充满剩余空间。 autoFill 开启自动填充，columnWidth 设置每列最小宽度。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-group">\r\n        <label>最小列宽 (px):</label>\r\n        <el-slider\r\n          v-model="columnWidth"\r\n          :min="100"\r\n          :max="300"\r\n          :step="10"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>单元格数量:</label>\r\n        <el-slider\r\n          v-model="cellCount"\r\n          :min="4"\r\n          :max="16"\r\n          :step="1"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :autoFill="true" :column-width="columnWidth" :gap="gap">\r\n        <sc-cell v-for="i in cellCount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: \'60px\' }">{{ i }}</div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "GridAutoFill",\r\n  data() {\r\n    return {\r\n      autoFillMode: "autoFit",\r\n      columnWidth: 150,\r\n      gap: 20,\r\n      cellCount: 8,\r\n      cellHeight: 80,\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n.control-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.control-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.control-group label {\r\n  width: 120px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.control-group .el-slider {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.control-group .el-select {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.grid-item {\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  color: #909399;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.grid-item:hover {\r\n  background-color: #e1f3d8;\r\n  color: #67c23a;\r\n  transform: scale(1.05);\r\n}\r\n\r\nh4 {\r\n  margin: 0 0 15px;\r\n  font-size: 16px;\r\n  color: #303133;\r\n  padding: 10px;\r\n  background: linear-gradient(90deg, #409eff, #67c23a);\r\n  color: white;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n.demo-desc {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  background: #f0f9ff;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409eff;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 自定义单元格大小、位置\n\nsc-cell 组件可以通过 widthSize、heightSize、left 和 top 属性精确控制单元格的大小和位置。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-row">\r\n        \x3c!-- 定位控制面板 --\x3e\r\n        <div class="control-row">\r\n          <div class="control-group">\r\n            <label>左侧位置 (left):</label>\r\n            <el-slider\r\n              v-model="positionLeft"\r\n              :min="1"\r\n              :max="4"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n\r\n          <div class="control-group">\r\n            <label>顶部位置 (top):</label>\r\n            <el-slider\r\n              v-model="positionTop"\r\n              :min="1"\r\n              :max="3"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class="control-row">\r\n          <div class="control-group">\r\n            <label>宽度跨度 (widthSize):</label>\r\n            <el-slider\r\n              v-model="widthSize"\r\n              :min="1"\r\n              :max="4"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n\r\n          <div class="control-group">\r\n            <label>高度跨度 (heightSize):</label>\r\n            <el-slider\r\n              v-model="heightSize"\r\n              :min="1"\r\n              :max="3"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :columns="4" :gap="gap">\r\n        <sc-cell\r\n          :left="positionLeft"\r\n          :top="positionTop"\r\n          :width-size="widthSize"\r\n          :height-size="heightSize"\r\n          :center="true"\r\n        >\r\n          <div\r\n            class="grid-item position-demo"\r\n            :style="{ height: getPositionCellHeight + \'px\' }"\r\n          >\r\n            <div class="position-info">\r\n              <div class="position-coords">\r\n                位置: ({{ positionLeft }}, {{ positionTop }})\r\n              </div>\r\n              <div class="position-size">\r\n                尺寸: {{ widthSize }} × {{ heightSize }}\r\n              </div>\r\n              <div class="position-desc">定位演示单元格</div>\r\n            </div>\r\n          </div>\r\n        </sc-cell>\r\n\r\n        <sc-cell\r\n          v-for="index in positionFillCellCount"\r\n          :key="`fill-${index}`"\r\n          :center="true"\r\n        >\r\n          <div class="grid-item" :style="{ height: cellHeight + \'px\' }">\r\n            {{ index }}\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      {{ getModeDescription() }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "GridCellDemo",\r\n  data() {\r\n    return {\r\n      cellCount: 12, // 基础模式单元格数量\r\n      cellHeight: 60, // 单元格高度\r\n      gap: 10, // 网格间距\r\n      positionLeft: 1, // 左侧位置\r\n      positionTop: 1, // 顶部位置\r\n      widthSize: 2, // 单元格宽度\r\n      heightSize: 1, // 单元格高度\r\n    };\r\n  },\r\n  computed: {\r\n    // 计算定位模式填充单元格数量\r\n    positionFillCellCount() {\r\n      const totalCells = 12;\r\n      const occupiedCells = this.widthSize * this.heightSize;\r\n      return Math.max(0, totalCells - occupiedCells);\r\n    },\r\n\r\n    // 计算定位单元格的高度\r\n    getPositionCellHeight() {\r\n      return (\r\n        this.cellHeight * this.heightSize + this.gap * (this.heightSize - 1)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    getModeDescription() {\r\n      return `当前演示单元格位于 (${this.positionLeft},${this.positionTop})，跨越 ${this.widthSize} 列和 ${this.heightSize} 行，可通过滑块调整位置和尺寸。`;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n/* 跨行跨列演示单元格特殊样式 */\r\n.span-demo {\r\n  background-color: #fdf6ec !important;\r\n  color: #e6a23c !important;\r\n  border-color: #e6a23c !important;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.span-demo:hover {\r\n  background-color: #faecd8 !important;\r\n  color: #cf9236 !important;\r\n  border-color: #cf9236 !important;\r\n}\r\n\r\n.span-info {\r\n  text-align: center;\r\n}\r\n\r\n.span-size {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.span-desc {\r\n  font-size: 12px;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* 定位演示单元格特殊样式 */\r\n.position-demo {\r\n  background-color: #f0f9ff !important;\r\n  color: #409eff !important;\r\n  border-color: #409eff !important;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.position-demo:hover {\r\n  background-color: #e1f3ff !important;\r\n  color: #337ecc !important;\r\n  border-color: #337ecc !important;\r\n}\r\n\r\n.position-info {\r\n  text-align: center;\r\n}\r\n\r\n.position-coords {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.position-size {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.position-desc {\r\n  font-size: 11px;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* Element UI 滑块样式优化 */\r\n.control-group .el-slider {\r\n  width: 200px;\r\n}\r\n\r\n.control-group .el-slider__input {\r\n  width: 80px;\r\n}\r\n</style>\r\n\n\n\n# 网格区域\n\nGrid 组件支持通过 areas 属性定义命名的网格区域，配合 Cell 组件的 area 属性使用。网格区域是CSS Grid布局中的一个强大特性，允许您为网格的特定区域命名，然后将内容放置在这些命名区域中。\n\n<template>\r\n  <div class="grid-demo">\r\n    <sc-grid\r\n      :columns="3"\r\n      :rows="3"\r\n      :gap="10"\r\n      :areas="[\r\n        \'header header header\',\r\n        \'sidebar content content\',\r\n        \'footer footer footer\',\r\n      ]"\r\n    >\r\n      <sc-cell area="header" :center="true">\r\n        <div class="grid-item header">Header</div>\r\n      </sc-cell>\r\n      <sc-cell area="sidebar" :center="true">\r\n        <div class="grid-item sidebar1">Sidebar</div>\r\n      </sc-cell>\r\n      <sc-cell area="content" :center="true">\r\n        <div class="grid-item content">Content</div>\r\n      </sc-cell>\r\n      <sc-cell area="footer" :center="true">\r\n        <div class="grid-item footer">Footer</div>\r\n      </sc-cell>\r\n    </sc-grid>\r\n\r\n    <p class="demo-desc">\r\n      通过areas属性定义命名的网格区域，配合Cell组件的area属性使用\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "GridAreas",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n</style>\r\n\n\n\n# API 文档\n\n\n# Grid 属性\n\n属性名              说明                                                         类型                                 默认值\ncolumns          列数                                                         Number                             1\nautoFill         自动填充模式                                                     Boolean / String                   false\ncolumnWidth      设置列的基础宽度。支持多种形式：                                           String / Number / Array / Object   -\n                 - 字符串/数字：统一设置所有列宽度，如 "200px"\n                 - 对象：设置最小最大宽度约束，如 {min: 100, max: 300}\n                 - 数组：为每列独立设置宽度，如 [120, 200, 180]\n                 - 数组(对象)：高级独立列宽配置，如 [{min: 100, max: 300}, {width: 200}]\ngap              网格间隙（同时设置行列间隙）                                             String / Number                    -\ncolumnGap        列间隙                                                        String / Number                    -\nrowGap           行间隙                                                        String / Number                    -\nareas            网格区域名称                                                     String / Array                     -\nminRowHeight     最小行高                                                       String / Number                    \'auto\'\nmaxRowHeight     最大行高                                                       String / Number                    \'auto\'\nalignContent     垂直对齐方式                                                     String                             -\nrows             行数配置                                                       Number / String                    -\njustifyContent   水平对齐方式                                                     String                             -\nflow             网格流动方向                                                     String                             -\nheight           容器高度                                                       String / Number                    \'auto\'\ngridStyle        自定义网格样式                                                    Object                             {}\nfillCell         是否填充空白单元格                                                  Boolean                            false\n\n\n# Cell 属性\n\n属性名          说明             类型                默认值\nwidthSize    单元格宽度（跨越的列数）   Number / String   1\nheightSize   单元格高度（跨越的行数）   Number / String   1\narea         网格区域名称         String            -\ncenter       是否居中显示内容       Boolean           false\nleft         起始列位置          Number / String   -\ntop          起始行位置          Number / String   -\ncellStyle    自定义单元格样式       Object            {}',normalizedContent:'# 基本使用\n\ngrid 是一个基于 css grid 布局封装的灵活网格组件，提供了丰富的布局功能和灵活的配置选项。它可以轻松创建响应式网格布局，支持自动填充、固定列数、区域命名等多种布局方式。\n\n\n# 固定列数布局\n\ncolumns 列数，columngap 列间距，rowgap 行间距。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-group">\r\n        <label>列数:</label>\r\n        <el-slider\r\n          v-model="columns"\r\n          :min="1"\r\n          :max="6"\r\n          :step="1"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>列间距 (px):</label>\r\n        <el-slider\r\n          v-model="columngap"\r\n          :min="0"\r\n          :max="50"\r\n          :step="5"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>行间距 (px):</label>\r\n        <el-slider\r\n          v-model="rowgap"\r\n          :min="0"\r\n          :max="50"\r\n          :step="5"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :columns="columns" :column-gap="columngap" :row-gap="rowgap">\r\n        <sc-cell v-for="i in cellcount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: \'60px\' }">\r\n            {{ i }}\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      基础网格布局示例 - 当前配置：{{ columns }}列，列间距{{\r\n        columngap\r\n      }}px，行间距{{ rowgap }}px\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "gridbase",\r\n  data() {\r\n    return {\r\n      columns: 3,\r\n      columnwidth: 100,\r\n      columngap: 20,\r\n      rowgap: 20,\r\n      cellcount: 9,\r\n      cellheight: 80,\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n.control-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.control-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.control-group label {\r\n  width: 120px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.control-group .el-slider {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.grid-item {\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  color: #909399;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.grid-item:hover {\r\n  background-color: #e1f3d8;\r\n  color: #67c23a;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.demo-desc {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  background: #f0f9ff;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409eff;\r\n}\r\n</style>\r\n\n\n\n# 固定列数-列宽控制布局\n\n通过设置 columns 属性来固定列数，并通过不同的 columnwidth 来控制布局：\n\n * 平均分配模式：所有列平均分配可用空间(默认), columnwidth="1fr"\n * 固定宽度模式：所有列使用固定宽度，columnwidth="200px"\n * 最小最大宽度约束模式：列宽在最小值和最大值之间自适应， columnwidth="{min: 100, max: 300}"\n * 独立列宽模式：每列可以独立设置不同的宽度， columnwidth="[120, 200, 180]"\n * 高级独立列宽模式：每列可以独立设置最小宽度和最大宽度， columnwidth="[{min: 100, max: 300}, {min: 150, max: 250}]"\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-row">\r\n        <div class="control-group">\r\n          <label>列数:</label>\r\n          <el-slider\r\n            v-model="columns"\r\n            :min="1"\r\n            :max="6"\r\n            :step="1"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n\r\n        <div class="control-group">\r\n          <label>列宽模式:</label>\r\n          <el-select\r\n            v-model="columnmode"\r\n            placeholder="选择列宽模式"\r\n            size="small"\r\n          >\r\n            <el-option label="平均分配 (1fr)" value="auto"></el-option>\r\n            <el-option label="固定宽度" value="fixed"></el-option>\r\n            <el-option label="最小宽度约束" value="minmax"></el-option>\r\n            <el-option label="独立列宽" value="independent"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnmode === \'fixed\'">\r\n        <div class="control-group">\r\n          <label>列宽 (px):</label>\r\n          <el-slider\r\n            v-model="columnwidth"\r\n            :min="80"\r\n            :max="300"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnmode === \'minmax\'">\r\n        <div class="control-group">\r\n          <label>最小列宽 (px):</label>\r\n          <el-slider\r\n            v-model="mincolumnwidth"\r\n            :min="50"\r\n            :max="200"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n\r\n        <div class="control-group">\r\n          <label>最大列宽 (px):</label>\r\n          <el-slider\r\n            v-model="maxcolumnwidth"\r\n            :min="150"\r\n            :max="400"\r\n            :step="10"\r\n            show-input\r\n            :input-size="\'small\'"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class="control-row" v-if="columnmode === \'independent\'">\r\n        <div\r\n          class="control-group"\r\n          v-for="(width, index) in independentwidths"\r\n          :key="index"\r\n        >\r\n          <label>第{{ index + 1 }}列宽度 (px):</label>\r\n          <el-select v-model="independentwidths[index]" size="small">\r\n            <el-option label="1fr(默认)" value="1fr"></el-option>\r\n            <el-option label="100px" value="100px"></el-option>\r\n            <el-option label="200px" value="200px"></el-option>\r\n            <el-option label="300px" value="300px"></el-option>\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <h4>{{ getmodetitle() }}</h4>\r\n      <sc-grid\r\n        :columns="columns"\r\n        :column-width="getcolumnwidthconfig()"\r\n        :column-gap="columngap"\r\n        :row-gap="rowgap"\r\n      >\r\n        <sc-cell v-for="i in cellcount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: cellheight + \'px\' }">\r\n            <div class="item-content">\r\n              <div class="item-number">{{ i }}</div>\r\n              <div class="item-size" v-if="columnmode !== \'auto\'">\r\n                {{ getitemsizetext() }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      {{ getfulldescription() }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "gridfixedcolumns",\r\n  data() {\r\n    return {\r\n      columns: 3,\r\n      columnmode: "auto", // auto, fixed, minmax, independent\r\n      columnwidth: 150,\r\n      mincolumnwidth: 100,\r\n      maxcolumnwidth: 250,\r\n      columngap: 20,\r\n      rowgap: 20,\r\n      cellcount: 9,\r\n      cellheight: 80,\r\n      independentwidths: ["1fr", "200px", "100px"], // 独立列宽数组\r\n    };\r\n  },\r\n  watch: {\r\n    columns(newval) {\r\n      // 当列数改变时，调整独立列宽数组的长度\r\n      if (this.columnmode === "independent") {\r\n        this.adjustindependentwidths(newval);\r\n      }\r\n    },\r\n    columnmode(newval) {\r\n      // 当切换到独立列宽模式时，确保数组长度正确\r\n      if (newval === "independent") {\r\n        this.adjustindependentwidths(this.columns);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    adjustindependentwidths(columncount) {\r\n      // 调整独立列宽数组的长度\r\n      const currentlength = this.independentwidths.length;\r\n      if (currentlength < columncount) {\r\n        // 如果数组长度不足，用默认值填充\r\n        const defaultwidth = 150;\r\n        for (let i = currentlength; i < columncount; i++) {\r\n          this.independentwidths.push(defaultwidth);\r\n        }\r\n      } else if (currentlength > columncount) {\r\n        // 如果数组长度过多，截断多余部分\r\n        this.independentwidths = this.independentwidths.slice(0, columncount);\r\n      }\r\n    },\r\n    getmodetitle() {\r\n      const titles = {\r\n        auto: "平均分配列宽布局",\r\n        fixed: "固定列宽布局",\r\n        minmax: "最小最大列宽约束布局",\r\n        independent: "独立列宽布局",\r\n      };\r\n      return titles[this.columnmode] || "未知模式";\r\n    },\r\n    getmodedescription() {\r\n      const descriptions = {\r\n        auto: "1fr平均分配",\r\n        fixed: "固定宽度",\r\n        minmax: "最小最大约束",\r\n      };\r\n      return descriptions[this.columnmode] || "";\r\n    },\r\n    getcolumnwidthconfig() {\r\n      switch (this.columnmode) {\r\n        case \'fixed\':\r\n          return this.columnwidth;\r\n        case \'minmax\':\r\n          return { min: this.mincolumnwidth, max: this.maxcolumnwidth };\r\n        case \'independent\':\r\n          return this.independentwidths;\r\n        case \'auto\':\r\n        default:\r\n          return \'1fr\';\r\n      }\r\n    },\r\n    getcolumnwidth() {\r\n      return this.columnmode === "fixed" ? this.columnwidth : null;\r\n    },\r\n    getmincolumnwidth() {\r\n      return this.columnmode === "minmax" ? this.mincolumnwidth : null;\r\n    },\r\n    getmaxcolumnwidth() {\r\n      return this.columnmode === "minmax" ? this.maxcolumnwidth : null;\r\n    },\r\n    getitemsizetext() {\r\n      if (this.columnmode === "fixed") {\r\n        return `${this.columnwidth}px`;\r\n      } else if (this.columnmode === "minmax") {\r\n        return `${this.mincolumnwidth}-${this.maxcolumnwidth}px`;\r\n      }\r\n      return "";\r\n    },\r\n    getfulldescription() {\r\n      const modetexts = {\r\n        auto: "平均分配模式：所有列均等分配可用空间，每列宽度为 1fr",\r\n        fixed: `固定宽度模式：每列固定宽度为 ${this.columnwidth}px，超出容器宽度时会出现水平滚动`,\r\n        minmax: `最小最大约束模式：列宽在 ${this.mincolumnwidth}px 到 ${this.maxcolumnwidth}px 之间自适应调整`,\r\n        independent: "独立列宽模式：每列可以设置不同的宽度值，支持混合使用固定值和弹性值"\r\n      };\r\n      return modetexts[this.columnmode] || "";\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n</style>\r\n\n\n\n# 自动填充模式\n\n类 flex 布局，但是可以自动充满剩余空间。 autofill 开启自动填充，columnwidth 设置每列最小宽度。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-group">\r\n        <label>最小列宽 (px):</label>\r\n        <el-slider\r\n          v-model="columnwidth"\r\n          :min="100"\r\n          :max="300"\r\n          :step="10"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n\r\n      <div class="control-group">\r\n        <label>单元格数量:</label>\r\n        <el-slider\r\n          v-model="cellcount"\r\n          :min="4"\r\n          :max="16"\r\n          :step="1"\r\n          show-input\r\n          :input-size="\'small\'"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :autofill="true" :column-width="columnwidth" :gap="gap">\r\n        <sc-cell v-for="i in cellcount" :key="i" :center="true">\r\n          <div class="grid-item" :style="{ height: \'60px\' }">{{ i }}</div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "gridautofill",\r\n  data() {\r\n    return {\r\n      autofillmode: "autofit",\r\n      columnwidth: 150,\r\n      gap: 20,\r\n      cellcount: 8,\r\n      cellheight: 80,\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n.control-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.control-group:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.control-group label {\r\n  width: 120px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.control-group .el-slider {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.control-group .el-select {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.grid-item {\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  color: #909399;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.grid-item:hover {\r\n  background-color: #e1f3d8;\r\n  color: #67c23a;\r\n  transform: scale(1.05);\r\n}\r\n\r\nh4 {\r\n  margin: 0 0 15px;\r\n  font-size: 16px;\r\n  color: #303133;\r\n  padding: 10px;\r\n  background: linear-gradient(90deg, #409eff, #67c23a);\r\n  color: white;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n.demo-desc {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n  background: #f0f9ff;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409eff;\r\n  line-height: 1.6;\r\n}\r\n</style>\r\n\n\n\n# 自定义单元格大小、位置\n\nsc-cell 组件可以通过 widthsize、heightsize、left 和 top 属性精确控制单元格的大小和位置。\n\n<template>\r\n  <div class="grid-demo">\r\n    \x3c!-- 控制面板 --\x3e\r\n    <div class="control-panel">\r\n      <div class="control-row">\r\n        \x3c!-- 定位控制面板 --\x3e\r\n        <div class="control-row">\r\n          <div class="control-group">\r\n            <label>左侧位置 (left):</label>\r\n            <el-slider\r\n              v-model="positionleft"\r\n              :min="1"\r\n              :max="4"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n\r\n          <div class="control-group">\r\n            <label>顶部位置 (top):</label>\r\n            <el-slider\r\n              v-model="positiontop"\r\n              :min="1"\r\n              :max="3"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class="control-row">\r\n          <div class="control-group">\r\n            <label>宽度跨度 (widthsize):</label>\r\n            <el-slider\r\n              v-model="widthsize"\r\n              :min="1"\r\n              :max="4"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n\r\n          <div class="control-group">\r\n            <label>高度跨度 (heightsize):</label>\r\n            <el-slider\r\n              v-model="heightsize"\r\n              :min="1"\r\n              :max="3"\r\n              :step="1"\r\n              show-input\r\n              :input-size="\'small\'"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \x3c!-- 网格展示区域 --\x3e\r\n    <div class="grid-container">\r\n      <sc-grid :columns="4" :gap="gap">\r\n        <sc-cell\r\n          :left="positionleft"\r\n          :top="positiontop"\r\n          :width-size="widthsize"\r\n          :height-size="heightsize"\r\n          :center="true"\r\n        >\r\n          <div\r\n            class="grid-item position-demo"\r\n            :style="{ height: getpositioncellheight + \'px\' }"\r\n          >\r\n            <div class="position-info">\r\n              <div class="position-coords">\r\n                位置: ({{ positionleft }}, {{ positiontop }})\r\n              </div>\r\n              <div class="position-size">\r\n                尺寸: {{ widthsize }} × {{ heightsize }}\r\n              </div>\r\n              <div class="position-desc">定位演示单元格</div>\r\n            </div>\r\n          </div>\r\n        </sc-cell>\r\n\r\n        <sc-cell\r\n          v-for="index in positionfillcellcount"\r\n          :key="`fill-${index}`"\r\n          :center="true"\r\n        >\r\n          <div class="grid-item" :style="{ height: cellheight + \'px\' }">\r\n            {{ index }}\r\n          </div>\r\n        </sc-cell>\r\n      </sc-grid>\r\n    </div>\r\n\r\n    <p class="demo-desc">\r\n      {{ getmodedescription() }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "gridcelldemo",\r\n  data() {\r\n    return {\r\n      cellcount: 12, // 基础模式单元格数量\r\n      cellheight: 60, // 单元格高度\r\n      gap: 10, // 网格间距\r\n      positionleft: 1, // 左侧位置\r\n      positiontop: 1, // 顶部位置\r\n      widthsize: 2, // 单元格宽度\r\n      heightsize: 1, // 单元格高度\r\n    };\r\n  },\r\n  computed: {\r\n    // 计算定位模式填充单元格数量\r\n    positionfillcellcount() {\r\n      const totalcells = 12;\r\n      const occupiedcells = this.widthsize * this.heightsize;\r\n      return math.max(0, totalcells - occupiedcells);\r\n    },\r\n\r\n    // 计算定位单元格的高度\r\n    getpositioncellheight() {\r\n      return (\r\n        this.cellheight * this.heightsize + this.gap * (this.heightsize - 1)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    getmodedescription() {\r\n      return `当前演示单元格位于 (${this.positionleft},${this.positiontop})，跨越 ${this.widthsize} 列和 ${this.heightsize} 行，可通过滑块调整位置和尺寸。`;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n\r\n/* 跨行跨列演示单元格特殊样式 */\r\n.span-demo {\r\n  background-color: #fdf6ec !important;\r\n  color: #e6a23c !important;\r\n  border-color: #e6a23c !important;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.span-demo:hover {\r\n  background-color: #faecd8 !important;\r\n  color: #cf9236 !important;\r\n  border-color: #cf9236 !important;\r\n}\r\n\r\n.span-info {\r\n  text-align: center;\r\n}\r\n\r\n.span-size {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.span-desc {\r\n  font-size: 12px;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* 定位演示单元格特殊样式 */\r\n.position-demo {\r\n  background-color: #f0f9ff !important;\r\n  color: #409eff !important;\r\n  border-color: #409eff !important;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.position-demo:hover {\r\n  background-color: #e1f3ff !important;\r\n  color: #337ecc !important;\r\n  border-color: #337ecc !important;\r\n}\r\n\r\n.position-info {\r\n  text-align: center;\r\n}\r\n\r\n.position-coords {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.position-size {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.position-desc {\r\n  font-size: 11px;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* element ui 滑块样式优化 */\r\n.control-group .el-slider {\r\n  width: 200px;\r\n}\r\n\r\n.control-group .el-slider__input {\r\n  width: 80px;\r\n}\r\n</style>\r\n\n\n\n# 网格区域\n\ngrid 组件支持通过 areas 属性定义命名的网格区域，配合 cell 组件的 area 属性使用。网格区域是css grid布局中的一个强大特性，允许您为网格的特定区域命名，然后将内容放置在这些命名区域中。\n\n<template>\r\n  <div class="grid-demo">\r\n    <sc-grid\r\n      :columns="3"\r\n      :rows="3"\r\n      :gap="10"\r\n      :areas="[\r\n        \'header header header\',\r\n        \'sidebar content content\',\r\n        \'footer footer footer\',\r\n      ]"\r\n    >\r\n      <sc-cell area="header" :center="true">\r\n        <div class="grid-item header">header</div>\r\n      </sc-cell>\r\n      <sc-cell area="sidebar" :center="true">\r\n        <div class="grid-item sidebar1">sidebar</div>\r\n      </sc-cell>\r\n      <sc-cell area="content" :center="true">\r\n        <div class="grid-item content">content</div>\r\n      </sc-cell>\r\n      <sc-cell area="footer" :center="true">\r\n        <div class="grid-item footer">footer</div>\r\n      </sc-cell>\r\n    </sc-grid>\r\n\r\n    <p class="demo-desc">\r\n      通过areas属性定义命名的网格区域，配合cell组件的area属性使用\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "gridareas",\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n@import "./common-styles.scss";\r\n</style>\r\n\n\n\n# api 文档\n\n\n# grid 属性\n\n属性名              说明                                                         类型                                 默认值\ncolumns          列数                                                         number                             1\nautofill         自动填充模式                                                     boolean / string                   false\ncolumnwidth      设置列的基础宽度。支持多种形式：                                           string / number / array / object   -\n                 - 字符串/数字：统一设置所有列宽度，如 "200px"\n                 - 对象：设置最小最大宽度约束，如 {min: 100, max: 300}\n                 - 数组：为每列独立设置宽度，如 [120, 200, 180]\n                 - 数组(对象)：高级独立列宽配置，如 [{min: 100, max: 300}, {width: 200}]\ngap              网格间隙（同时设置行列间隙）                                             string / number                    -\ncolumngap        列间隙                                                        string / number                    -\nrowgap           行间隙                                                        string / number                    -\nareas            网格区域名称                                                     string / array                     -\nminrowheight     最小行高                                                       string / number                    \'auto\'\nmaxrowheight     最大行高                                                       string / number                    \'auto\'\naligncontent     垂直对齐方式                                                     string                             -\nrows             行数配置                                                       number / string                    -\njustifycontent   水平对齐方式                                                     string                             -\nflow             网格流动方向                                                     string                             -\nheight           容器高度                                                       string / number                    \'auto\'\ngridstyle        自定义网格样式                                                    object                             {}\nfillcell         是否填充空白单元格                                                  boolean                            false\n\n\n# cell 属性\n\n属性名          说明             类型                默认值\nwidthsize    单元格宽度（跨越的列数）   number / string   1\nheightsize   单元格高度（跨越的行数）   number / string   1\narea         网格区域名称         string            -\ncenter       是否居中显示内容       boolean           false\nleft         起始列位置          number / string   -\ntop          起始行位置          number / string   -\ncellstyle    自定义单元格样式       object            {}',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/formatData/baseUse.html",relativePath:"guide/formatData/baseUse.md",key:"v-33d6c62d",path:"/guide/formatData/baseUse.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:126},{level:2,title:"预设格式化模板",slug:"预设格式化模板",normalizedTitle:"预设格式化模板",charIndex:3361},{level:2,title:"自定义当前列的格式化函数",slug:"自定义当前列的格式化函数",normalizedTitle:"自定义当前列的格式化函数",charIndex:3548},{level:2,title:"格式化值的存储",slug:"格式化值的存储",normalizedTitle:"格式化值的存储",charIndex:3705},{level:2,title:"全局注册格式化模板",slug:"全局注册格式化模板",normalizedTitle:"全局注册格式化模板",charIndex:3948},{level:2,title:"在render或插槽渲染中使用",slug:"在render或插槽渲染中使用",normalizedTitle:"在render或插槽渲染中使用",charIndex:4320}],headersStr:"概述 示例 预设格式化模板 自定义当前列的格式化函数 格式化值的存储 全局注册格式化模板 在render或插槽渲染中使用",content:'# 基本使用\n\n\n# 概述\n\n数据格式化（formatData）用于解决组件所需数据格式与业务数据格式不一致的问题。它提供了两个核心功能：\n\n * input: 将业务数据转换为组件所需格式\n * output: 将组件数据转换回业务所需格式\n\n\n# 示例\n\n<template>\r\n  <div>\r\n    <sc-form v-model="form" :options="options" />\r\n\r\n    \x3c!-- 格式化前后的值对比 --\x3e\r\n    <div>\r\n      <h3>格式化数据展示：</h3>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>省市区对象转数组：</div>\r\n        <div>\r\n          <div>原始值三个字段：{{ JSON.stringify(form.address) }}</div>\r\n          <div>格式化后：{{ form.$address }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>字符串转数组：</div>\r\n        <div>\r\n          <div>原始值：{{ form.tags }}</div>\r\n          <div>格式化后：{{ form.$tags }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>数字格式化：</div>\r\n        <div>\r\n          <div>原始值：{{ form.price }}</div>\r\n          <div>格式化后：{{ form.$price }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div>自定义：</div>\r\n        <div>\r\n          <div>原始值：{{ form.custom }}</div>\r\n          <div>格式化后：{{ form.$custom }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { cityTreeData } from "../mock";\r\nimport { pick } from "lodash-es";\r\nexport default {\r\n  data() {\r\n    return {\r\n      pick,\r\n      form: {\r\n        address: {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          district: "西湖区",\r\n        },\r\n        tags: "前端,Vue,React",\r\n        price: 1234.56,\r\n        custom: "123",\r\n      },\r\n      options: {\r\n        labelWidth: "160px",\r\n        renderColumns: [\r\n          {\r\n            label: "省市区对象转数组",\r\n            prop: "address",\r\n            required: true,\r\n            validateProp: "address.province",\r\n            formatData: {\r\n              type: "multiPropToArr",\r\n              isObject: true,\r\n              multiProp: ["province", "city", "district"],\r\n              formatValue: true, // 开启格式化值存储\r\n            },\r\n            comp: {\r\n              name: "el-cascader",\r\n              options: cityTreeData, // 省市区选项数据\r\n            },\r\n          },\r\n          {\r\n            label: "字符串转数组",\r\n            prop: "tags",\r\n            formatData: {\r\n              type: "strToArr",\r\n              formatValue: true,\r\n            },\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              options: [\r\n                { label: "前端", value: "前端" },\r\n                { label: "Vue", value: "Vue" },\r\n                { label: "React", value: "React" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            label: "数字格式化",\r\n            prop: "price",\r\n            formatData: {\r\n              type: "numberFormat",\r\n              precision: 2,\r\n              prefix: "¥",\r\n              formatValue: true,\r\n            },\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n          {\r\n            label: "自定义格式化",\r\n            prop: "custom",\r\n            formatData: {\r\n              input: (value) => {\r\n                return value + "--custom";\r\n              },\r\n              output: (value) => {\r\n                return value.replace("--custom", "");\r\n              },\r\n              formatValue: true,\r\n            },\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 预设格式化模板\n\nformatData 直接指定预设模板的名称：\n\n{\n  label: "省市区",\n  prop: "province",\n  formatData: {\n    type: "multiPropToArr",\n    multiProp: ["province", "city", "district"] // 绑定的多字段参数\n  }\n}\n\n\n\n# 自定义当前列的格式化函数\n\n{\n  label: "自定义",\n  prop: "custom",\n  formatData: {\n    input: (value) => value.join(","),\n    output: (value) => value.split(","),\n  }\n}\n\n\n\n# 格式化值的存储\n\n如果需要同时保留原始值和格式化后的值，可以通过 formatValue 配置存储位置：\n\n{\n  label: "金额",\n  prop: "amount",\n  formatData: {\n    formatValue: true, // 格式化后的值会存储在 row.$amount\n    // 或\n    formatValue: "formattedAmount" // 格式化后的值会存储在 row.formattedAmount\n  }\n}\n\n\n\n# 全局注册格式化模板\n\nitem 即为当前列配置，可以获取到传入的配置信息 prop、label、formatData配置 等\n\nimport superCrud from "src";\n\nVue.use(superCrud, {\n  template: {\n    formatData: {\n      "custom": (item) => {\n        const { prop, label, formatData } = item;\n        return {\n          input: (value) => value.join(","),\n          output: (value) => value.split(","),\n        }\n      }\n    }\n  },\n});\n\n\n\n# 在render或插槽渲染中使用\n\n在render或插槽渲染中使用时，需要使用 $value 对象来获取和设置值。\n\n{\n  label: "自定义",\n  prop: "custom",\n  formatData: "strToArr",\n  render: (h, { $value }) => {\n    return <el-input value={$value.get} onInput={(v)=>$value.set(v)} />;\n  }\n}\n',normalizedContent:'# 基本使用\n\n\n# 概述\n\n数据格式化（formatdata）用于解决组件所需数据格式与业务数据格式不一致的问题。它提供了两个核心功能：\n\n * input: 将业务数据转换为组件所需格式\n * output: 将组件数据转换回业务所需格式\n\n\n# 示例\n\n<template>\r\n  <div>\r\n    <sc-form v-model="form" :options="options" />\r\n\r\n    \x3c!-- 格式化前后的值对比 --\x3e\r\n    <div>\r\n      <h3>格式化数据展示：</h3>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>省市区对象转数组：</div>\r\n        <div>\r\n          <div>原始值三个字段：{{ json.stringify(form.address) }}</div>\r\n          <div>格式化后：{{ form.$address }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>字符串转数组：</div>\r\n        <div>\r\n          <div>原始值：{{ form.tags }}</div>\r\n          <div>格式化后：{{ form.$tags }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style="margin-bottom: 20px;">\r\n        <div>数字格式化：</div>\r\n        <div>\r\n          <div>原始值：{{ form.price }}</div>\r\n          <div>格式化后：{{ form.$price }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div>自定义：</div>\r\n        <div>\r\n          <div>原始值：{{ form.custom }}</div>\r\n          <div>格式化后：{{ form.$custom }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { citytreedata } from "../mock";\r\nimport { pick } from "lodash-es";\r\nexport default {\r\n  data() {\r\n    return {\r\n      pick,\r\n      form: {\r\n        address: {\r\n          province: "浙江",\r\n          city: "杭州",\r\n          district: "西湖区",\r\n        },\r\n        tags: "前端,vue,react",\r\n        price: 1234.56,\r\n        custom: "123",\r\n      },\r\n      options: {\r\n        labelwidth: "160px",\r\n        rendercolumns: [\r\n          {\r\n            label: "省市区对象转数组",\r\n            prop: "address",\r\n            required: true,\r\n            validateprop: "address.province",\r\n            formatdata: {\r\n              type: "multiproptoarr",\r\n              isobject: true,\r\n              multiprop: ["province", "city", "district"],\r\n              formatvalue: true, // 开启格式化值存储\r\n            },\r\n            comp: {\r\n              name: "el-cascader",\r\n              options: citytreedata, // 省市区选项数据\r\n            },\r\n          },\r\n          {\r\n            label: "字符串转数组",\r\n            prop: "tags",\r\n            formatdata: {\r\n              type: "strtoarr",\r\n              formatvalue: true,\r\n            },\r\n            comp: {\r\n              name: "el-select",\r\n              multiple: true,\r\n              options: [\r\n                { label: "前端", value: "前端" },\r\n                { label: "vue", value: "vue" },\r\n                { label: "react", value: "react" },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            label: "数字格式化",\r\n            prop: "price",\r\n            formatdata: {\r\n              type: "numberformat",\r\n              precision: 2,\r\n              prefix: "¥",\r\n              formatvalue: true,\r\n            },\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n          {\r\n            label: "自定义格式化",\r\n            prop: "custom",\r\n            formatdata: {\r\n              input: (value) => {\r\n                return value + "--custom";\r\n              },\r\n              output: (value) => {\r\n                return value.replace("--custom", "");\r\n              },\r\n              formatvalue: true,\r\n            },\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 预设格式化模板\n\nformatdata 直接指定预设模板的名称：\n\n{\n  label: "省市区",\n  prop: "province",\n  formatdata: {\n    type: "multiproptoarr",\n    multiprop: ["province", "city", "district"] // 绑定的多字段参数\n  }\n}\n\n\n\n# 自定义当前列的格式化函数\n\n{\n  label: "自定义",\n  prop: "custom",\n  formatdata: {\n    input: (value) => value.join(","),\n    output: (value) => value.split(","),\n  }\n}\n\n\n\n# 格式化值的存储\n\n如果需要同时保留原始值和格式化后的值，可以通过 formatvalue 配置存储位置：\n\n{\n  label: "金额",\n  prop: "amount",\n  formatdata: {\n    formatvalue: true, // 格式化后的值会存储在 row.$amount\n    // 或\n    formatvalue: "formattedamount" // 格式化后的值会存储在 row.formattedamount\n  }\n}\n\n\n\n# 全局注册格式化模板\n\nitem 即为当前列配置，可以获取到传入的配置信息 prop、label、formatdata配置 等\n\nimport supercrud from "src";\n\nvue.use(supercrud, {\n  template: {\n    formatdata: {\n      "custom": (item) => {\n        const { prop, label, formatdata } = item;\n        return {\n          input: (value) => value.join(","),\n          output: (value) => value.split(","),\n        }\n      }\n    }\n  },\n});\n\n\n\n# 在render或插槽渲染中使用\n\n在render或插槽渲染中使用时，需要使用 $value 对象来获取和设置值。\n\n{\n  label: "自定义",\n  prop: "custom",\n  formatdata: "strtoarr",\n  render: (h, { $value }) => {\n    return <el-input value={$value.get} oninput={(v)=>$value.set(v)} />;\n  }\n}\n',charsets:{cjk:!0}},{title:"问题合集",frontmatter:{},regularPath:"/guide/question/base.html",relativePath:"guide/question/base.md",key:"v-28bb2c97",path:"/guide/question/base.html",headers:[{level:2,title:"1. render函数渲染中ref实例绑定问题",slug:"_1-render函数渲染中ref实例绑定问题",normalizedTitle:"1. render函数渲染中ref实例绑定问题",charIndex:11},{level:3,title:"问题",slug:"问题",normalizedTitle:"问题",charIndex:2},{level:3,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:234}],headersStr:"1. render函数渲染中ref实例绑定问题 问题 解决方案",content:'# 问题合集\n\n\n# 1. render函数渲染中ref实例绑定问题\n\n\n# 问题\n\n在使用render函数渲染时，如果参数接收了h函数，this.$refs.input组件实例绑定会丢失。\n\n// 此时this.$refs.input为undefined\n\nrender: (h, scope) => {\n  return <el-input ref="input" v-model={scope.row.gender} ></el-input>;\n},\n\n\n\n# 解决方案\n\n 1. 忽略h函数，使用render函数渲染\n\nrender: (...args) => {\n  const { row } = args[1];\n  return <el-input ref="input" v-model={row.gender}></el-input>;\n},\n\n\n 2. 使用ref函数获取组件实例\n\nrender: (h, scope) => {\n  return (\n    <el-input\n      ref={(el) => {\n        console.log(el, "el");\n      }}\n      v-model={scope.row.gender}\n    ></el-input>\n  );\n},\n',normalizedContent:'# 问题合集\n\n\n# 1. render函数渲染中ref实例绑定问题\n\n\n# 问题\n\n在使用render函数渲染时，如果参数接收了h函数，this.$refs.input组件实例绑定会丢失。\n\n// 此时this.$refs.input为undefined\n\nrender: (h, scope) => {\n  return <el-input ref="input" v-model={scope.row.gender} ></el-input>;\n},\n\n\n\n# 解决方案\n\n 1. 忽略h函数，使用render函数渲染\n\nrender: (...args) => {\n  const { row } = args[1];\n  return <el-input ref="input" v-model={row.gender}></el-input>;\n},\n\n\n 2. 使用ref函数获取组件实例\n\nrender: (h, scope) => {\n  return (\n    <el-input\n      ref={(el) => {\n        console.log(el, "el");\n      }}\n      v-model={scope.row.gender}\n    ></el-input>\n  );\n},\n',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/positionSlot/base.html",relativePath:"guide/positionSlot/base.md",key:"v-525cf9f7",path:"/guide/positionSlot/base.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"单独用法",slug:"单独用法",normalizedTitle:"单独用法",charIndex:61},{level:2,title:"搭配组件内置插槽使用",slug:"搭配组件内置插槽使用",normalizedTitle:"搭配组件内置插槽使用",charIndex:666},{level:2,title:"在渲染单元格中使用",slug:"在渲染单元格中使用",normalizedTitle:"在渲染单元格中使用",charIndex:3033}],headersStr:"概述 单独用法 搭配组件内置插槽使用 在渲染单元格中使用",content:'# 基本使用\n\n\n# 概述\n\n方位插槽是一个灵活的布局组件，用于在内容周围添加上、下、左、右四个位置的插槽内容。\n\n\n# 单独用法\n\n<template>\r\n  <sc-position>\r\n    <template #left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #top>\r\n      <el-button style="width: 100%;" type="primary">顶部</el-button>\r\n    </template>\r\n    <template #bottom>\r\n      <el-button style="width: 100%;" type="primary">底部</el-button>\r\n    </template>\r\n    <el-input v-model="value" placeholder="请输入内容" />\r\n  </sc-position>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return { value: "" };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 搭配组件内置插槽使用\n\n组件内部各种插槽均已封装方位组件。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getList="getList"\r\n  >\r\n    <template #handleRow>\r\n      <el-button>操作栏</el-button>\r\n    </template>\r\n    <template #handleRow-left>\r\n      <el-button type="primary">操作栏左侧</el-button>\r\n    </template>\r\n    <template #handleRow-right>\r\n      <el-button type="primary">操作栏右侧</el-button>\r\n    </template>\r\n    <template #handleRow-top>\r\n      <el-button type="primary" style="width: 100%;">操作栏顶部</el-button>\r\n    </template>\r\n    <template #handleRow-bottom>\r\n      <el-button type="primary" style="width: 100%;">操作栏底部</el-button>\r\n    </template>\r\n    <template #name-header-left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #name-header-right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #name-header-top>\r\n      <el-button type="primary" style="width: 100%;">顶部</el-button>\r\n    </template>\r\n    <template #name-header-bottom>\r\n      <el-button type="primary" style="width: 100%;">底部</el-button>\r\n    </template>\r\n    <template #pagination-left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #pagination-right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #pagination-top>\r\n      <el-button type="primary" style="width: 100%;">顶部</el-button>\r\n    </template>\r\n    <template #pagination-bottom>\r\n      <el-button type="primary" style="width: 100%;">底部</el-button>\r\n    </template>\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pageNum: 1,\r\n        pageSize: 2,\r\n      },\r\n      options: {\r\n        init: true,\r\n        renderColumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getList() {\r\n      this.loading = true;\r\n      const { data, total } = await mockApi.getList(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 在渲染单元格中使用\n\n在渲染单元格中使用时，需要使用 position 属性，并传入 true 启用方位插槽。\n方位插槽可以获取单元格 scope 数据。\n\n在编辑单元格中使用时 position 属性需要配置在 form或edit配置对象下。\n\n<template>\r\n  <div>\r\n    <h3>表单</h3>\r\n    <sc-form v-model="form" :options="options">\r\n      <template #test-left>\r\n        <el-button>渲染单元格左侧</el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-form>\r\n    <h3>表格</h3>\r\n    <sc-crud :options="tableOptions" :data="data"\r\n      ><template #test-left>\r\n        <el-button>渲染单元格左侧 </el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-crud>\r\n    <h3>可编辑表格</h3>\r\n    <sc-crud :options="editTableOptions" :data="data"\r\n      ><template #test-left>\r\n        <el-button>编辑渲染单元格左侧 </el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>编辑渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "编辑渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">编辑渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n      data: [\r\n        {\r\n          test: "测试",\r\n          test2: "11111",\r\n        },\r\n      ],\r\n      options: {\r\n        labelWidth: "160px",\r\n        renderColumns: [\r\n          {\r\n            label: "渲染单元格",\r\n            prop: "test",\r\n            position: true,\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n      tableOptions: {\r\n        labelWidth: "160px",\r\n        renderColumns: [\r\n          {\r\n            label: "渲染单元格",\r\n            prop: "test",\r\n            position: true,\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n      editTableOptions: {\r\n        labelWidth: "160px",\r\n        editConfig: {\r\n          mode: "free",\r\n        },\r\n        renderColumns: [\r\n          {\r\n            label: "编辑渲染单元格",\r\n            prop: "test",\r\n            form: {\r\n              position: true,\r\n              comp: {\r\n                name: "el-input",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n',normalizedContent:'# 基本使用\n\n\n# 概述\n\n方位插槽是一个灵活的布局组件，用于在内容周围添加上、下、左、右四个位置的插槽内容。\n\n\n# 单独用法\n\n<template>\r\n  <sc-position>\r\n    <template #left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #top>\r\n      <el-button style="width: 100%;" type="primary">顶部</el-button>\r\n    </template>\r\n    <template #bottom>\r\n      <el-button style="width: 100%;" type="primary">底部</el-button>\r\n    </template>\r\n    <el-input v-model="value" placeholder="请输入内容" />\r\n  </sc-position>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return { value: "" };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 搭配组件内置插槽使用\n\n组件内部各种插槽均已封装方位组件。\n\n<template>\r\n  <sc-crud\r\n    :loading.sync="loading"\r\n    :search.sync="search"\r\n    :options="options"\r\n    :data="data"\r\n    :total="total"\r\n    @getlist="getlist"\r\n  >\r\n    <template #handlerow>\r\n      <el-button>操作栏</el-button>\r\n    </template>\r\n    <template #handlerow-left>\r\n      <el-button type="primary">操作栏左侧</el-button>\r\n    </template>\r\n    <template #handlerow-right>\r\n      <el-button type="primary">操作栏右侧</el-button>\r\n    </template>\r\n    <template #handlerow-top>\r\n      <el-button type="primary" style="width: 100%;">操作栏顶部</el-button>\r\n    </template>\r\n    <template #handlerow-bottom>\r\n      <el-button type="primary" style="width: 100%;">操作栏底部</el-button>\r\n    </template>\r\n    <template #name-header-left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #name-header-right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #name-header-top>\r\n      <el-button type="primary" style="width: 100%;">顶部</el-button>\r\n    </template>\r\n    <template #name-header-bottom>\r\n      <el-button type="primary" style="width: 100%;">底部</el-button>\r\n    </template>\r\n    <template #pagination-left>\r\n      <el-button type="primary">左侧</el-button>\r\n    </template>\r\n    <template #pagination-right>\r\n      <el-button type="primary">右侧</el-button>\r\n    </template>\r\n    <template #pagination-top>\r\n      <el-button type="primary" style="width: 100%;">顶部</el-button>\r\n    </template>\r\n    <template #pagination-bottom>\r\n      <el-button type="primary" style="width: 100%;">底部</el-button>\r\n    </template>\r\n  </sc-crud>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      search: {\r\n        pagenum: 1,\r\n        pagesize: 2,\r\n      },\r\n      options: {\r\n        init: true,\r\n        rendercolumns: [\r\n          { prop: "name", label: "姓名" },\r\n          { prop: "gender", label: "性别" },\r\n          { prop: "age", label: "年龄" },\r\n          { prop: "city", label: "城市" },\r\n        ],\r\n      },\r\n      data: [],\r\n      total: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async getlist() {\r\n      this.loading = true;\r\n      const { data, total } = await mockapi.getlist(40)(this.search);\r\n      this.data = data;\r\n      this.total = total;\r\n      this.loading = false;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 在渲染单元格中使用\n\n在渲染单元格中使用时，需要使用 position 属性，并传入 true 启用方位插槽。\n方位插槽可以获取单元格 scope 数据。\n\n在编辑单元格中使用时 position 属性需要配置在 form或edit配置对象下。\n\n<template>\r\n  <div>\r\n    <h3>表单</h3>\r\n    <sc-form v-model="form" :options="options">\r\n      <template #test-left>\r\n        <el-button>渲染单元格左侧</el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-form>\r\n    <h3>表格</h3>\r\n    <sc-crud :options="tableoptions" :data="data"\r\n      ><template #test-left>\r\n        <el-button>渲染单元格左侧 </el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-crud>\r\n    <h3>可编辑表格</h3>\r\n    <sc-crud :options="edittableoptions" :data="data"\r\n      ><template #test-left>\r\n        <el-button>编辑渲染单元格左侧 </el-button>\r\n      </template>\r\n      <template #test-right>\r\n        <el-button>编辑渲染单元格右侧</el-button>\r\n      </template>\r\n      <template #test-top="scope">\r\n        <el-button style="width: 100%">{{\r\n          scope.row.test || "编辑渲染单元格顶部"\r\n        }}</el-button>\r\n      </template>\r\n      <template #test-bottom>\r\n        <el-button style="width: 100%">编辑渲染单元格底部</el-button>\r\n      </template>\r\n    </sc-crud>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {},\r\n      data: [\r\n        {\r\n          test: "测试",\r\n          test2: "11111",\r\n        },\r\n      ],\r\n      options: {\r\n        labelwidth: "160px",\r\n        rendercolumns: [\r\n          {\r\n            label: "渲染单元格",\r\n            prop: "test",\r\n            position: true,\r\n            comp: {\r\n              name: "el-input",\r\n            },\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n      tableoptions: {\r\n        labelwidth: "160px",\r\n        rendercolumns: [\r\n          {\r\n            label: "渲染单元格",\r\n            prop: "test",\r\n            position: true,\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n      edittableoptions: {\r\n        labelwidth: "160px",\r\n        editconfig: {\r\n          mode: "free",\r\n        },\r\n        rendercolumns: [\r\n          {\r\n            label: "编辑渲染单元格",\r\n            prop: "test",\r\n            form: {\r\n              position: true,\r\n              comp: {\r\n                name: "el-input",\r\n              },\r\n            },\r\n          },\r\n          {\r\n            label: "普通单元格",\r\n            prop: "test2",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n',charsets:{cjk:!0}},{title:"快速开始",frontmatter:{},regularPath:"/guide/start/base.html",relativePath:"guide/start/base.md",key:"v-33cfa907",path:"/guide/start/base.html",headers:[{level:2,title:"使用 CDN 引入",slug:"使用-cdn-引入",normalizedTitle:"使用 cdn 引入",charIndex:11},{level:3,title:"引入 JS 和 CSS",slug:"引入-js-和-css",normalizedTitle:"引入 js 和 css",charIndex:25},{level:2,title:"使用 npm 安装",slug:"使用-npm-安装",normalizedTitle:"使用 npm 安装",charIndex:282},{level:2,title:"本地引入",slug:"本地引入",normalizedTitle:"本地引入",charIndex:600},{level:2,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:906}],headersStr:"使用 CDN 引入 引入 JS 和 CSS 使用 npm 安装 本地引入 注意事项",content:"# 快速开始\n\n\n# 使用 CDN 引入\n\n\n# 引入 JS 和 CSS\n\n在 HTML 文件中直接引入：\n\n\x3c!-- 引入样式 --\x3e\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/vue-super-crud@latest/lib/index.css\">\n\x3c!-- 引入组件库 --\x3e\n<script src=\"https://cdn.jsdelivr.net/npm/vue-super-crud@latest/lib/super-crud.min.js\"><\/script>\n\n\n\n# 使用 npm 安装\n\n如果你使用 npm 管理项目，可以通过以下命令安装：\n\nnpm install vue-super-crud\n\n\n然后在项目中引入：\n\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport SuperCrud from 'vue-super-crud'\nimport 'vue-super-crud/lib/index.css'\n\nVue.use(ElementUI)\nVue.use(SuperCrud, {\n  // 全局配置\n})\n\n\n\n# 本地引入\n\n如果你希望手动管理文件，可以：\n\n 1. 使用 npm run build 打包最新组件文件\n 2. 从 lib 目录获取打包好的文件：\n    * super-crud.min.js\n    * index.css\n 3. 将文件放入你项目的 public/superCrud 或其他静态资源目录\n 4. 在项目中引入：\n\nimport SuperCrud from \"/public/superCrud/super-crud.min.js\"\nimport \"/public/superCrud/index.css\"\n\nVue.use(SuperCrud, {\n  // 全局配置\n})\n\n\n\n# 注意事项\n\n * 使用前请确保已引入 Vue 和 Element UI",normalizedContent:"# 快速开始\n\n\n# 使用 cdn 引入\n\n\n# 引入 js 和 css\n\n在 html 文件中直接引入：\n\n\x3c!-- 引入样式 --\x3e\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/vue-super-crud@latest/lib/index.css\">\n\x3c!-- 引入组件库 --\x3e\n<script src=\"https://cdn.jsdelivr.net/npm/vue-super-crud@latest/lib/super-crud.min.js\"><\/script>\n\n\n\n# 使用 npm 安装\n\n如果你使用 npm 管理项目，可以通过以下命令安装：\n\nnpm install vue-super-crud\n\n\n然后在项目中引入：\n\nimport vue from 'vue'\nimport elementui from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport supercrud from 'vue-super-crud'\nimport 'vue-super-crud/lib/index.css'\n\nvue.use(elementui)\nvue.use(supercrud, {\n  // 全局配置\n})\n\n\n\n# 本地引入\n\n如果你希望手动管理文件，可以：\n\n 1. 使用 npm run build 打包最新组件文件\n 2. 从 lib 目录获取打包好的文件：\n    * super-crud.min.js\n    * index.css\n 3. 将文件放入你项目的 public/supercrud 或其他静态资源目录\n 4. 在项目中引入：\n\nimport supercrud from \"/public/supercrud/super-crud.min.js\"\nimport \"/public/supercrud/index.css\"\n\nvue.use(supercrud, {\n  // 全局配置\n})\n\n\n\n# 注意事项\n\n * 使用前请确保已引入 vue 和 element ui",charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/stepForm/base.html",relativePath:"guide/stepForm/base.md",key:"v-c4194d52",path:"/guide/stepForm/base.html",headers:[{level:2,title:"基本使用",slug:"基本使用-2",normalizedTitle:"基本使用",charIndex:2},{level:3,title:"基础配置",slug:"基础配置",normalizedTitle:"基础配置",charIndex:70},{level:3,title:"扁平模式",slug:"扁平模式",normalizedTitle:"扁平模式",charIndex:1590},{level:3,title:"自定义功能",slug:"自定义功能",normalizedTitle:"自定义功能",charIndex:3916},{level:3,title:"动态步骤",slug:"动态步骤",normalizedTitle:"动态步骤",charIndex:12449},{level:3,title:"自定义校验函数",slug:"自定义校验函数",normalizedTitle:"自定义校验函数",charIndex:13883},{level:3,title:"事件处理",slug:"事件处理",normalizedTitle:"事件处理",charIndex:16243},{level:2,title:"API 文档",slug:"api-文档",normalizedTitle:"api 文档",charIndex:18034},{level:3,title:"StepForm 属性",slug:"stepform-属性",normalizedTitle:"stepform 属性",charIndex:18045},{level:3,title:"Step 配置项",slug:"step-配置项",normalizedTitle:"step 配置项",charIndex:18535},{level:3,title:"Events",slug:"events",normalizedTitle:"events",charIndex:18999},{level:3,title:"Slots",slug:"slots",normalizedTitle:"slots",charIndex:19148},{level:3,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:20314}],headersStr:"基本使用 基础配置 扁平模式 自定义功能 动态步骤 自定义校验函数 事件处理 API 文档 StepForm 属性 Step 配置项 Events Slots Methods",content:'# 基本使用\n\n\n# 基本使用\n\n步骤表单组件（sc-step-form）是一个多步骤表单组件，支持分步填写、验证和提交表单数据。\n\n\n# 基础配置\n\n<template>\r\n  <div>\r\n    <sc-step-form v-model="formData" :steps="steps"> </sc-step-form>\r\n\r\n    \x3c!-- 展示当前表单数据 --\x3e\r\n    <div class="form-data-display">\r\n      <h4>当前表单数据 (基础模式)</h4>\r\n      <pre>{{ JSON.stringify(formData, null, 2) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {},\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          description: "请填写基本信息",\r\n          prop: "basicInfo", // 自定义数据对象的key\r\n          columns: [\r\n            { prop: "name", label: "姓名" },\r\n            { prop: "age", label: "年龄" },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          description: "请填写联系方式",\r\n          prop: "contactInfo",\r\n          columns: [\r\n            { prop: "phone", label: "电话" },\r\n            { prop: "email", label: "邮箱" },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          description: "请确认所有信息",\r\n          prop: "confirmInfo",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.form-data-display {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.form-data-display pre {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n</style>\r\n\n\n\n# 扁平模式\n\n通过设置 flattenMode 属性开启扁平模式，在扁平模式下：\n\n * 所有步骤的数据将合并到同一个对象中\n * 可以通过 fields 属性指定当前步骤关联的字段\n\n<template>\r\n  <div>\r\n    <sc-step-form\r\n      v-model="formData"\r\n      :steps="steps"\r\n      :flatten-mode="true"\r\n      @step-change="onStepChange"\r\n    >\r\n    </sc-step-form>\r\n\r\n    \x3c!-- 展示当前表单数据 --\x3e\r\n    <div class="form-data-display">\r\n      <h4>当前表单数据 (扁平模式)</h4>\r\n      <pre>{{ JSON.stringify(formData, null, 2) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        name: "张三",\r\n        age: 28,\r\n      }, // 所有步骤数据将合并到这个对象中\r\n      currentStep: 0,\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          fields: ["name", "age"], // 指定该步骤关联的字段\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          fields: ["phone", "email"],\r\n          columns: [\r\n            { prop: "phone", label: "电话", comp: { name: "el-input" } },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "其他信息",\r\n          fields: ["address", "remark"],\r\n          columns: [\r\n            { prop: "address", label: "地址" },\r\n            {\r\n              prop: "remark",\r\n              label: "备注",\r\n              comp: {\r\n                name: "el-input",\r\n                type: "textarea",\r\n                rows: 3,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    onStepChange({ from, to }) {\r\n      this.currentStep = to;\r\n\r\n      // 可以在这里添加一些提示信息\r\n      this.$nextTick(() => {\r\n        if (to === 1 && !this.formData.phone) {\r\n          // 为了演示，预填一些数据\r\n          this.$set(this.formData, "phone", "13800138000");\r\n        }\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // 初始化当前步骤\r\n    this.currentStep = 0;\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.form-data-display {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.form-data-display pre {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n</style>\r\n\n\n\n# 自定义功能\n\n 1. 自定义底部按钮\n    * 步骤表单支持自定义底部按钮\n    * 可以通过插槽完全覆盖或在原有基础上增加内容\n\n<template>\r\n  <sc-step-form v-model="formData" :steps="steps">\r\n    \x3c!-- 自定义第一步的导航按钮 --\x3e\r\n    <template v-slot:step-footer-0="{ next }">\r\n      <el-button type="primary" @click="next">\r\n        前往下一步 <i class="el-icon-arrow-right"></i>\r\n      </el-button>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步导航按钮左侧添加内容 --\x3e\r\n    <template v-slot:step-footer-1-left="{ prev }">\r\n      <el-button plain @click="prev">\r\n        <i class="el-icon-arrow-left"></i> 返回\r\n      </el-button>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步导航按钮右侧添加内容 --\x3e\r\n    <template v-slot:step-footer-1-right="{ next }">\r\n      <el-button type="primary" @click="next">\r\n        继续 <i class="el-icon-arrow-right"></i>\r\n      </el-button>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {},\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicInfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            { prop: "phone", label: "手机号", comp: { name: "el-input" } },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n 2. 自定义内容\n    * 支持自定义标题和表单内容\n    * 可以通过插槽完全覆盖或在原有基础上增加内容\n\n<template>\r\n  <sc-step-form v-model="formData" :steps="steps" @step-change="onStepChange">\r\n    \x3c!-- 自定义第一步的标题 --\x3e\r\n    <template v-slot:step-title-0>\r\n      <div class="custom-title">\r\n        <div><i class="el-icon-user"></i> 用户信息</div>\r\n        <el-alert type="info" :closable="false">请填写您的基本信息</el-alert>\r\n      </div>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步标题上方添加内容 --\x3e\r\n    <template v-slot:step-title-1-left>\r\n      <el-tag type="success">重要信息</el-tag>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步表单下方添加内容 --\x3e\r\n    <template v-slot:step-content-1-bottom>\r\n      <el-alert\r\n        title="联系方式将用于接收重要通知，请确保信息准确"\r\n        type="warning"\r\n        :closable="false"\r\n        show-icon\r\n      ></el-alert>\r\n    </template>\r\n\r\n    \x3c!-- 自定义第三步的整个内容 --\x3e\r\n    <template #step-content-2>\r\n      <div class="summary">\r\n        <h3>信息确认</h3>\r\n        <sc-form v-model="formData" :options="formOptions" />\r\n\r\n        <div class="agreement-section">\r\n          <el-checkbox\r\n            v-model="agreement"\r\n            @change="(val) => updateStepData({ agree: val })"\r\n          >\r\n            我已阅读并同意<el-link type="primary">服务协议</el-link>\r\n          </el-checkbox>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        basicInfo: {\r\n          name: "",\r\n          age: null,\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n          address: "",\r\n        },\r\n        confirm: {\r\n          agree: false,\r\n        },\r\n      },\r\n      agreement: false,\r\n      currentStep: 0,\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicInfo",\r\n          columns: [\r\n            {\r\n              prop: "name",\r\n              label: "姓名",\r\n              required: true,\r\n            },\r\n            {\r\n              prop: "age",\r\n              label: "年龄",\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 18,\r\n                max: 100,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            {\r\n              prop: "phone",\r\n              label: "电话",\r\n              required: true,\r\n              rules: [\r\n                { required: true, message: "请输入电话号码" },\r\n                { regular: /^1[3-9]\\d{9}$/, message: "请输入正确的手机号码" },\r\n              ],\r\n            },\r\n            {\r\n              prop: "email",\r\n              label: "邮箱",\r\n              required: true,\r\n              rules: [\r\n                {\r\n                  regular: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n                  message: "请输入正确的邮箱地址",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              prop: "address",\r\n              label: "地址",\r\n              comp: {\r\n                rows: 3,\r\n                placeholder: "请输入详细地址（选填）",\r\n                type: "textarea",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: {\r\n                name: "el-checkbox",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      formOptions: {\r\n        detail: true,\r\n        border: true,\r\n        renderColumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "basicInfo.name",\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "basicInfo.age",\r\n          },\r\n          {\r\n            label: "电话",\r\n            prop: "contact.phone",\r\n          },\r\n          {\r\n            label: "邮箱",\r\n            prop: "contact.email",\r\n          },\r\n          {\r\n            label: "地址",\r\n            prop: "contact.address",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onStepChange({ from, to }) {\r\n      this.currentStep = to;\r\n\r\n      // 如果到了最后一步，重置协议勾选状态为当前值\r\n      if (to === 2) {\r\n        this.agreement = this.formData.confirm.agree || false;\r\n      }\r\n    },\r\n    updateStepData(data) {\r\n      // 更新当前步骤的数据\r\n      if (this.currentStep === 2) {\r\n        this.$set(this.formData.confirm, "agree", data.agree);\r\n      }\r\n    },\r\n    getFormData(formData) {\r\n      console.log(formData, "formData");\r\n\r\n      return JSON.stringify(formData);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.custom-title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-title > div {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  color: #409eff;\r\n}\r\n\r\n.summary {\r\n  padding: 20px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.summary h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 16px;\r\n  color: #303133;\r\n}\r\n\r\n.agreement-section {\r\n  margin-top: 20px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #ebeef5;\r\n}\r\n</style>\r\n\n\n 3. 自定义表单字段\n    * 通过 form-{stepIndex}-{slotName} 插槽来自定义表单字段\n\n<template>\r\n  <sc-step-form v-model="formData" :steps="steps">\r\n    \x3c!-- 自定义第一步中name字段的前缀 --\x3e\r\n    <template v-slot:form-0-name="{ row }">\r\n      <el-select v-model="row.title" placeholder="称呼">\r\n        <el-option label="先生" value="Mr."></el-option>\r\n        <el-option label="女士" value="Ms."></el-option>\r\n      </el-select>\r\n    </template>\r\n\r\n    \x3c!-- 自定义第二步中phone字段的后缀 --\x3e\r\n    <template v-slot:form-1-phone-right="{ row }">\r\n      <el-button @click="verifyPhone(row.phone)">验证</el-button>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        basicInfo: {\r\n          title: "Mr.",\r\n          name: "",\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicInfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            {\r\n              prop: "phone",\r\n              label: "手机号",\r\n              comp: { name: "el-input" },\r\n              position: true,\r\n            },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    verifyPhone(phone) {\r\n      if (!phone) {\r\n        this.$message.error("请输入手机号");\r\n        return;\r\n      }\r\n\r\n      // 模拟验证过程\r\n      const isValid = /^1[3-9]\\d{9}$/.test(phone);\r\n\r\n      if (isValid) {\r\n        this.$message.success("手机号验证通过");\r\n      } else {\r\n        this.$message.error("请输入正确的手机号");\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 动态步骤\n\n可以根据条件动态显示或隐藏步骤，通过设置步骤的 condition 属性实现\n\n<template>\r\n  <sc-step-form v-model="formData" :steps="steps"> </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        userType: "",\r\n        personalInfo: {},\r\n        companyInfo: {},\r\n      },\r\n      steps: [\r\n        {\r\n          title: "选择用户类型",\r\n          prop: "userType",\r\n          columns: [\r\n            {\r\n              prop: "type",\r\n              label: "用户类型",\r\n              comp: {\r\n                name: "el-radio-group",\r\n                options: [\r\n                  { label: "个人", value: "personal" },\r\n                  { label: "企业", value: "company" },\r\n                ],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "个人信息",\r\n          prop: "personalInfo",\r\n          // 只有选择个人用户时显示\r\n          condition: () => this.formData.userType?.type === "personal",\r\n          columns: [\r\n            { prop: "name", label: "姓名" },\r\n            { prop: "idCard", label: "身份证号" },\r\n          ],\r\n        },\r\n        {\r\n          title: "企业信息",\r\n          prop: "companyInfo",\r\n          // 只有选择企业用户时显示\r\n          condition: () => this.formData.userType?.type === "company",\r\n          columns: [\r\n            { prop: "companyName", label: "公司名称" },\r\n            { prop: "licenseNo", label: "营业执照号" },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义校验函数\n\n可以通过 customValidator 属性设置自定义校验函数，对步骤数据进行更复杂的校验。\n\n自定义校验函数接收两个参数：\n\n * resolve: 校验成功时调用的函数\n * stepIndex: 当前步骤的索引\n\n<template>\r\n  <div>\r\n    <sc-step-form\r\n      v-model="formData"\r\n      :steps="steps"\r\n      :customValidator="customValidator"\r\n      @submit="handleSubmit"\r\n      @success="handleSuccess"\r\n      @error="handleError"\r\n    ></sc-step-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        step1: {\r\n          name: "",\r\n          age: "",\r\n        },\r\n        step2: {\r\n          email: "",\r\n          phone: "",\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          description: "请填写您的基本信息",\r\n          prop: "step1",\r\n          columns: [\r\n            {\r\n              label: "姓名",\r\n              prop: "name",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n            {\r\n              label: "年龄",\r\n              prop: "age",\r\n              component: "el-input-number",\r\n              required: true,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          description: "请填写您的联系方式",\r\n          prop: "step2",\r\n          columns: [\r\n            {\r\n              label: "邮箱",\r\n              prop: "email",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n            {\r\n              label: "电话",\r\n              prop: "phone",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      submitted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 自定义校验函数\r\n    customValidator(resolve, stepIndex) {\r\n      const formData = this.formData;\r\n      // 第一步的自定义校验\r\n      if (stepIndex === 0) {\r\n        if (formData.step1.age && parseInt(formData.step1.age) < 18) {\r\n          this.$message.error("年龄必须大于或等于18岁");\r\n          return;\r\n        }\r\n      }\r\n      resolve();\r\n    },\r\n\r\n    handleSubmit(data) {\r\n      console.log("表单提交", data);\r\n      // 模拟提交\r\n      setTimeout(() => {\r\n        this.$emit("success", data);\r\n      }, 1000);\r\n    },\r\n\r\n    handleSuccess(data) {\r\n      this.submitted = true;\r\n      this.$message.success("表单提交成功");\r\n    },\r\n\r\n    handleError(error) {\r\n      this.$message.error(`表单提交失败: ${error.message || "未知错误"}`);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 事件处理\n\n步骤表单提供了丰富的事件，用于处理表单的各种状态变化。\n\n<template>\r\n  <sc-step-form\r\n    v-model="formData"\r\n    :steps="steps"\r\n    @step-change="handleStepChange"\r\n    @submit="handleSubmit"\r\n  >\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formData: {\r\n        basicInfo: {\r\n          name: "",\r\n          age: null,\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n        },\r\n        confirm: {\r\n          agree: false,\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicInfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", required: true },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            { prop: "phone", label: "电话", required: true },\r\n            { prop: "email", label: "邮箱", required: true },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleStepChange({ from, to, step }) {\r\n      this.$message.info(`步骤从 ${from + 1} 变更为 ${to + 1}`);\r\n    },\r\n    handleSubmit(formData) {\r\n      this.$message.info("正在提交表单...");\r\n\r\n      // 模拟异步提交\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          if (Math.random() > 0.3) {\r\n            resolve({ success: true });\r\n          } else {\r\n            reject(new Error("提交失败"));\r\n          }\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API 文档\n\n\n# StepForm 属性\n\n参数                说明                 类型         默认值\nvalue / v-model   表单数据对象             object     {}\nsteps             步骤配置数组             array      []\nshowStep          是否显示步骤指示器          boolean    true\nshowFooter        是否显示底部按钮           boolean    true\nshowSubmit        是否在最后一步显示提交按钮      boolean    true\nflattenMode       是否将所有步骤数据合并到同一对象   boolean    false\nallowDirect       是否允许直接点击步骤指示器跳转    boolean    true\ncustomValidator   自定义校验函数            function   null\n\n\n# Step 配置项\n\n参数            说明           类型         默认值\ntitle         步骤标题         string     -\ndescription   步骤描述         string     -\nprop          步骤数据对象的key   string     -\ncolumns       表单列配置        array      []\nformOptions   表单组件配置       object     {}\nprevText      上一步按钮文本      string     上一步\nnextText      下一步按钮文本      string     下一步\nsubmitText    提交按钮文本       string     提交\ncondition     步骤条件函数       function   -\nfields        扁平模式下关联的字段   array      []\n\n\n# Events\n\n事件名           说明        回调参数\nstep-change   步骤变化时触发   { from: number, to: number, step: object }\nsubmit        表单提交时触发   formData: object\n\n\n# Slots\n\n插槽名                               说明              作用域参数\nstep-title-[index]                自定义步骤标题         { currentStep, stepConfig, formData, updateFormData,\n                                                  validate }\nstep-title-[index]-[position]     在步骤标题周围添加内容     { currentStep, stepConfig, formData, updateFormData,\n                                                  validate }\nstep-content-[index]              自定义步骤表单内容       { currentStep, stepConfig, formData, updateFormData,\n                                                  validate }\nstep-content-[index]-[position]   在步骤表单周围添加内容     { currentStep, stepConfig, formData, updateFormData,\n                                                  validate }\nform-[index]-[prop]               自定义表单字段插槽       { row, $index, ... } + { currentStep, stepConfig, formData,\n                                                  updateFormData, validate }\nstep-footer-[index]               自定义步骤导航按钮       { currentStep, totalSteps, prev, next, submit, loading }\nstep-footer-[index]-[position]    在步骤导航按钮周围添加内容   { currentStep, totalSteps, prev, next, submit, loading }\n\n> 注：[position] 可以是 top、bottom、left、right\n\n\n# Methods\n\n方法名        说明                   参数                    返回值\ngoToStep   跳转到指定步骤              stepIndex: number     boolean\nvalidate   校验表单，可以校验指定步骤或所有步骤   [stepIndex]: number   Promise<boolean>\nprev       跳转到上一步               -                     -\nnext       验证并跳转到下一步            -                     -\nsubmit     验证并提交表单              -                     -',normalizedContent:'# 基本使用\n\n\n# 基本使用\n\n步骤表单组件（sc-step-form）是一个多步骤表单组件，支持分步填写、验证和提交表单数据。\n\n\n# 基础配置\n\n<template>\r\n  <div>\r\n    <sc-step-form v-model="formdata" :steps="steps"> </sc-step-form>\r\n\r\n    \x3c!-- 展示当前表单数据 --\x3e\r\n    <div class="form-data-display">\r\n      <h4>当前表单数据 (基础模式)</h4>\r\n      <pre>{{ json.stringify(formdata, null, 2) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {},\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          description: "请填写基本信息",\r\n          prop: "basicinfo", // 自定义数据对象的key\r\n          columns: [\r\n            { prop: "name", label: "姓名" },\r\n            { prop: "age", label: "年龄" },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          description: "请填写联系方式",\r\n          prop: "contactinfo",\r\n          columns: [\r\n            { prop: "phone", label: "电话" },\r\n            { prop: "email", label: "邮箱" },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          description: "请确认所有信息",\r\n          prop: "confirminfo",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.form-data-display {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.form-data-display pre {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n</style>\r\n\n\n\n# 扁平模式\n\n通过设置 flattenmode 属性开启扁平模式，在扁平模式下：\n\n * 所有步骤的数据将合并到同一个对象中\n * 可以通过 fields 属性指定当前步骤关联的字段\n\n<template>\r\n  <div>\r\n    <sc-step-form\r\n      v-model="formdata"\r\n      :steps="steps"\r\n      :flatten-mode="true"\r\n      @step-change="onstepchange"\r\n    >\r\n    </sc-step-form>\r\n\r\n    \x3c!-- 展示当前表单数据 --\x3e\r\n    <div class="form-data-display">\r\n      <h4>当前表单数据 (扁平模式)</h4>\r\n      <pre>{{ json.stringify(formdata, null, 2) }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        name: "张三",\r\n        age: 28,\r\n      }, // 所有步骤数据将合并到这个对象中\r\n      currentstep: 0,\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          fields: ["name", "age"], // 指定该步骤关联的字段\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          fields: ["phone", "email"],\r\n          columns: [\r\n            { prop: "phone", label: "电话", comp: { name: "el-input" } },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "其他信息",\r\n          fields: ["address", "remark"],\r\n          columns: [\r\n            { prop: "address", label: "地址" },\r\n            {\r\n              prop: "remark",\r\n              label: "备注",\r\n              comp: {\r\n                name: "el-input",\r\n                type: "textarea",\r\n                rows: 3,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    onstepchange({ from, to }) {\r\n      this.currentstep = to;\r\n\r\n      // 可以在这里添加一些提示信息\r\n      this.$nexttick(() => {\r\n        if (to === 1 && !this.formdata.phone) {\r\n          // 为了演示，预填一些数据\r\n          this.$set(this.formdata, "phone", "13800138000");\r\n        }\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // 初始化当前步骤\r\n    this.currentstep = 0;\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.form-data-display {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.form-data-display pre {\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n</style>\r\n\n\n\n# 自定义功能\n\n 1. 自定义底部按钮\n    * 步骤表单支持自定义底部按钮\n    * 可以通过插槽完全覆盖或在原有基础上增加内容\n\n<template>\r\n  <sc-step-form v-model="formdata" :steps="steps">\r\n    \x3c!-- 自定义第一步的导航按钮 --\x3e\r\n    <template v-slot:step-footer-0="{ next }">\r\n      <el-button type="primary" @click="next">\r\n        前往下一步 <i class="el-icon-arrow-right"></i>\r\n      </el-button>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步导航按钮左侧添加内容 --\x3e\r\n    <template v-slot:step-footer-1-left="{ prev }">\r\n      <el-button plain @click="prev">\r\n        <i class="el-icon-arrow-left"></i> 返回\r\n      </el-button>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步导航按钮右侧添加内容 --\x3e\r\n    <template v-slot:step-footer-1-right="{ next }">\r\n      <el-button type="primary" @click="next">\r\n        继续 <i class="el-icon-arrow-right"></i>\r\n      </el-button>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {},\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicinfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            { prop: "phone", label: "手机号", comp: { name: "el-input" } },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n 2. 自定义内容\n    * 支持自定义标题和表单内容\n    * 可以通过插槽完全覆盖或在原有基础上增加内容\n\n<template>\r\n  <sc-step-form v-model="formdata" :steps="steps" @step-change="onstepchange">\r\n    \x3c!-- 自定义第一步的标题 --\x3e\r\n    <template v-slot:step-title-0>\r\n      <div class="custom-title">\r\n        <div><i class="el-icon-user"></i> 用户信息</div>\r\n        <el-alert type="info" :closable="false">请填写您的基本信息</el-alert>\r\n      </div>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步标题上方添加内容 --\x3e\r\n    <template v-slot:step-title-1-left>\r\n      <el-tag type="success">重要信息</el-tag>\r\n    </template>\r\n\r\n    \x3c!-- 在第二步表单下方添加内容 --\x3e\r\n    <template v-slot:step-content-1-bottom>\r\n      <el-alert\r\n        title="联系方式将用于接收重要通知，请确保信息准确"\r\n        type="warning"\r\n        :closable="false"\r\n        show-icon\r\n      ></el-alert>\r\n    </template>\r\n\r\n    \x3c!-- 自定义第三步的整个内容 --\x3e\r\n    <template #step-content-2>\r\n      <div class="summary">\r\n        <h3>信息确认</h3>\r\n        <sc-form v-model="formdata" :options="formoptions" />\r\n\r\n        <div class="agreement-section">\r\n          <el-checkbox\r\n            v-model="agreement"\r\n            @change="(val) => updatestepdata({ agree: val })"\r\n          >\r\n            我已阅读并同意<el-link type="primary">服务协议</el-link>\r\n          </el-checkbox>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        basicinfo: {\r\n          name: "",\r\n          age: null,\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n          address: "",\r\n        },\r\n        confirm: {\r\n          agree: false,\r\n        },\r\n      },\r\n      agreement: false,\r\n      currentstep: 0,\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicinfo",\r\n          columns: [\r\n            {\r\n              prop: "name",\r\n              label: "姓名",\r\n              required: true,\r\n            },\r\n            {\r\n              prop: "age",\r\n              label: "年龄",\r\n              comp: {\r\n                name: "el-input-number",\r\n                min: 18,\r\n                max: 100,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            {\r\n              prop: "phone",\r\n              label: "电话",\r\n              required: true,\r\n              rules: [\r\n                { required: true, message: "请输入电话号码" },\r\n                { regular: /^1[3-9]\\d{9}$/, message: "请输入正确的手机号码" },\r\n              ],\r\n            },\r\n            {\r\n              prop: "email",\r\n              label: "邮箱",\r\n              required: true,\r\n              rules: [\r\n                {\r\n                  regular: /^[a-za-z0-9._%+-]+@[a-za-z0-9.-]+\\.[a-za-z]{2,}$/,\r\n                  message: "请输入正确的邮箱地址",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              prop: "address",\r\n              label: "地址",\r\n              comp: {\r\n                rows: 3,\r\n                placeholder: "请输入详细地址（选填）",\r\n                type: "textarea",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: {\r\n                name: "el-checkbox",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      formoptions: {\r\n        detail: true,\r\n        border: true,\r\n        rendercolumns: [\r\n          {\r\n            label: "姓名",\r\n            prop: "basicinfo.name",\r\n          },\r\n          {\r\n            label: "年龄",\r\n            prop: "basicinfo.age",\r\n          },\r\n          {\r\n            label: "电话",\r\n            prop: "contact.phone",\r\n          },\r\n          {\r\n            label: "邮箱",\r\n            prop: "contact.email",\r\n          },\r\n          {\r\n            label: "地址",\r\n            prop: "contact.address",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onstepchange({ from, to }) {\r\n      this.currentstep = to;\r\n\r\n      // 如果到了最后一步，重置协议勾选状态为当前值\r\n      if (to === 2) {\r\n        this.agreement = this.formdata.confirm.agree || false;\r\n      }\r\n    },\r\n    updatestepdata(data) {\r\n      // 更新当前步骤的数据\r\n      if (this.currentstep === 2) {\r\n        this.$set(this.formdata.confirm, "agree", data.agree);\r\n      }\r\n    },\r\n    getformdata(formdata) {\r\n      console.log(formdata, "formdata");\r\n\r\n      return json.stringify(formdata);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.custom-title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-title > div {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n  color: #409eff;\r\n}\r\n\r\n.summary {\r\n  padding: 20px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.summary h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 16px;\r\n  color: #303133;\r\n}\r\n\r\n.agreement-section {\r\n  margin-top: 20px;\r\n  padding-top: 15px;\r\n  border-top: 1px solid #ebeef5;\r\n}\r\n</style>\r\n\n\n 3. 自定义表单字段\n    * 通过 form-{stepindex}-{slotname} 插槽来自定义表单字段\n\n<template>\r\n  <sc-step-form v-model="formdata" :steps="steps">\r\n    \x3c!-- 自定义第一步中name字段的前缀 --\x3e\r\n    <template v-slot:form-0-name="{ row }">\r\n      <el-select v-model="row.title" placeholder="称呼">\r\n        <el-option label="先生" value="mr."></el-option>\r\n        <el-option label="女士" value="ms."></el-option>\r\n      </el-select>\r\n    </template>\r\n\r\n    \x3c!-- 自定义第二步中phone字段的后缀 --\x3e\r\n    <template v-slot:form-1-phone-right="{ row }">\r\n      <el-button @click="verifyphone(row.phone)">验证</el-button>\r\n    </template>\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        basicinfo: {\r\n          title: "mr.",\r\n          name: "",\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicinfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", comp: { name: "el-input" } },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            {\r\n              prop: "phone",\r\n              label: "手机号",\r\n              comp: { name: "el-input" },\r\n              position: true,\r\n            },\r\n            { prop: "email", label: "邮箱", comp: { name: "el-input" } },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    verifyphone(phone) {\r\n      if (!phone) {\r\n        this.$message.error("请输入手机号");\r\n        return;\r\n      }\r\n\r\n      // 模拟验证过程\r\n      const isvalid = /^1[3-9]\\d{9}$/.test(phone);\r\n\r\n      if (isvalid) {\r\n        this.$message.success("手机号验证通过");\r\n      } else {\r\n        this.$message.error("请输入正确的手机号");\r\n      }\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 动态步骤\n\n可以根据条件动态显示或隐藏步骤，通过设置步骤的 condition 属性实现\n\n<template>\r\n  <sc-step-form v-model="formdata" :steps="steps"> </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        usertype: "",\r\n        personalinfo: {},\r\n        companyinfo: {},\r\n      },\r\n      steps: [\r\n        {\r\n          title: "选择用户类型",\r\n          prop: "usertype",\r\n          columns: [\r\n            {\r\n              prop: "type",\r\n              label: "用户类型",\r\n              comp: {\r\n                name: "el-radio-group",\r\n                options: [\r\n                  { label: "个人", value: "personal" },\r\n                  { label: "企业", value: "company" },\r\n                ],\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "个人信息",\r\n          prop: "personalinfo",\r\n          // 只有选择个人用户时显示\r\n          condition: () => this.formdata.usertype?.type === "personal",\r\n          columns: [\r\n            { prop: "name", label: "姓名" },\r\n            { prop: "idcard", label: "身份证号" },\r\n          ],\r\n        },\r\n        {\r\n          title: "企业信息",\r\n          prop: "companyinfo",\r\n          // 只有选择企业用户时显示\r\n          condition: () => this.formdata.usertype?.type === "company",\r\n          columns: [\r\n            { prop: "companyname", label: "公司名称" },\r\n            { prop: "licenseno", label: "营业执照号" },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 自定义校验函数\n\n可以通过 customvalidator 属性设置自定义校验函数，对步骤数据进行更复杂的校验。\n\n自定义校验函数接收两个参数：\n\n * resolve: 校验成功时调用的函数\n * stepindex: 当前步骤的索引\n\n<template>\r\n  <div>\r\n    <sc-step-form\r\n      v-model="formdata"\r\n      :steps="steps"\r\n      :customvalidator="customvalidator"\r\n      @submit="handlesubmit"\r\n      @success="handlesuccess"\r\n      @error="handleerror"\r\n    ></sc-step-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        step1: {\r\n          name: "",\r\n          age: "",\r\n        },\r\n        step2: {\r\n          email: "",\r\n          phone: "",\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          description: "请填写您的基本信息",\r\n          prop: "step1",\r\n          columns: [\r\n            {\r\n              label: "姓名",\r\n              prop: "name",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n            {\r\n              label: "年龄",\r\n              prop: "age",\r\n              component: "el-input-number",\r\n              required: true,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          description: "请填写您的联系方式",\r\n          prop: "step2",\r\n          columns: [\r\n            {\r\n              label: "邮箱",\r\n              prop: "email",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n            {\r\n              label: "电话",\r\n              prop: "phone",\r\n              component: "el-input",\r\n              required: true,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      submitted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 自定义校验函数\r\n    customvalidator(resolve, stepindex) {\r\n      const formdata = this.formdata;\r\n      // 第一步的自定义校验\r\n      if (stepindex === 0) {\r\n        if (formdata.step1.age && parseint(formdata.step1.age) < 18) {\r\n          this.$message.error("年龄必须大于或等于18岁");\r\n          return;\r\n        }\r\n      }\r\n      resolve();\r\n    },\r\n\r\n    handlesubmit(data) {\r\n      console.log("表单提交", data);\r\n      // 模拟提交\r\n      settimeout(() => {\r\n        this.$emit("success", data);\r\n      }, 1000);\r\n    },\r\n\r\n    handlesuccess(data) {\r\n      this.submitted = true;\r\n      this.$message.success("表单提交成功");\r\n    },\r\n\r\n    handleerror(error) {\r\n      this.$message.error(`表单提交失败: ${error.message || "未知错误"}`);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# 事件处理\n\n步骤表单提供了丰富的事件，用于处理表单的各种状态变化。\n\n<template>\r\n  <sc-step-form\r\n    v-model="formdata"\r\n    :steps="steps"\r\n    @step-change="handlestepchange"\r\n    @submit="handlesubmit"\r\n  >\r\n  </sc-step-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      formdata: {\r\n        basicinfo: {\r\n          name: "",\r\n          age: null,\r\n        },\r\n        contact: {\r\n          phone: "",\r\n          email: "",\r\n        },\r\n        confirm: {\r\n          agree: false,\r\n        },\r\n      },\r\n      steps: [\r\n        {\r\n          title: "基本信息",\r\n          prop: "basicinfo",\r\n          columns: [\r\n            { prop: "name", label: "姓名", required: true },\r\n            { prop: "age", label: "年龄", comp: { name: "el-input-number" } },\r\n          ],\r\n        },\r\n        {\r\n          title: "联系方式",\r\n          prop: "contact",\r\n          columns: [\r\n            { prop: "phone", label: "电话", required: true },\r\n            { prop: "email", label: "邮箱", required: true },\r\n          ],\r\n        },\r\n        {\r\n          title: "确认信息",\r\n          prop: "confirm",\r\n          columns: [\r\n            {\r\n              prop: "agree",\r\n              label: "同意协议",\r\n              comp: { name: "el-checkbox" },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handlestepchange({ from, to, step }) {\r\n      this.$message.info(`步骤从 ${from + 1} 变更为 ${to + 1}`);\r\n    },\r\n    handlesubmit(formdata) {\r\n      this.$message.info("正在提交表单...");\r\n\r\n      // 模拟异步提交\r\n      return new promise((resolve, reject) => {\r\n        settimeout(() => {\r\n          if (math.random() > 0.3) {\r\n            resolve({ success: true });\r\n          } else {\r\n            reject(new error("提交失败"));\r\n          }\r\n        }, 1000);\r\n      });\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api 文档\n\n\n# stepform 属性\n\n参数                说明                 类型         默认值\nvalue / v-model   表单数据对象             object     {}\nsteps             步骤配置数组             array      []\nshowstep          是否显示步骤指示器          boolean    true\nshowfooter        是否显示底部按钮           boolean    true\nshowsubmit        是否在最后一步显示提交按钮      boolean    true\nflattenmode       是否将所有步骤数据合并到同一对象   boolean    false\nallowdirect       是否允许直接点击步骤指示器跳转    boolean    true\ncustomvalidator   自定义校验函数            function   null\n\n\n# step 配置项\n\n参数            说明           类型         默认值\ntitle         步骤标题         string     -\ndescription   步骤描述         string     -\nprop          步骤数据对象的key   string     -\ncolumns       表单列配置        array      []\nformoptions   表单组件配置       object     {}\nprevtext      上一步按钮文本      string     上一步\nnexttext      下一步按钮文本      string     下一步\nsubmittext    提交按钮文本       string     提交\ncondition     步骤条件函数       function   -\nfields        扁平模式下关联的字段   array      []\n\n\n# events\n\n事件名           说明        回调参数\nstep-change   步骤变化时触发   { from: number, to: number, step: object }\nsubmit        表单提交时触发   formdata: object\n\n\n# slots\n\n插槽名                               说明              作用域参数\nstep-title-[index]                自定义步骤标题         { currentstep, stepconfig, formdata, updateformdata,\n                                                  validate }\nstep-title-[index]-[position]     在步骤标题周围添加内容     { currentstep, stepconfig, formdata, updateformdata,\n                                                  validate }\nstep-content-[index]              自定义步骤表单内容       { currentstep, stepconfig, formdata, updateformdata,\n                                                  validate }\nstep-content-[index]-[position]   在步骤表单周围添加内容     { currentstep, stepconfig, formdata, updateformdata,\n                                                  validate }\nform-[index]-[prop]               自定义表单字段插槽       { row, $index, ... } + { currentstep, stepconfig, formdata,\n                                                  updateformdata, validate }\nstep-footer-[index]               自定义步骤导航按钮       { currentstep, totalsteps, prev, next, submit, loading }\nstep-footer-[index]-[position]    在步骤导航按钮周围添加内容   { currentstep, totalsteps, prev, next, submit, loading }\n\n> 注：[position] 可以是 top、bottom、left、right\n\n\n# methods\n\n方法名        说明                   参数                    返回值\ngotostep   跳转到指定步骤              stepindex: number     boolean\nvalidate   校验表单，可以校验指定步骤或所有步骤   [stepindex]: number   promise<boolean>\nprev       跳转到上一步               -                     -\nnext       验证并跳转到下一步            -                     -\nsubmit     验证并提交表单              -                     -',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/tabs/base.html",relativePath:"guide/tabs/base.md",key:"v-70a9e8d2",path:"/guide/tabs/base.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:77},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:1107},{level:2,title:"tabList 配置项",slug:"tablist-配置项",normalizedTitle:"tablist 配置项",charIndex:1584},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1820},{level:2,title:"特性说明",slug:"特性说明",normalizedTitle:"特性说明",charIndex:1925}],headersStr:"概述 示例 API tabList 配置项 事件 特性说明",content:'# 基本使用\n\n\n# 概述\n\n基于 el-tabs 的增强型标签组件，提供了更丰富的功能，包括标签页未激活时不渲染、缓存、刷新、过渡动画等特性。\n\n\n# 示例\n\n<template>\r\n  <sc-tabs\r\n    v-model="activeTab"\r\n    :tab-list="tabList"\r\n    all\r\n    refresh\r\n    type="card"\r\n    @tab-click="handleTabClick"\r\n  >\r\n    <template #tab1>\r\n      <div>标签1的内容</div>\r\n    </template>\r\n\r\n    <template #tab2-label="scope">\r\n      <i class="el-icon-date"></i>\r\n      {{ scope.label }}\r\n    </template>\r\n\r\n    <template #tab2>\r\n      <div>标签2的内容</div>\r\n    </template>\r\n  </sc-tabs>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeTab: "tab1",\r\n      tabList: [\r\n        {\r\n          label: "标签1",\r\n          name: "tab1",\r\n          icon: "el-icon-date",\r\n          cache: true,\r\n        },\r\n        {\r\n          label: "标签2",\r\n          name: "tab2",\r\n        },\r\n        {\r\n          label: "标签3",\r\n          name: "tab3",\r\n          render: () => {\r\n            return <div>标签3的内容</div>;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handleTabClick(tab, item) {\r\n      console.log("点击的标签：", tab, item);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# API\n\n属性名             类型               默认值     说明\nvalue/v-model   String/Number    -       当前激活的标签页名称\ntabList         Array            []      标签页配置列表\ncache           Boolean          true    是否缓存标签页内容\nall             Boolean/Object   false   是否显示"全部"标签页\nborder          Boolean          false   是否显示边框样式\ncacheActive     Boolean          true    是否在路由中缓存激活的标签页\nrefresh         Boolean          false   是否显示刷新按钮\nlazy            Boolean          true    默认不加载未激活页面，false则加载全部\n\n\n# tabList 配置项\n\n[\n  {\n    label: \'标签名称\',      // 显示的标签文本\n    name: \'tabName\',       // 标签的唯一标识\n    icon: \'el-icon-date\',  // 可选，标签页图标\n    cache: true,           // 可选，是否缓存该标签页内容\n    render: () => { },     // 可选，render函数自定义标签页内容\n  }\n]\n\n\n\n# 事件\n\n事件名         说明          回调参数\ntab-click   标签页被点击时触发   被点击的标签页\nrefresh     刷新标签页时触发    （tab，index）\n\n\n# 特性说明\n\n 1. 标签页未激活时不渲染 + 标签页缓存\n    \n    v-if与v-show的结合使用，未激活时不会渲染，激活时会渲染\n    \n    默认开启缓存功能，切换标签页不会销毁内容\n\n 2. 路由缓存\n    \n    启用cacheActive后，激活的标签页会被记录在路由query中\n    \n    刷新页面后会自动恢复到之前激活的标签页',normalizedContent:'# 基本使用\n\n\n# 概述\n\n基于 el-tabs 的增强型标签组件，提供了更丰富的功能，包括标签页未激活时不渲染、缓存、刷新、过渡动画等特性。\n\n\n# 示例\n\n<template>\r\n  <sc-tabs\r\n    v-model="activetab"\r\n    :tab-list="tablist"\r\n    all\r\n    refresh\r\n    type="card"\r\n    @tab-click="handletabclick"\r\n  >\r\n    <template #tab1>\r\n      <div>标签1的内容</div>\r\n    </template>\r\n\r\n    <template #tab2-label="scope">\r\n      <i class="el-icon-date"></i>\r\n      {{ scope.label }}\r\n    </template>\r\n\r\n    <template #tab2>\r\n      <div>标签2的内容</div>\r\n    </template>\r\n  </sc-tabs>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      activetab: "tab1",\r\n      tablist: [\r\n        {\r\n          label: "标签1",\r\n          name: "tab1",\r\n          icon: "el-icon-date",\r\n          cache: true,\r\n        },\r\n        {\r\n          label: "标签2",\r\n          name: "tab2",\r\n        },\r\n        {\r\n          label: "标签3",\r\n          name: "tab3",\r\n          render: () => {\r\n            return <div>标签3的内容</div>;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    handletabclick(tab, item) {\r\n      console.log("点击的标签：", tab, item);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\n\n\n# api\n\n属性名             类型               默认值     说明\nvalue/v-model   string/number    -       当前激活的标签页名称\ntablist         array            []      标签页配置列表\ncache           boolean          true    是否缓存标签页内容\nall             boolean/object   false   是否显示"全部"标签页\nborder          boolean          false   是否显示边框样式\ncacheactive     boolean          true    是否在路由中缓存激活的标签页\nrefresh         boolean          false   是否显示刷新按钮\nlazy            boolean          true    默认不加载未激活页面，false则加载全部\n\n\n# tablist 配置项\n\n[\n  {\n    label: \'标签名称\',      // 显示的标签文本\n    name: \'tabname\',       // 标签的唯一标识\n    icon: \'el-icon-date\',  // 可选，标签页图标\n    cache: true,           // 可选，是否缓存该标签页内容\n    render: () => { },     // 可选，render函数自定义标签页内容\n  }\n]\n\n\n\n# 事件\n\n事件名         说明          回调参数\ntab-click   标签页被点击时触发   被点击的标签页\nrefresh     刷新标签页时触发    （tab，index）\n\n\n# 特性说明\n\n 1. 标签页未激活时不渲染 + 标签页缓存\n    \n    v-if与v-show的结合使用，未激活时不会渲染，激活时会渲染\n    \n    默认开启缓存功能，切换标签页不会销毁内容\n\n 2. 路由缓存\n    \n    启用cacheactive后，激活的标签页会被记录在路由query中\n    \n    刷新页面后会自动恢复到之前激活的标签页',charsets:{cjk:!0}},{title:"基本使用",frontmatter:{},regularPath:"/guide/tableSelect/base.html",relativePath:"guide/tableSelect/base.md",key:"v-5f30a1d2",path:"/guide/tableSelect/base.html",headers:[{level:2,title:"值类型支持",slug:"值类型支持",normalizedTitle:"值类型支持",charIndex:119},{level:2,title:"搜索功能",slug:"搜索功能",normalizedTitle:"搜索功能",charIndex:4453},{level:2,title:"弹窗模式",slug:"弹窗模式",normalizedTitle:"弹窗模式",charIndex:7927},{level:2,title:"自定义内容",slug:"自定义内容",normalizedTitle:"自定义内容",charIndex:9338},{level:2,title:"API 文档",slug:"api-文档",normalizedTitle:"api 文档",charIndex:12608},{level:3,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:4506},{level:3,title:"Slots",slug:"slots",normalizedTitle:"slots",charIndex:14089}],headersStr:"值类型支持 搜索功能 弹窗模式 自定义内容 API 文档 属性 Slots",content:'# 基本使用\n\nTableSelect 是一个基于 el-select 和 sc-crud 封装的表格选择器组件，提供了丰富的选择功能和灵活的数据格式支持。它可以在下拉框中显示表格数据，支持单选和多选模式，以及多种输入输出格式。\n\n\n# 值类型支持\n\nTableSelect 通过 basicType 参数配置输入输出值类型：\n\n * 单选模式：支持对象格式和基本类型（ID）\n * 多选模式：支持对象数组和基本类型数组（ID 数组）\n\n<template>\r\n  <div>\r\n    <el-divider content-position="left">单选模式</el-divider>\r\n\r\n    <div class="demo-section">\r\n      <h4>对象类型</h4>\r\n      <sc-table-select\r\n        v-model="objectValue"\r\n        :data="userData"\r\n        :columns="singleColumns"\r\n        labelKey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ JSON.stringify(objectValue) }}</p>\r\n        <p>类型: {{ getType(objectValue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>基本类型 (ID)</h4>\r\n      <sc-table-select\r\n        v-model="primitiveValue"\r\n        :data="userData"\r\n        :columns="singleColumns"\r\n        labelKey="name"\r\n        basicType\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ primitiveValue }}</p>\r\n        <p>类型: {{ getType(primitiveValue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <el-divider content-position="left">多选模式</el-divider>\r\n\r\n    <div class="demo-section">\r\n      <h4>对象数组</h4>\r\n      <sc-table-select\r\n        v-model="objectArrayValue"\r\n        :data="userData"\r\n        :columns="multipleColumns"\r\n        multiple\r\n        labelKey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ JSON.stringify(objectArrayValue) }}</p>\r\n        <p>类型: {{ getType(objectArrayValue) }}</p>\r\n        <p>长度: {{ objectArrayValue ? objectArrayValue.length : 0 }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>ID 数组</h4>\r\n      <sc-table-select\r\n        v-model="idArrayValue"\r\n        :data="userData"\r\n        :columns="multipleColumns"\r\n        multiple\r\n        labelKey="name"\r\n        basicType\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ JSON.stringify(idArrayValue) }}</p>\r\n        <p>类型: {{ getType(idArrayValue) }}</p>\r\n        <p>长度: {{ idArrayValue ? idArrayValue.length : 0 }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 单选值\r\n      objectValue: { id: 1, name: "张三", email: "zhangsan@example.com" },\r\n      primitiveValue: 2,\r\n\r\n      // 多选值\r\n      objectArrayValue: [\r\n        { id: 1, name: "张三", email: "zhangsan@example.com" },\r\n        { id: 3, name: "王五", email: "wangwu@example.com" },\r\n      ],\r\n      idArrayValue: [2, 4],\r\n\r\n      // 表格数据\r\n      userData: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          age: 28,\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          age: 32,\r\n          department: "市场部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          age: 25,\r\n          department: "销售部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          age: 30,\r\n          department: "人事部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          age: 35,\r\n          department: "财务部",\r\n        },\r\n      ],\r\n\r\n      // 表格配置\r\n      singleColumns: [\r\n        { prop: "id", label: "ID", width: 80 },\r\n        { prop: "name", label: "姓名", width: 120 },\r\n        { prop: "email", label: "邮箱", width: 200 },\r\n        { prop: "department", label: "部门", width: 120 },\r\n      ],\r\n      multipleColumns: [\r\n        { prop: "id", label: "ID", width: 80 },\r\n        { prop: "name", label: "姓名", width: 120 },\r\n        { prop: "email", label: "邮箱", width: 200 },\r\n        { prop: "department", label: "部门", width: 120 },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取值的类型\r\n    getType(value) {\r\n      if (value === null || value === undefined) {\r\n        return String(value);\r\n      }\r\n      if (Array.isArray(value)) {\r\n        if (value.length === 0) {\r\n          return "空数组";\r\n        }\r\n        return `数组<${typeof value[0]}>`;\r\n      }\r\n      return typeof value;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 搜索功能\n\nTableSelect 组件支持本地搜索和远程搜索：\n\n * 本地搜索：filterable 属性默认启用且默认开启表格本地搜索，支持配置filterMethod自定义搜索方法\n * 远程搜索：通过 remote 和 搜索参数search.sync 实现\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h4>本地搜索</h4>\r\n      <sc-table-select\r\n        v-model="localSearchSelectValue"\r\n        :tableOptions="localSearchOptions"\r\n        :data="userData"\r\n        labelKey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>选中值: {{ JSON.stringify(localSearchSelectValue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>远程搜索</h4>\r\n      <sc-table-select\r\n        v-model="remoteSearchSelectValue"\r\n        :search.sync="remoteSearchValue"\r\n        :tableOptions="remoteSearchOptions"\r\n        :data="filteredData"\r\n        :remote="true"\r\n        labelKey="name"\r\n        searchKey="name"\r\n        :loading="loading"\r\n        @getList="getList"\r\n      />\r\n      <div class="value-display">\r\n        <p>选中值: {{ JSON.stringify(remoteSearchSelectValue) }}</p>\r\n        <p>搜索值: {{ JSON.stringify(remoteSearchValue) }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockApi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 本地搜索\r\n      localSearchSelectValue: null,\r\n      localSearchOptions: {\r\n        renderColumns: [\r\n          { prop: "id", label: "ID", width: 80, search: true },\r\n          { prop: "name", label: "姓名", width: 120 },\r\n          { prop: "email", label: "邮箱", width: 200, search: true },\r\n          { prop: "department", label: "部门", width: 120, search: true },\r\n        ],\r\n      },\r\n\r\n      // 远程搜索\r\n      remoteSearchSelectValue: {},\r\n      remoteSearchValue: {},\r\n      remoteSearchOptions: {\r\n        renderColumns: [\r\n          { prop: "id", label: "ID", width: 80, search: true },\r\n          { prop: "name", label: "姓名", width: 120, search: true },\r\n          { prop: "email", label: "邮箱", width: 200, search: true },\r\n          { prop: "department", label: "部门", width: 120, search: true },\r\n        ],\r\n      },\r\n      loading: false,\r\n      filteredData: [],\r\n\r\n      // 用户数据\r\n      userData: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          age: 28,\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          age: 32,\r\n          department: "市场部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          age: 25,\r\n          department: "销售部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          age: 30,\r\n          department: "人事部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          age: 35,\r\n          department: "财务部",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    // 模拟远程搜索方法\r\n    async getList() {\r\n      this.loading = true;\r\n      console.log(this.remoteSearchValue, "getList");\r\n      this.filteredData = [...this.userData];\r\n      setTimeout(() => {\r\n        this.loading = false;\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 弹窗模式\n\n可以通过useDialog属性配置弹窗模式展示表格：\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>弹窗模式</h3>\r\n      <sc-table-select\r\n        v-model="dialogValue"\r\n        :data="tableData"\r\n        :columns="columns"\r\n        labelKey="name"\r\n        useDialog\r\n      />\r\n      <div class="value-display">选中值: {{ getType(dialogValue) }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogValue: null,\r\n      tableData: [\r\n        { id: 1, name: "张三", age: 25 },\r\n        { id: 2, name: "李四", age: 30 },\r\n        { id: 3, name: "王五", age: 35 },\r\n        { id: 4, name: "赵六", age: 28 },\r\n        { id: 5, name: "钱七", age: 32 },\r\n        { id: 6, name: "孙八", age: 40 },\r\n      ],\r\n      columns: [\r\n        { label: "ID", prop: "id", width: 80 },\r\n        { label: "姓名", prop: "name" },\r\n        { label: "年龄", prop: "age" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    getType(value) {\r\n      if (value === null || value === undefined) {\r\n        return "未选择";\r\n      }\r\n      if (Array.isArray(value)) {\r\n        return JSON.stringify(value);\r\n      }\r\n      return JSON.stringify(value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style>\r\ntable {\r\n  margin: 0;\r\n}\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n}\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 自定义内容\n\n支持在下拉、弹窗内容的上下左右位置添加自定义内容。同样也继承了sc-crud的所有插槽。\n\n<template>\r\n  <div class="position-demo">\r\n    <h3>下拉模式自定义方位</h3>\r\n    <sc-table-select\r\n      v-model="dropdownValue"\r\n      :tableOptions="tableOptions"\r\n      :data="userData"\r\n      placeholder="请选择用户"\r\n      labelKey="name"\r\n    >\r\n      \x3c!-- 表格内容顶部 --\x3e\r\n      <template #content-top="scope">\r\n        <div class="custom-position-content top-content">\r\n          <el-tag type="success">表格顶部内容</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      \x3c!-- 表格内容底部 --\x3e\r\n      <template #content-bottom="scope">\r\n        <div class="custom-position-content bottom-content">\r\n          <el-tag type="success">表格底部内容</el-tag>\r\n        </div>\r\n      </template>\r\n      <template #name="scope">\r\n        <el-tag type="success">姓名</el-tag>\r\n      </template>\r\n    </sc-table-select>\r\n\r\n    <h3 style="margin-top: 20px">弹窗模式自定义方位</h3>\r\n    <sc-table-select\r\n      v-model="dialogValue"\r\n      :tableOptions="tableOptions"\r\n      :data="userData"\r\n      placeholder="请选择用户"\r\n      labelKey="name"\r\n      useDialog\r\n    >\r\n      \x3c!-- 弹窗表格内容顶部 --\x3e\r\n      <template #content-top="scope">\r\n        <div class="custom-position-content top-content">\r\n          <el-tag type="success">表格顶部内容</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      \x3c!-- 弹窗表格内容底部 --\x3e\r\n      <template #content-bottom="scope">\r\n        <div class="custom-position-content bottom-content">\r\n          <el-tag type="success">表格底部内容</el-tag>\r\n        </div>\r\n      </template>\r\n    </sc-table-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dropdownValue: null,\r\n      dialogValue: null,\r\n      userData: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          department: "产品部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          department: "设计部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          department: "运营部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          department: "技术部",\r\n        },\r\n      ],\r\n      tableOptions: {\r\n        singleSelection: {\r\n          banner: false,\r\n          ctrlSelect: true,\r\n        },\r\n        renderColumns: [\r\n          { prop: "id", label: "ID", width: 80 },\r\n          { prop: "name", label: "姓名", width: 120 },\r\n          { prop: "email", label: "邮箱", width: 200 },\r\n          { prop: "department", label: "部门", width: 120 },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.position-demo {\r\n  margin: 20px 0;\r\n}\r\n\r\n.custom-position-content {\r\n  padding: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.custom-position-content.top-content {\r\n  border-bottom: 1px dashed #dcdfe6;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.custom-position-content.bottom-content {\r\n  border-top: 1px dashed #dcdfe6;\r\n  margin-top: 8px;\r\n}\r\n\r\n.position-info {\r\n  margin-left: 10px;\r\n  color: #606266;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n\n\n\n# API 文档\n\n继承 el-select 组件与 sc-crud 组件的 API\n\n\n# 属性\n\n属性名               说明               类型                                 默认值\nvalue / v-model   绑定值，支持多种格式       Array / Object / String / Number   null\nloading           是否显示加载中          Boolean                            false\nmultiple          是否多选             Boolean                            false\nsearch            远程搜索参数           Object                             {}\ndata              表格数据             Array                              []\ntotal             数据总数-远程分页        Number                             0\ncolumns           表格列配置            Array                              []\ntableOptions      表格配置项            Object                             {}\nlabelKey          显示的标签字段          String                             \'label\'\nvalueKey          值字段              String                             \'id\'\nsearchKey         输入框远程搜索的字段       String                             默认等于 labelKey\nfilterable        是否可搜索            Boolean                            true\nfilterMethod      自定义本地搜索方法        Function                           null\nremote            是否开启远程搜索         Boolean                            false\nremoteMethod      自定义远程搜索方法        Function                           null\nbasicType         是否使用基本类型作为输出格式   Boolean                            false\nuseDialog         是否使用弹窗模式展示表格     Boolean                            false\ndialogOptions     弹窗配置             Object                             {}\n\n\n# Slots\n\n插槽名                  说明      作用域参数\ncontent-[position]   自定义内容   { }\n\n> 注：[position] 可以是 top、bottom、left、right',normalizedContent:'# 基本使用\n\ntableselect 是一个基于 el-select 和 sc-crud 封装的表格选择器组件，提供了丰富的选择功能和灵活的数据格式支持。它可以在下拉框中显示表格数据，支持单选和多选模式，以及多种输入输出格式。\n\n\n# 值类型支持\n\ntableselect 通过 basictype 参数配置输入输出值类型：\n\n * 单选模式：支持对象格式和基本类型（id）\n * 多选模式：支持对象数组和基本类型数组（id 数组）\n\n<template>\r\n  <div>\r\n    <el-divider content-position="left">单选模式</el-divider>\r\n\r\n    <div class="demo-section">\r\n      <h4>对象类型</h4>\r\n      <sc-table-select\r\n        v-model="objectvalue"\r\n        :data="userdata"\r\n        :columns="singlecolumns"\r\n        labelkey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ json.stringify(objectvalue) }}</p>\r\n        <p>类型: {{ gettype(objectvalue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>基本类型 (id)</h4>\r\n      <sc-table-select\r\n        v-model="primitivevalue"\r\n        :data="userdata"\r\n        :columns="singlecolumns"\r\n        labelkey="name"\r\n        basictype\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ primitivevalue }}</p>\r\n        <p>类型: {{ gettype(primitivevalue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <el-divider content-position="left">多选模式</el-divider>\r\n\r\n    <div class="demo-section">\r\n      <h4>对象数组</h4>\r\n      <sc-table-select\r\n        v-model="objectarrayvalue"\r\n        :data="userdata"\r\n        :columns="multiplecolumns"\r\n        multiple\r\n        labelkey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ json.stringify(objectarrayvalue) }}</p>\r\n        <p>类型: {{ gettype(objectarrayvalue) }}</p>\r\n        <p>长度: {{ objectarrayvalue ? objectarrayvalue.length : 0 }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>id 数组</h4>\r\n      <sc-table-select\r\n        v-model="idarrayvalue"\r\n        :data="userdata"\r\n        :columns="multiplecolumns"\r\n        multiple\r\n        labelkey="name"\r\n        basictype\r\n      />\r\n      <div class="value-display">\r\n        <p>当前值: {{ json.stringify(idarrayvalue) }}</p>\r\n        <p>类型: {{ gettype(idarrayvalue) }}</p>\r\n        <p>长度: {{ idarrayvalue ? idarrayvalue.length : 0 }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 单选值\r\n      objectvalue: { id: 1, name: "张三", email: "zhangsan@example.com" },\r\n      primitivevalue: 2,\r\n\r\n      // 多选值\r\n      objectarrayvalue: [\r\n        { id: 1, name: "张三", email: "zhangsan@example.com" },\r\n        { id: 3, name: "王五", email: "wangwu@example.com" },\r\n      ],\r\n      idarrayvalue: [2, 4],\r\n\r\n      // 表格数据\r\n      userdata: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          age: 28,\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          age: 32,\r\n          department: "市场部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          age: 25,\r\n          department: "销售部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          age: 30,\r\n          department: "人事部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          age: 35,\r\n          department: "财务部",\r\n        },\r\n      ],\r\n\r\n      // 表格配置\r\n      singlecolumns: [\r\n        { prop: "id", label: "id", width: 80 },\r\n        { prop: "name", label: "姓名", width: 120 },\r\n        { prop: "email", label: "邮箱", width: 200 },\r\n        { prop: "department", label: "部门", width: 120 },\r\n      ],\r\n      multiplecolumns: [\r\n        { prop: "id", label: "id", width: 80 },\r\n        { prop: "name", label: "姓名", width: 120 },\r\n        { prop: "email", label: "邮箱", width: 200 },\r\n        { prop: "department", label: "部门", width: 120 },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取值的类型\r\n    gettype(value) {\r\n      if (value === null || value === undefined) {\r\n        return string(value);\r\n      }\r\n      if (array.isarray(value)) {\r\n        if (value.length === 0) {\r\n          return "空数组";\r\n        }\r\n        return `数组<${typeof value[0]}>`;\r\n      }\r\n      return typeof value;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 搜索功能\n\ntableselect 组件支持本地搜索和远程搜索：\n\n * 本地搜索：filterable 属性默认启用且默认开启表格本地搜索，支持配置filtermethod自定义搜索方法\n * 远程搜索：通过 remote 和 搜索参数search.sync 实现\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h4>本地搜索</h4>\r\n      <sc-table-select\r\n        v-model="localsearchselectvalue"\r\n        :tableoptions="localsearchoptions"\r\n        :data="userdata"\r\n        labelkey="name"\r\n      />\r\n      <div class="value-display">\r\n        <p>选中值: {{ json.stringify(localsearchselectvalue) }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="demo-section">\r\n      <h4>远程搜索</h4>\r\n      <sc-table-select\r\n        v-model="remotesearchselectvalue"\r\n        :search.sync="remotesearchvalue"\r\n        :tableoptions="remotesearchoptions"\r\n        :data="filtereddata"\r\n        :remote="true"\r\n        labelkey="name"\r\n        searchkey="name"\r\n        :loading="loading"\r\n        @getlist="getlist"\r\n      />\r\n      <div class="value-display">\r\n        <p>选中值: {{ json.stringify(remotesearchselectvalue) }}</p>\r\n        <p>搜索值: {{ json.stringify(remotesearchvalue) }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mockapi } from "../mock";\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 本地搜索\r\n      localsearchselectvalue: null,\r\n      localsearchoptions: {\r\n        rendercolumns: [\r\n          { prop: "id", label: "id", width: 80, search: true },\r\n          { prop: "name", label: "姓名", width: 120 },\r\n          { prop: "email", label: "邮箱", width: 200, search: true },\r\n          { prop: "department", label: "部门", width: 120, search: true },\r\n        ],\r\n      },\r\n\r\n      // 远程搜索\r\n      remotesearchselectvalue: {},\r\n      remotesearchvalue: {},\r\n      remotesearchoptions: {\r\n        rendercolumns: [\r\n          { prop: "id", label: "id", width: 80, search: true },\r\n          { prop: "name", label: "姓名", width: 120, search: true },\r\n          { prop: "email", label: "邮箱", width: 200, search: true },\r\n          { prop: "department", label: "部门", width: 120, search: true },\r\n        ],\r\n      },\r\n      loading: false,\r\n      filtereddata: [],\r\n\r\n      // 用户数据\r\n      userdata: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          age: 28,\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          age: 32,\r\n          department: "市场部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          age: 25,\r\n          department: "销售部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          age: 30,\r\n          department: "人事部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          age: 35,\r\n          department: "财务部",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    // 模拟远程搜索方法\r\n    async getlist() {\r\n      this.loading = true;\r\n      console.log(this.remotesearchvalue, "getlist");\r\n      this.filtereddata = [...this.userdata];\r\n      settimeout(() => {\r\n        this.loading = false;\r\n      }, 500);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 弹窗模式\n\n可以通过usedialog属性配置弹窗模式展示表格：\n\n<template>\r\n  <div>\r\n    <div class="demo-section">\r\n      <h3>弹窗模式</h3>\r\n      <sc-table-select\r\n        v-model="dialogvalue"\r\n        :data="tabledata"\r\n        :columns="columns"\r\n        labelkey="name"\r\n        usedialog\r\n      />\r\n      <div class="value-display">选中值: {{ gettype(dialogvalue) }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogvalue: null,\r\n      tabledata: [\r\n        { id: 1, name: "张三", age: 25 },\r\n        { id: 2, name: "李四", age: 30 },\r\n        { id: 3, name: "王五", age: 35 },\r\n        { id: 4, name: "赵六", age: 28 },\r\n        { id: 5, name: "钱七", age: 32 },\r\n        { id: 6, name: "孙八", age: 40 },\r\n      ],\r\n      columns: [\r\n        { label: "id", prop: "id", width: 80 },\r\n        { label: "姓名", prop: "name" },\r\n        { label: "年龄", prop: "age" },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    gettype(value) {\r\n      if (value === null || value === undefined) {\r\n        return "未选择";\r\n      }\r\n      if (array.isarray(value)) {\r\n        return json.stringify(value);\r\n      }\r\n      return json.stringify(value);\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style>\r\ntable {\r\n  margin: 0;\r\n}\r\n.demo-section {\r\n  margin-bottom: 20px;\r\n}\r\n.value-display {\r\n  margin-top: 10px;\r\n  padding: 8px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n  font-family: monospace;\r\n}\r\n</style>\r\n\n\n\n# 自定义内容\n\n支持在下拉、弹窗内容的上下左右位置添加自定义内容。同样也继承了sc-crud的所有插槽。\n\n<template>\r\n  <div class="position-demo">\r\n    <h3>下拉模式自定义方位</h3>\r\n    <sc-table-select\r\n      v-model="dropdownvalue"\r\n      :tableoptions="tableoptions"\r\n      :data="userdata"\r\n      placeholder="请选择用户"\r\n      labelkey="name"\r\n    >\r\n      \x3c!-- 表格内容顶部 --\x3e\r\n      <template #content-top="scope">\r\n        <div class="custom-position-content top-content">\r\n          <el-tag type="success">表格顶部内容</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      \x3c!-- 表格内容底部 --\x3e\r\n      <template #content-bottom="scope">\r\n        <div class="custom-position-content bottom-content">\r\n          <el-tag type="success">表格底部内容</el-tag>\r\n        </div>\r\n      </template>\r\n      <template #name="scope">\r\n        <el-tag type="success">姓名</el-tag>\r\n      </template>\r\n    </sc-table-select>\r\n\r\n    <h3 style="margin-top: 20px">弹窗模式自定义方位</h3>\r\n    <sc-table-select\r\n      v-model="dialogvalue"\r\n      :tableoptions="tableoptions"\r\n      :data="userdata"\r\n      placeholder="请选择用户"\r\n      labelkey="name"\r\n      usedialog\r\n    >\r\n      \x3c!-- 弹窗表格内容顶部 --\x3e\r\n      <template #content-top="scope">\r\n        <div class="custom-position-content top-content">\r\n          <el-tag type="success">表格顶部内容</el-tag>\r\n        </div>\r\n      </template>\r\n\r\n      \x3c!-- 弹窗表格内容底部 --\x3e\r\n      <template #content-bottom="scope">\r\n        <div class="custom-position-content bottom-content">\r\n          <el-tag type="success">表格底部内容</el-tag>\r\n        </div>\r\n      </template>\r\n    </sc-table-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dropdownvalue: null,\r\n      dialogvalue: null,\r\n      userdata: [\r\n        {\r\n          id: 1,\r\n          name: "张三",\r\n          email: "zhangsan@example.com",\r\n          department: "技术部",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: "李四",\r\n          email: "lisi@example.com",\r\n          department: "产品部",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: "王五",\r\n          email: "wangwu@example.com",\r\n          department: "设计部",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: "赵六",\r\n          email: "zhaoliu@example.com",\r\n          department: "运营部",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: "钱七",\r\n          email: "qianqi@example.com",\r\n          department: "技术部",\r\n        },\r\n      ],\r\n      tableoptions: {\r\n        singleselection: {\r\n          banner: false,\r\n          ctrlselect: true,\r\n        },\r\n        rendercolumns: [\r\n          { prop: "id", label: "id", width: 80 },\r\n          { prop: "name", label: "姓名", width: 120 },\r\n          { prop: "email", label: "邮箱", width: 200 },\r\n          { prop: "department", label: "部门", width: 120 },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\n<\/script>\r\n\r\n<style scoped>\r\n.position-demo {\r\n  margin: 20px 0;\r\n}\r\n\r\n.custom-position-content {\r\n  padding: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.custom-position-content.top-content {\r\n  border-bottom: 1px dashed #dcdfe6;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.custom-position-content.bottom-content {\r\n  border-top: 1px dashed #dcdfe6;\r\n  margin-top: 8px;\r\n}\r\n\r\n.position-info {\r\n  margin-left: 10px;\r\n  color: #606266;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n\n\n\n# api 文档\n\n继承 el-select 组件与 sc-crud 组件的 api\n\n\n# 属性\n\n属性名               说明               类型                                 默认值\nvalue / v-model   绑定值，支持多种格式       array / object / string / number   null\nloading           是否显示加载中          boolean                            false\nmultiple          是否多选             boolean                            false\nsearch            远程搜索参数           object                             {}\ndata              表格数据             array                              []\ntotal             数据总数-远程分页        number                             0\ncolumns           表格列配置            array                              []\ntableoptions      表格配置项            object                             {}\nlabelkey          显示的标签字段          string                             \'label\'\nvaluekey          值字段              string                             \'id\'\nsearchkey         输入框远程搜索的字段       string                             默认等于 labelkey\nfilterable        是否可搜索            boolean                            true\nfiltermethod      自定义本地搜索方法        function                           null\nremote            是否开启远程搜索         boolean                            false\nremotemethod      自定义远程搜索方法        function                           null\nbasictype         是否使用基本类型作为输出格式   boolean                            false\nusedialog         是否使用弹窗模式展示表格     boolean                            false\ndialogoptions     弹窗配置             object                             {}\n\n\n# slots\n\n插槽名                  说明      作用域参数\ncontent-[position]   自定义内容   { }\n\n> 注：[position] 可以是 top、bottom、left、right',charsets:{cjk:!0}},{frontmatter:{layout:"Tags",title:"Tags"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"FrontmatterKey",title:"Categories"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"TimeLines",title:"Timeline"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{repo:"https://github.com/Blade-H1kar1/vue-super-crud.git",repoLabel:"GitHub",sidebarDepth:3,subSidebar:"auto",searchMaxSuggestions:10,nav:[{text:"首页",link:"/"},{text:"指南",link:"/guide/start/base"}],sidebar:{"/guide/":[{title:"快速使用",path:"start/base"},{title:"基础通用配置",collapsable:!0,children:["commonConfig/renderType","commonConfig/jsx","commonConfig/presetCodeTemplate"]},{title:"字典管理",collapsable:!0,children:["dict/config","dict/component","dict/baseUse"]},{title:"方位插槽",collapsable:!0,children:["positionSlot/base"]},{title:"响应式数据格式化",collapsable:!0,children:["formatData/config","formatData/baseUse"]},{title:"数据模拟",collapsable:!0,children:["mockData/base"]},{title:"Crud 组件",collapsable:!0,children:["crud/baseUse","crud/search","crud/tableEdit","crud/validate","crud/contextMenu","crud/buttons","crud/selection","crud/genDynamicColumns","crud/span","crud/dataSort","crud/summary","crud/optimize","crud/expandFunction","crud/areaSelection"]},{title:"tableSelect 组件",collapsable:!0,children:["tableSelect/base"]},{title:"Form 组件",collapsable:!0,children:["form/baseUse","form/detail"]},{title:"StepForm 组件",collapsable:!0,children:["stepForm/base"]},{title:"Grid 布局组件",collapsable:!0,children:["grid/baseUse"]},{title:"函数式 Dialog 组件",collapsable:!0,children:["dialog/baseUse"]},{title:"Button 组件",collapsable:!0,children:["button/base"]},{title:"Tabs 组件",collapsable:!0,children:["tabs/base"]},{title:"CollapseSplitter 组件",collapsable:!0,children:["collapseSplitter/base"]},{title:"问题合集",collapsable:!0,children:["question/base"]}]}}};r(272),r(273),r(274);var Ye=r(25),Je={computed:{$recoPosts(){let n=this.$site.pages;return n=Object(Ye.a)(n,!1),Object(Ye.c)(n),n},$recoPostsForTimeline(){let n=this.$recoPosts;const e={},r=[];n=Object(Ye.a)(n,!0),this.pages=0==n.length?[]:n;for(let r=0,t=n.length;r<t;r++){const t=n[r],a=Ze(t.frontmatter.date,"year");e[a]?e[a].push(t):e[a]=[t]}for(const n in e){const t=e[n];Object(Ye.b)(t),r.unshift({year:n,data:t})}return r},$categoriesList(){return this.$categories.list.map(n=>(n.pages=n.pages.filter(n=>!1!==n.frontmatter.publish),n))},$tagesList(){return this.$tags.list.map(n=>(n.pages=n.pages.filter(n=>!1!==n.frontmatter.publish),n))},$showSubSideBar(){const{$themeConfig:{subSidebar:n,sidebar:e},$frontmatter:{subSidebar:r,sidebar:t}}=this,a=this.$page.headers||[];return!([r,t].indexOf(!1)>-1)&&([r,t].indexOf("auto")>-1&&a.length>0||[n,e].indexOf("auto")>-1&&a.length>0)}}};function Ze(n,e){n=function(n){var e=new Date(n).toJSON();return new Date(+new Date(e)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(n);const r=new Date(n),t=r.getFullYear(),a=r.getMonth()+1,o=r.getDate();return"year"==e?t:`${a}-${o}`}var Xe={all:"全部",article:"文章",tag:"标签",category:"分类",friendLink:"友情链接",timeLine:"时间轴",timeLineMsg:"昨日重现！"},nr={all:"全部",article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接",timeLine:"時間軸",timeLineMsg:"昨日重現！"},er={all:"All",article:"Articles",tag:"Tags",category:"Categories",friendLink:"Friend Links",timeLine:"TimeLine",timeLineMsg:"Yesterday Once More!"},rr={all:"全部",article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク",timeLine:"タイムライン",timeLineMsg:"昨日また！"},tr={all:"전체",article:"글",tag:"태그",category:"분류",friendLink:"링크 참조",timeLine:"타임 라인",timeLineMsg:"어제 또!"},ar={all:"Todas",article:"Artículos",tag:"Etiquetas",category:"Categorías",friendLink:"Páginas amigas",timeLine:"Cronología",timeLineMsg:"¡Ayer otra vez!"},or={computed:{$recoLocales(){const n=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?{...Xe,...n}:/^zh\-(HK|MO|TW)$/.test(this.$lang)?{...nr,...n}:/^ja\-JP$/.test(this.$lang)?{...rr,...n}:/^ko\-KR$/.test(this.$lang)?{...tr,...n}:/^es(\-[A-Z]+)?$/.test(this.$lang)?{...ar,...n}:{...er,...n}}}},ir=r(41);r(275);t.default.component("button-base",()=>r.e(91).then(r.bind(null,814))),t.default.component("collapseSplitter-base",()=>Promise.all([r.e(0),r.e(43)]).then(r.bind(null,815))),t.default.component("collapseSplitter-events",()=>Promise.all([r.e(0),r.e(44)]).then(r.bind(null,816))),t.default.component("collapseSplitter-nested",()=>Promise.all([r.e(0),r.e(45)]).then(r.bind(null,817))),t.default.component("collapseSplitter-slots",()=>Promise.all([r.e(0),r.e(46)]).then(r.bind(null,818))),t.default.component("collapseSplitter-vertical",()=>Promise.all([r.e(0),r.e(47)]).then(r.bind(null,819))),t.default.component("crud-copy",()=>r.e(110).then(r.bind(null,820))),t.default.component("common-code-format",()=>Promise.all([r.e(0),r.e(48)]).then(r.bind(null,821))),t.default.component("dict-baseUse",()=>r.e(69).then(r.bind(null,822))),t.default.component("dict-component",()=>r.e(143).then(r.bind(null,823))),t.default.component("dict-DictLinkage",()=>Promise.all([r.e(0),r.e(37)]).then(r.bind(null,824))),t.default.component("dict-localDict",()=>r.e(70).then(r.bind(null,825))),t.default.component("formatData-baseUse",()=>Promise.all([r.e(5),r.e(90)]).then(r.bind(null,826))),t.default.component("grid-areas",()=>Promise.all([r.e(0),r.e(71)]).then(r.bind(null,827))),t.default.component("grid-autoFill",()=>Promise.all([r.e(0),r.e(72)]).then(r.bind(null,828))),t.default.component("grid-base",()=>Promise.all([r.e(0),r.e(73)]).then(r.bind(null,829))),t.default.component("grid-cell",()=>Promise.all([r.e(0),r.e(74)]).then(r.bind(null,830))),t.default.component("grid-fixedColumns",()=>Promise.all([r.e(0),r.e(75)]).then(r.bind(null,831))),t.default.component("mockData-custom",()=>r.e(156).then(r.bind(null,832))),t.default.component("mockData-example",()=>r.e(157).then(r.bind(null,833))),t.default.component("positionSlot-base",()=>r.e(158).then(r.bind(null,834))),t.default.component("positionSlot-form",()=>r.e(159).then(r.bind(null,835))),t.default.component("positionSlot-table",()=>r.e(76).then(r.bind(null,836))),t.default.component("tableSelect-displayMode",()=>Promise.all([r.e(0),r.e(80)]).then(r.bind(null,837))),t.default.component("tableSelect-position",()=>Promise.all([r.e(0),r.e(81)]).then(r.bind(null,838))),t.default.component("tableSelect-search",()=>Promise.all([r.e(0),r.e(38)]).then(r.bind(null,839))),t.default.component("tableSelect-valueType",()=>Promise.all([r.e(0),r.e(82)]).then(r.bind(null,840))),t.default.component("stepForm-base",()=>Promise.all([r.e(0),r.e(77)]).then(r.bind(null,841))),t.default.component("stepForm-condition",()=>r.e(160).then(r.bind(null,842))),t.default.component("stepForm-content",()=>Promise.all([r.e(0),r.e(78)]).then(r.bind(null,843))),t.default.component("stepForm-events",()=>r.e(162).then(r.bind(null,844))),t.default.component("stepForm-customValidatorExample",()=>r.e(161).then(r.bind(null,845))),t.default.component("stepForm-field",()=>r.e(163).then(r.bind(null,846))),t.default.component("stepForm-flatten",()=>Promise.all([r.e(0),r.e(79)]).then(r.bind(null,847))),t.default.component("stepForm-navigation",()=>r.e(164).then(r.bind(null,848))),t.default.component("stepForm-validate",()=>r.e(165).then(r.bind(null,849))),t.default.component("tabs-base",()=>r.e(166).then(r.bind(null,850))),t.default.component("commonConfig-renderType-component",()=>r.e(89).then(r.bind(null,851))),t.default.component("commonConfig-renderType-customCom",()=>r.e(94).then(r.bind(null,598))),t.default.component("commonConfig-renderType-formatter",()=>r.e(95).then(r.bind(null,852))),t.default.component("commonConfig-renderType-render",()=>r.e(87).then(r.bind(null,853))),t.default.component("commonConfig-renderType-slot",()=>r.e(96).then(r.bind(null,854))),t.default.component("commonConfig-presetCodeTemplate-base",()=>r.e(92).then(r.bind(null,855))),t.default.component("commonConfig-presetCodeTemplate-customParams",()=>r.e(93).then(r.bind(null,856))),t.default.component("crud-areaSelection-copyPaste",()=>Promise.all([r.e(0),r.e(50)]).then(r.bind(null,857))),t.default.component("crud-areaSelection-comprehensive",()=>Promise.all([r.e(0),r.e(49)]).then(r.bind(null,858))),t.default.component("crud-areaSelection-customConfig",()=>Promise.all([r.e(0),r.e(32)]).then(r.bind(null,859))),t.default.component("crud-areaSelection-smartFill",()=>r.e(97).then(r.bind(null,860))),t.default.component("crud-buttons-common",()=>r.e(107).then(r.bind(null,861))),t.default.component("crud-buttons-fast",()=>r.e(108).then(r.bind(null,862))),t.default.component("crud-contextMenu-base",()=>r.e(109).then(r.bind(null,863))),t.default.component("crud-baseUse-apiUsage",()=>Promise.all([r.e(0),r.e(51)]).then(r.bind(null,864))),t.default.component("crud-baseUse-baseUse",()=>r.e(98).then(r.bind(null,865))),t.default.component("crud-baseUse-columnAction",()=>r.e(99).then(r.bind(null,866))),t.default.component("crud-baseUse-handleRow",()=>r.e(100).then(r.bind(null,867))),t.default.component("crud-baseUse-height",()=>r.e(101).then(r.bind(null,868))),t.default.component("crud-baseUse-index",()=>r.e(102).then(r.bind(null,869))),t.default.component("crud-baseUse-loading",()=>r.e(103).then(r.bind(null,870))),t.default.component("crud-baseUse-pagination",()=>r.e(104).then(r.bind(null,871))),t.default.component("crud-baseUse-title",()=>r.e(105).then(r.bind(null,872))),t.default.component("crud-baseUse-toolbar",()=>r.e(106).then(r.bind(null,873))),t.default.component("crud-crudEvents-api",()=>r.e(111).then(r.bind(null,874))),t.default.component("crud-crudEvents-events",()=>r.e(113).then(r.bind(null,875))),t.default.component("crud-crudEvents-deleteTip",()=>r.e(112).then(r.bind(null,876))),t.default.component("crud-dataSort-base",()=>r.e(114).then(r.bind(null,877))),t.default.component("crud-genDynamicColumns-base",()=>r.e(52).then(r.bind(null,878))),t.default.component("crud-genDynamicColumns-dynamicAndFixed",()=>r.e(53).then(r.bind(null,879))),t.default.component("crud-handleBar-handleRow",()=>r.e(115).then(r.bind(null,880))),t.default.component("crud-handleBar-toolbar",()=>r.e(116).then(r.bind(null,881))),t.default.component("crud-genDynamicColumns-treeDynamic",()=>r.e(54).then(r.bind(null,882))),t.default.component("crud-optimize-delay",()=>r.e(55).then(r.bind(null,883))),t.default.component("crud-optimize-lazyTree",()=>r.e(56).then(r.bind(null,884))),t.default.component("crud-optimize-origin",()=>r.e(57).then(r.bind(null,885))),t.default.component("crud-optimize-virtualized",()=>r.e(58).then(r.bind(null,886))),t.default.component("crud-renderType-1",()=>r.e(117).then(r.bind(null,887))),t.default.component("crud-renderType-2",()=>r.e(118).then(r.bind(null,888))),t.default.component("crud-renderType-3",()=>r.e(119).then(r.bind(null,889))),t.default.component("crud-renderType-5",()=>r.e(88).then(r.bind(null,890))),t.default.component("crud-search-alwaysShow",()=>r.e(59).then(r.bind(null,891))),t.default.component("crud-search-base",()=>r.e(60).then(r.bind(null,892))),t.default.component("crud-search-localSearch",()=>r.e(61).then(r.bind(null,893))),t.default.component("crud-search-special",()=>r.e(62).then(r.bind(null,894))),t.default.component("crud-selection-dataSyncSelected",()=>Promise.all([r.e(0),r.e(36)]).then(r.bind(null,895))),t.default.component("crud-selection-events",()=>r.e(120).then(r.bind(null,896))),t.default.component("crud-selection-singleSelection",()=>r.e(64).then(r.bind(null,897))),t.default.component("crud-selection-pagination",()=>r.e(63).then(r.bind(null,898))),t.default.component("crud-span-base",()=>r.e(65).then(r.bind(null,899))),t.default.component("crud-span-special",()=>r.e(66).then(r.bind(null,900))),t.default.component("crud-summary-base",()=>r.e(67).then(r.bind(null,901))),t.default.component("crud-tableEdit-addDeleteBtn",()=>r.e(121).then(r.bind(null,902))),t.default.component("crud-tableEdit-cellEdit",()=>r.e(122).then(r.bind(null,903))),t.default.component("crud-tableEdit-controlEdit",()=>r.e(123).then(r.bind(null,904))),t.default.component("crud-tableEdit-dialog",()=>r.e(124).then(r.bind(null,905))),t.default.component("crud-tableEdit-free",()=>r.e(125).then(r.bind(null,906))),t.default.component("crud-tableEdit-freeColumn",()=>r.e(126).then(r.bind(null,907))),t.default.component("crud-tableEdit-methods",()=>r.e(127).then(r.bind(null,908))),t.default.component("crud-tableEdit-rowAction",()=>r.e(128).then(r.bind(null,909))),t.default.component("crud-tableEdit-rowBatch",()=>r.e(129).then(r.bind(null,910))),t.default.component("crud-tableEdit-rowClick",()=>r.e(130).then(r.bind(null,911))),t.default.component("crud-tableEdit-treeEdit",()=>r.e(131).then(r.bind(null,912))),t.default.component("crud-validate-base",()=>r.e(132).then(r.bind(null,913))),t.default.component("crud-validate-custom",()=>r.e(133).then(r.bind(null,914))),t.default.component("crud-validate-regulars",()=>r.e(134).then(r.bind(null,915))),t.default.component("crud-validate-relation",()=>r.e(135).then(r.bind(null,916))),t.default.component("crud-validate-tree",()=>r.e(136).then(r.bind(null,917))),t.default.component("crud-validate-validateAll",()=>r.e(68).then(r.bind(null,918))),t.default.component("dialog-baseUse-base",()=>r.e(137).then(r.bind(null,919))),t.default.component("dialog-baseUse-beforeConfirm",()=>r.e(138).then(r.bind(null,920))),t.default.component("dialog-baseUse-control",()=>r.e(139).then(r.bind(null,921))),t.default.component("dialog-baseUse-drawer",()=>r.e(140).then(r.bind(null,922))),t.default.component("dialog-baseUse-footer",()=>r.e(141).then(r.bind(null,923))),t.default.component("dialog-baseUse-insertSlot",()=>r.e(142).then(r.bind(null,924))),t.default.component("form-baseUse-base",()=>r.e(144).then(r.bind(null,925))),t.default.component("form-baseUse-dataFormat",()=>r.e(145).then(r.bind(null,926))),t.default.component("form-baseUse-deep",()=>r.e(146).then(r.bind(null,927))),t.default.component("form-baseUse-gridLayout",()=>r.e(147).then(r.bind(null,928))),t.default.component("form-baseUse-group",()=>r.e(148).then(r.bind(null,929))),t.default.component("form-baseUse-hidden",()=>r.e(149).then(r.bind(null,930))),t.default.component("form-baseUse-tooltip",()=>r.e(151).then(r.bind(null,931))),t.default.component("form-baseUse-label",()=>r.e(150).then(r.bind(null,932))),t.default.component("form-baseUse-validate",()=>r.e(152).then(r.bind(null,933))),t.default.component("form-detail-base",()=>r.e(153).then(r.bind(null,934))),t.default.component("form-detail-border",()=>r.e(154).then(r.bind(null,935))),t.default.component("form-detail-singleDetail",()=>r.e(155).then(r.bind(null,936))),t.default.component("Badge",()=>Promise.all([r.e(0),r.e(13)]).then(r.bind(null,937)));var lr={name:"BackToTop",data:()=>({visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}),mounted(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop(){window.scrollTo(0,0)},throttle(n,e){let r=null,t=Date.now();return function(){const a=Date.now(),o=e-(a-t),i=this,l=arguments;clearTimeout(r),o<=0?(n.apply(i,l),t=Date.now()):r=setTimeout(n,o)}}}},sr=(r(276),Object(qe.a)(lr,(function(){var n=this._self._c;return n("transition",{attrs:{name:"fade"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[n("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[n("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),n("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports);r(277),r(279);const cr={prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"},ur={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},dr={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},pr={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},mr={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var hr={data:()=>({changePage:"",pageSize:10}),props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages(){return Math.ceil(this.total/this.pageSize)},efont:function(){return this.pages>7},indexes:function(){var n=1,e=this.pages,r=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(n=Number(this.currentPage)-3,e=Number(this.currentPage)+3):this.currentPage<=5?(n=1,e=7):(e=this.pages,n=this.pages-6));n<=e;)r.push(n),n++;return r},pagationLocales(){return function(n){const{$lang:e,$recoLocales:{pagation:r}={}}=n;return r||(/^zh\-(CN|SG)$/.test(e)?cr:/^zh\-(HK|MO|TW)$/.test(e)?ur:/^ja\-JP$/.test(e)?pr:/^ko\-KR$/.test(e)?mr:dr)}(this)},showStartFakePageNum:function(){return this.efont&&!this.indexes.includes(1)},showLastFakePageNum:function(){return this.efont&&!this.indexes.includes(this.pages)}},methods:{goPrev(){let n=this.currentPage;this.currentPage>1&&this.emit(--n)},goNext(){let n=this.currentPage;n<this.pages&&this.emit(++n)},jumpPage:function(n){const e=parseInt(n);e<=this.pages&&e>0?this.emit(e):alert(`请输入大于0，并且小于等于${this.pages}的页码！`)},emit(n){this.$emit("getCurrentPage",n)}}},fr=(r(280),Object(qe.a)(hr,(function(){var n=this,e=n._self._c;return e("div",{directives:[{name:"show",rawName:"v-show",value:n.pages>1,expression:"pages > 1"}],staticClass:"pagation"},[e("div",{staticClass:"pagation-list"},[e("span",{directives:[{name:"show",rawName:"v-show",value:n.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:n.goPrev}},[n._v(n._s(n.pagationLocales.prev))]),n._v(" "),n.showStartFakePageNum?e("span",{staticClass:"jump",on:{click:function(e){return n.jumpPage(1)}}},[n._v("1")]):n._e(),n._v(" "),n.showStartFakePageNum&&n.indexes[0]>2?e("span",{staticClass:"ellipsis"},[n._v("...")]):n._e(),n._v(" "),n._l(n.indexes,(function(r){return e("span",{key:r,staticClass:"jump",class:{bgprimary:n.currentPage==r},on:{click:function(e){return n.jumpPage(r)}}},[n._v(n._s(r))])})),n._v(" "),n.showLastFakePageNum&&n.pages-n.indexes.at(-1)>1?e("span",{staticClass:"ellipsis"},[n._v("...")]):n._e(),n._v(" "),n.showLastFakePageNum?e("span",{staticClass:"jump",on:{click:function(e){return n.jumpPage(n.pages)}}},[n._v(n._s(n.pages))]):n._e(),n._v(" "),n.currentPage<n.pages?e("span",{staticClass:"jump",on:{click:n.goNext}},[n._v(n._s(n.pagationLocales.next))]):n._e(),n._v(" "),e("span",{staticClass:"jumppoint"},[n._v(n._s(n.pagationLocales.jump))]),n._v(" "),e("span",{staticClass:"jumpinp"},[e("input",{directives:[{name:"model",rawName:"v-model",value:n.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:n.changePage},on:{input:function(e){e.target.composing||(n.changePage=e.target.value)}}})]),n._v(" "),e("span",{staticClass:"jump gobtn",on:{click:function(e){return n.jumpPage(n.changePage)}}},[n._v(n._s(n.pagationLocales.go))])],2)])}),[],!1,null,"22b6649c",null).exports),gr={name:"Valine",props:{options:{type:Object,default:()=>({})}},mounted:function(){this.initValine()},methods:{initValine(){new(r(281))({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname,...this.options})}},watch:{$route(n,e){n.path!==e.path&&setTimeout(()=>{this.initValine()},300)}}},vr=(r(282),Object(qe.a)(gr,(function(){this._self._c;return this._m(0)}),[function(){var n=this._self._c;return n("div",{staticClass:"valine-wrapper"},[n("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports),br=r(1);function yr(n){return Object(br.a)((function(e,r){void 0===e.inject&&(e.inject={}),Array.isArray(e.inject)||(e.inject[r]=n||r)}))}function xr(n){return"function"!=typeof n||!n.managed&&!n.managedReactive}function wr(n){var e=function(){var r=this,t="function"==typeof n?n.call(this):n;for(var a in(t=Object.create(t||null))[kr]=Object.create(this[kr]||{}),e.managed)t[e.managed[a]]=this[a];var o=function(n){t[e.managedReactive[n]]=i[n],Object.defineProperty(t[kr],e.managedReactive[n],{enumerable:!0,configurable:!0,get:function(){return r[n]}})},i=this;for(var a in e.managedReactive)o(a);return t};return e.managed={},e.managedReactive={},e}var kr="__reactiveInject__";function Cr(n){Array.isArray(n.inject)||(n.inject=n.inject||{},n.inject[kr]={from:kr,default:{}})}var _r="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function Dr(n,e,r){if(_r&&!Array.isArray(n)&&"function"!=typeof n&&!n.hasOwnProperty("type")&&void 0===n.type){var t=Reflect.getMetadata("design:type",e,r);t!==Object&&(n.type=t)}}function Sr(n){return void 0===n&&(n={}),function(e,r){Dr(n,e,r),Object(br.a)((function(e,r){(e.props||(e.props={}))[r]=n}))(e,r)}}function $r(n,e){void 0===e&&(e={});var r=e.deep,t=void 0!==r&&r,a=e.immediate,o=void 0!==a&&a;return Object(br.a)((function(e,r){"object"!=typeof e.watch&&(e.watch=Object.create(null));var a=e.watch;"object"!=typeof a[n]||Array.isArray(a[n])?void 0===a[n]&&(a[n]=[]):a[n]=[a[n]],a[n].push({handler:r,deep:t,immediate:o})}))}var Ar=r(20);const Tr=n=>Object(Ar.stringify)(n),jr=(n,e)=>`${n}${Object(Ar.stringify)(e,{addQueryPrefix:!0})}`,Er=(n,e)=>`${n.replace(/\/$/,"")}/${e.replace(/^\//,"")}`;var zr=r(126),Ir=r.n(zr);const Fr=n=>Ir()(n,"YYYY-MM-DD HH:mm:ss"),Or=n=>(n.split("#")[0]||"").split("?")[0]||"",Pr=n=>Object(Ar.parse)(n,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.28.2 
 * (c) 2022 kazuya kawaguchi
 * Released under the MIT License.
 */;var Mr=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"],Lr=["dateStyle","timeStyle","calendar","localeMatcher","hour12","hourCycle","timeZone","formatMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName"];function Rr(n,e){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+n),e&&console.warn(e.stack))}var Br=Array.isArray;function Nr(n){return null!==n&&"object"==typeof n}function Ur(n){return"string"==typeof n}var qr=Object.prototype.toString;function Vr(n){return"[object Object]"===qr.call(n)}function Hr(n){return null==n}function Wr(n){return"function"==typeof n}function Gr(){for(var n=[],e=arguments.length;e--;)n[e]=arguments[e];var r=null,t=null;return 1===n.length?Nr(n[0])||Br(n[0])?t=n[0]:"string"==typeof n[0]&&(r=n[0]):2===n.length&&("string"==typeof n[0]&&(r=n[0]),(Nr(n[1])||Br(n[1]))&&(t=n[1])),{locale:r,params:t}}function Qr(n){return JSON.parse(JSON.stringify(n))}function Kr(n,e){return!!~n.indexOf(e)}var Yr=Object.prototype.hasOwnProperty;function Jr(n,e){return Yr.call(n,e)}function Zr(n){for(var e=arguments,r=Object(n),t=1;t<arguments.length;t++){var a=e[t];if(null!=a){var o=void 0;for(o in a)Jr(a,o)&&(Nr(a[o])?r[o]=Zr(r[o],a[o]):r[o]=a[o])}}return r}function Xr(n,e){if(n===e)return!0;var r=Nr(n),t=Nr(e);if(!r||!t)return!r&&!t&&String(n)===String(e);try{var a=Br(n),o=Br(e);if(a&&o)return n.length===e.length&&n.every((function(n,r){return Xr(n,e[r])}));if(a||o)return!1;var i=Object.keys(n),l=Object.keys(e);return i.length===l.length&&i.every((function(r){return Xr(n[r],e[r])}))}catch(n){return!1}}function nt(n){return null!=n&&Object.keys(n).forEach((function(e){"string"==typeof n[e]&&(n[e]=n[e].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),n}var et={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(n,e){var r=e.data,t=e.parent,a=e.props,o=e.slots,i=t.$i18n;if(i){var l=a.path,s=a.locale,c=a.places,u=o(),d=i.i(l,s,function(n){var e;for(e in n)if("default"!==e)return!1;return Boolean(e)}(u)||c?function(n,e){var r=e?function(n){0;return Array.isArray(n)?n.reduce(tt,{}):Object.assign({},n)}(e):{};if(!n)return r;var t=(n=n.filter((function(n){return n.tag||""!==n.text.trim()}))).every(at);0;return n.reduce(t?rt:tt,r)}(u.default,c):u),p=a.tag&&!0!==a.tag||!1===a.tag?a.tag:"span";return p?n(p,r,d):d}}};function rt(n,e){return e.data&&e.data.attrs&&e.data.attrs.place&&(n[e.data.attrs.place]=e),n}function tt(n,e,r){return n[r]=e,n}function at(n){return Boolean(n.data&&n.data.attrs&&n.data.attrs.place)}var ot,it={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(n,e){var r=e.props,t=e.parent,a=e.data,o=t.$i18n;if(!o)return null;var i=null,l=null;Ur(r.format)?i=r.format:Nr(r.format)&&(r.format.key&&(i=r.format.key),l=Object.keys(r.format).reduce((function(n,e){var t;return Kr(Mr,e)?Object.assign({},n,((t={})[e]=r.format[e],t)):n}),null));var s=r.locale||o.locale,c=o._ntp(r.value,s,i,l),u=c.map((function(n,e){var r,t=a.scopedSlots&&a.scopedSlots[n.type];return t?t(((r={})[n.type]=n.value,r.index=e,r.parts=c,r)):n.value})),d=r.tag&&!0!==r.tag||!1===r.tag?r.tag:"span";return d?n(d,{attrs:a.attrs,class:a.class,staticClass:a.staticClass},u):u}};function lt(n,e,r){ut(n,r)&&dt(n,e,r)}function st(n,e,r,t){if(ut(n,r)){var a=r.context.$i18n;(function(n,e){var r=e.context;return n._locale===r.$i18n.locale})(n,r)&&Xr(e.value,e.oldValue)&&Xr(n._localeMessage,a.getLocaleMessage(a.locale))||dt(n,e,r)}}function ct(n,e,r,t){if(r.context){var a=r.context.$i18n||{};e.modifiers.preserve||a.preserveDirectiveContent||(n.textContent=""),n._vt=void 0,delete n._vt,n._locale=void 0,delete n._locale,n._localeMessage=void 0,delete n._localeMessage}else Rr("Vue instance does not exists in VNode context")}function ut(n,e){var r=e.context;return r?!!r.$i18n||(Rr("VueI18n instance does not exists in Vue instance"),!1):(Rr("Vue instance does not exists in VNode context"),!1)}function dt(n,e,r){var t,a,o=function(n){var e,r,t,a;Ur(n)?e=n:Vr(n)&&(e=n.path,r=n.locale,t=n.args,a=n.choice);return{path:e,locale:r,args:t,choice:a}}(e.value),i=o.path,l=o.locale,s=o.args,c=o.choice;if(i||l||s)if(i){var u=r.context;n._vt=n.textContent=null!=c?(t=u.$i18n).tc.apply(t,[i,c].concat(pt(l,s))):(a=u.$i18n).t.apply(a,[i].concat(pt(l,s))),n._locale=u.$i18n.locale,n._localeMessage=u.$i18n.getLocaleMessage(u.$i18n.locale)}else Rr("`path` is required in v-t directive");else Rr("value type not supported")}function pt(n,e){var r=[];return n&&r.push(n),e&&(Array.isArray(e)||Vr(e))&&r.push(e),r}function mt(n,e){void 0===e&&(e={bridge:!1}),mt.installed=!0;var r;(ot=n).version&&Number(ot.version.split(".")[0]);(r=ot).prototype.hasOwnProperty("$i18n")||Object.defineProperty(r.prototype,"$i18n",{get:function(){return this._i18n}}),r.prototype.$t=function(n){for(var e=[],r=arguments.length-1;r-- >0;)e[r]=arguments[r+1];var t=this.$i18n;return t._t.apply(t,[n,t.locale,t._getMessages(),this].concat(e))},r.prototype.$tc=function(n,e){for(var r=[],t=arguments.length-2;t-- >0;)r[t]=arguments[t+2];var a=this.$i18n;return a._tc.apply(a,[n,a.locale,a._getMessages(),this,e].concat(r))},r.prototype.$te=function(n,e){var r=this.$i18n;return r._te(n,r.locale,r._getMessages(),e)},r.prototype.$d=function(n){for(var e,r=[],t=arguments.length-1;t-- >0;)r[t]=arguments[t+1];return(e=this.$i18n).d.apply(e,[n].concat(r))},r.prototype.$n=function(n){for(var e,r=[],t=arguments.length-1;t-- >0;)r[t]=arguments[t+1];return(e=this.$i18n).n.apply(e,[n].concat(r))},ot.mixin(function(n){function e(){this!==this.$root&&this.$options.__INTLIFY_META__&&this.$el&&this.$el.setAttribute("data-intlify",this.$options.__INTLIFY_META__)}return void 0===n&&(n=!1),n?{mounted:e}:{beforeCreate:function(){var n=this.$options;if(n.i18n=n.i18n||(n.__i18nBridge||n.__i18n?{}:null),n.i18n)if(n.i18n instanceof Tt){if(n.__i18nBridge||n.__i18n)try{var e=n.i18n&&n.i18n.messages?n.i18n.messages:{};(n.__i18nBridge||n.__i18n).forEach((function(n){e=Zr(e,JSON.parse(n))})),Object.keys(e).forEach((function(r){n.i18n.mergeLocaleMessage(r,e[r])}))}catch(n){0}this._i18n=n.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(Vr(n.i18n)){var r=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Tt?this.$root.$i18n:null;if(r&&(n.i18n.root=this.$root,n.i18n.formatter=r.formatter,n.i18n.fallbackLocale=r.fallbackLocale,n.i18n.formatFallbackMessages=r.formatFallbackMessages,n.i18n.silentTranslationWarn=r.silentTranslationWarn,n.i18n.silentFallbackWarn=r.silentFallbackWarn,n.i18n.pluralizationRules=r.pluralizationRules,n.i18n.preserveDirectiveContent=r.preserveDirectiveContent),n.__i18nBridge||n.__i18n)try{var t=n.i18n&&n.i18n.messages?n.i18n.messages:{};(n.__i18nBridge||n.__i18n).forEach((function(n){t=Zr(t,JSON.parse(n))})),n.i18n.messages=t}catch(n){0}var a=n.i18n.sharedMessages;a&&Vr(a)&&(n.i18n.messages=Zr(n.i18n.messages,a)),this._i18n=new Tt(n.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===n.i18n.sync||n.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),r&&r.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Tt?this._i18n=this.$root.$i18n:n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof Tt&&(this._i18n=n.parent.$i18n)},beforeMount:function(){var n=this.$options;n.i18n=n.i18n||(n.__i18nBridge||n.__i18n?{}:null),n.i18n?(n.i18n instanceof Tt||Vr(n.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Tt||n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof Tt)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},mounted:e,beforeDestroy:function(){if(this._i18n){var n=this;this.$nextTick((function(){n._subscribing&&(n._i18n.unsubscribeDataChanging(n),delete n._subscribing),n._i18nWatcher&&(n._i18nWatcher(),n._i18n.destroyVM(),delete n._i18nWatcher),n._localeWatcher&&(n._localeWatcher(),delete n._localeWatcher)}))}}}}(e.bridge)),ot.directive("t",{bind:lt,update:st,unbind:ct}),ot.component(et.name,et),ot.component(it.name,it),ot.config.optionMergeStrategies.i18n=function(n,e){return void 0===e?n:e}}var ht=function(){this._caches=Object.create(null)};ht.prototype.interpolate=function(n,e){if(!e)return[n];var r=this._caches[n];return r||(r=function(n){var e=[],r=0,t="";for(;r<n.length;){var a=n[r++];if("{"===a){t&&e.push({type:"text",value:t}),t="";var o="";for(a=n[r++];void 0!==a&&"}"!==a;)o+=a,a=n[r++];var i="}"===a,l=ft.test(o)?"list":i&&gt.test(o)?"named":"unknown";e.push({value:o,type:l})}else"%"===a?"{"!==n[r]&&(t+=a):t+=a}return t&&e.push({type:"text",value:t}),e}(n),this._caches[n]=r),function(n,e){var r=[],t=0,a=Array.isArray(e)?"list":Nr(e)?"named":"unknown";if("unknown"===a)return r;for(;t<n.length;){var o=n[t];switch(o.type){case"text":r.push(o.value);break;case"list":r.push(e[parseInt(o.value,10)]);break;case"named":"named"===a&&r.push(e[o.value]);break;case"unknown":0}t++}return r}(r,e)};var ft=/^(?:\d)+/,gt=/^(?:\w)+/;var vt=[];vt[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},vt[1]={ws:[1],".":[2],"[":[4],eof:[7]},vt[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},vt[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},vt[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},vt[5]={"'":[4,0],eof:8,else:[5,0]},vt[6]={'"':[4,0],eof:8,else:[6,0]};var bt=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function yt(n){if(null==n)return"eof";switch(n.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return n;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function xt(n){var e,r,t,a=n.trim();return("0"!==n.charAt(0)||!isNaN(n))&&(t=a,bt.test(t)?(r=(e=a).charCodeAt(0))!==e.charCodeAt(e.length-1)||34!==r&&39!==r?e:e.slice(1,-1):"*"+a)}var wt=function(){this._cache=Object.create(null)};wt.prototype.parsePath=function(n){var e=this._cache[n];return e||(e=function(n){var e,r,t,a,o,i,l,s=[],c=-1,u=0,d=0,p=[];function m(){var e=n[c+1];if(5===u&&"'"===e||6===u&&'"'===e)return c++,t="\\"+e,p[0](),!0}for(p[1]=function(){void 0!==r&&(s.push(r),r=void 0)},p[0]=function(){void 0===r?r=t:r+=t},p[2]=function(){p[0](),d++},p[3]=function(){if(d>0)d--,u=4,p[0]();else{if(d=0,void 0===r)return!1;if(!1===(r=xt(r)))return!1;p[1]()}};null!==u;)if(c++,"\\"!==(e=n[c])||!m()){if(a=yt(e),8===(o=(l=vt[u])[a]||l.else||8))return;if(u=o[0],(i=p[o[1]])&&(t=void 0===(t=o[2])?e:t,!1===i()))return;if(7===u)return s}}(n))&&(this._cache[n]=e),e||[]},wt.prototype.getPathValue=function(n,e){if(!Nr(n))return null;var r=this.parsePath(e);if(0===r.length)return null;for(var t=r.length,a=n,o=0;o<t;){var i=a[r[o]];if(null==i)return null;a=i,o++}return a};var kt,Ct=/<\/?[\w\s="/.':;#-\/]+>/,_t=/(?:@(?:\.[a-zA-Z]+)?:(?:[\w\-_|./]+|\([\w\-_:|./]+\)))/g,Dt=/^@(?:\.([a-zA-Z]+))?:/,St=/[()]/g,$t={upper:function(n){return n.toLocaleUpperCase()},lower:function(n){return n.toLocaleLowerCase()},capitalize:function(n){return""+n.charAt(0).toLocaleUpperCase()+n.substr(1)}},At=new ht,Tt=function(n){var e=this;void 0===n&&(n={}),!ot&&"undefined"!=typeof window&&window.Vue&&mt(window.Vue);var r=n.locale||"en-US",t=!1!==n.fallbackLocale&&(n.fallbackLocale||"en-US"),a=n.messages||{},o=n.dateTimeFormats||n.datetimeFormats||{},i=n.numberFormats||{};this._vm=null,this._formatter=n.formatter||At,this._modifiers=n.modifiers||{},this._missing=n.missing||null,this._root=n.root||null,this._sync=void 0===n.sync||!!n.sync,this._fallbackRoot=void 0===n.fallbackRoot||!!n.fallbackRoot,this._fallbackRootWithEmptyString=void 0===n.fallbackRootWithEmptyString||!!n.fallbackRootWithEmptyString,this._formatFallbackMessages=void 0!==n.formatFallbackMessages&&!!n.formatFallbackMessages,this._silentTranslationWarn=void 0!==n.silentTranslationWarn&&n.silentTranslationWarn,this._silentFallbackWarn=void 0!==n.silentFallbackWarn&&!!n.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new wt,this._dataListeners=new Set,this._componentInstanceCreatedListener=n.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==n.preserveDirectiveContent&&!!n.preserveDirectiveContent,this.pluralizationRules=n.pluralizationRules||{},this._warnHtmlInMessage=n.warnHtmlInMessage||"off",this._postTranslation=n.postTranslation||null,this._escapeParameterHtml=n.escapeParameterHtml||!1,"__VUE_I18N_BRIDGE__"in n&&(this.__VUE_I18N_BRIDGE__=n.__VUE_I18N_BRIDGE__),this.getChoiceIndex=function(n,r){var t=Object.getPrototypeOf(e);if(t&&t.getChoiceIndex)return t.getChoiceIndex.call(e,n,r);var a,o;return e.locale in e.pluralizationRules?e.pluralizationRules[e.locale].apply(e,[n,r]):(a=n,o=r,a=Math.abs(a),2===o?a?a>1?1:0:1:a?Math.min(a,2):0)},this._exist=function(n,r){return!(!n||!r)&&(!Hr(e._path.getPathValue(n,r))||!!n[r])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(a).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,a[n])})),this._initVM({locale:r,fallbackLocale:t,messages:a,dateTimeFormats:o,numberFormats:i})},jt={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0},sync:{configurable:!0}};Tt.prototype._checkLocaleMessage=function(n,e,r){var t=function(n,e,r,a){if(Vr(r))Object.keys(r).forEach((function(o){var i=r[o];Vr(i)?(a.push(o),a.push("."),t(n,e,i,a),a.pop(),a.pop()):(a.push(o),t(n,e,i,a),a.pop())}));else if(Br(r))r.forEach((function(r,o){Vr(r)?(a.push("["+o+"]"),a.push("."),t(n,e,r,a),a.pop(),a.pop()):(a.push("["+o+"]"),t(n,e,r,a),a.pop())}));else if(Ur(r)){if(Ct.test(r)){var o="Detected HTML in message '"+r+"' of keypath '"+a.join("")+"' at '"+e+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===n?Rr(o):"error"===n&&function(n,e){"undefined"!=typeof console&&(console.error("[vue-i18n] "+n),e&&console.error(e.stack))}(o)}}};t(e,n,r,[])},Tt.prototype._initVM=function(n){var e=ot.config.silent;ot.config.silent=!0,this._vm=new ot({data:n,__VUE18N__INSTANCE__:!0}),ot.config.silent=e},Tt.prototype.destroyVM=function(){this._vm.$destroy()},Tt.prototype.subscribeDataChanging=function(n){this._dataListeners.add(n)},Tt.prototype.unsubscribeDataChanging=function(n){!function(n,e){if(n.delete(e));}(this._dataListeners,n)},Tt.prototype.watchI18nData=function(){var n=this;return this._vm.$watch("$data",(function(){for(var e,r,t=(e=n._dataListeners,r=[],e.forEach((function(n){return r.push(n)})),r),a=t.length;a--;)ot.nextTick((function(){t[a]&&t[a].$forceUpdate()}))}),{deep:!0})},Tt.prototype.watchLocale=function(n){if(n){if(!this.__VUE_I18N_BRIDGE__)return null;var e=this,r=this._vm;return this.vm.$watch("locale",(function(t){r.$set(r,"locale",t),e.__VUE_I18N_BRIDGE__&&n&&(n.locale.value=t),r.$forceUpdate()}),{immediate:!0})}if(!this._sync||!this._root)return null;var t=this._vm;return this._root.$i18n.vm.$watch("locale",(function(n){t.$set(t,"locale",n),t.$forceUpdate()}),{immediate:!0})},Tt.prototype.onComponentInstanceCreated=function(n){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(n,this)},jt.vm.get=function(){return this._vm},jt.messages.get=function(){return Qr(this._getMessages())},jt.dateTimeFormats.get=function(){return Qr(this._getDateTimeFormats())},jt.numberFormats.get=function(){return Qr(this._getNumberFormats())},jt.availableLocales.get=function(){return Object.keys(this.messages).sort()},jt.locale.get=function(){return this._vm.locale},jt.locale.set=function(n){this._vm.$set(this._vm,"locale",n)},jt.fallbackLocale.get=function(){return this._vm.fallbackLocale},jt.fallbackLocale.set=function(n){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",n)},jt.formatFallbackMessages.get=function(){return this._formatFallbackMessages},jt.formatFallbackMessages.set=function(n){this._formatFallbackMessages=n},jt.missing.get=function(){return this._missing},jt.missing.set=function(n){this._missing=n},jt.formatter.get=function(){return this._formatter},jt.formatter.set=function(n){this._formatter=n},jt.silentTranslationWarn.get=function(){return this._silentTranslationWarn},jt.silentTranslationWarn.set=function(n){this._silentTranslationWarn=n},jt.silentFallbackWarn.get=function(){return this._silentFallbackWarn},jt.silentFallbackWarn.set=function(n){this._silentFallbackWarn=n},jt.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},jt.preserveDirectiveContent.set=function(n){this._preserveDirectiveContent=n},jt.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},jt.warnHtmlInMessage.set=function(n){var e=this,r=this._warnHtmlInMessage;if(this._warnHtmlInMessage=n,r!==n&&("warn"===n||"error"===n)){var t=this._getMessages();Object.keys(t).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,t[n])}))}},jt.postTranslation.get=function(){return this._postTranslation},jt.postTranslation.set=function(n){this._postTranslation=n},jt.sync.get=function(){return this._sync},jt.sync.set=function(n){this._sync=n},Tt.prototype._getMessages=function(){return this._vm.messages},Tt.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},Tt.prototype._getNumberFormats=function(){return this._vm.numberFormats},Tt.prototype._warnDefault=function(n,e,r,t,a,o){if(!Hr(r))return r;if(this._missing){var i=this._missing.apply(null,[n,e,t,a]);if(Ur(i))return i}else 0;if(this._formatFallbackMessages){var l=Gr.apply(void 0,a);return this._render(e,o,l.params,e)}return e},Tt.prototype._isFallbackRoot=function(n){return(this._fallbackRootWithEmptyString?!n:Hr(n))&&!Hr(this._root)&&this._fallbackRoot},Tt.prototype._isSilentFallbackWarn=function(n){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(n):this._silentFallbackWarn},Tt.prototype._isSilentFallback=function(n,e){return this._isSilentFallbackWarn(e)&&(this._isFallbackRoot()||n!==this.fallbackLocale)},Tt.prototype._isSilentTranslationWarn=function(n){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(n):this._silentTranslationWarn},Tt.prototype._interpolate=function(n,e,r,t,a,o,i){if(!e)return null;var l,s=this._path.getPathValue(e,r);if(Br(s)||Vr(s))return s;if(Hr(s)){if(!Vr(e))return null;if(!Ur(l=e[r])&&!Wr(l))return null}else{if(!Ur(s)&&!Wr(s))return null;l=s}return Ur(l)&&(l.indexOf("@:")>=0||l.indexOf("@.")>=0)&&(l=this._link(n,e,l,t,"raw",o,i)),this._render(l,a,o,r)},Tt.prototype._link=function(n,e,r,t,a,o,i){var l=r,s=l.match(_t);for(var c in s)if(s.hasOwnProperty(c)){var u=s[c],d=u.match(Dt),p=d[0],m=d[1],h=u.replace(p,"").replace(St,"");if(Kr(i,h))return l;i.push(h);var f=this._interpolate(n,e,h,t,"raw"===a?"string":a,"raw"===a?void 0:o,i);if(this._isFallbackRoot(f)){if(!this._root)throw Error("unexpected error");var g=this._root.$i18n;f=g._translate(g._getMessages(),g.locale,g.fallbackLocale,h,t,a,o)}f=this._warnDefault(n,h,f,t,Br(o)?o:[o],a),this._modifiers.hasOwnProperty(m)?f=this._modifiers[m](f):$t.hasOwnProperty(m)&&(f=$t[m](f)),i.pop(),l=f?l.replace(u,f):l}return l},Tt.prototype._createMessageContext=function(n,e,r,t){var a=this,o=Br(n)?n:[],i=Nr(n)?n:{},l=this._getMessages(),s=this.locale;return{list:function(n){return o[n]},named:function(n){return i[n]},values:n,formatter:e,path:r,messages:l,locale:s,linked:function(n){return a._interpolate(s,l[s]||{},n,null,t,void 0,[n])}}},Tt.prototype._render=function(n,e,r,t){if(Wr(n))return n(this._createMessageContext(r,this._formatter||At,t,e));var a=this._formatter.interpolate(n,r,t);return a||(a=At.interpolate(n,r,t)),"string"!==e||Ur(a)?a:a.join("")},Tt.prototype._appendItemToChain=function(n,e,r){var t=!1;return Kr(n,e)||(t=!0,e&&(t="!"!==e[e.length-1],e=e.replace(/!/g,""),n.push(e),r&&r[e]&&(t=r[e]))),t},Tt.prototype._appendLocaleToChain=function(n,e,r){var t,a=e.split("-");do{var o=a.join("-");t=this._appendItemToChain(n,o,r),a.splice(-1,1)}while(a.length&&!0===t);return t},Tt.prototype._appendBlockToChain=function(n,e,r){for(var t=!0,a=0;a<e.length&&"boolean"==typeof t;a++){var o=e[a];Ur(o)&&(t=this._appendLocaleToChain(n,o,r))}return t},Tt.prototype._getLocaleChain=function(n,e){if(""===n)return[];this._localeChainCache||(this._localeChainCache={});var r=this._localeChainCache[n];if(!r){e||(e=this.fallbackLocale),r=[];for(var t,a=[n];Br(a);)a=this._appendBlockToChain(r,a,e);(a=Ur(t=Br(e)?e:Nr(e)?e.default?e.default:null:e)?[t]:t)&&this._appendBlockToChain(r,a,null),this._localeChainCache[n]=r}return r},Tt.prototype._translate=function(n,e,r,t,a,o,i){for(var l,s=this._getLocaleChain(e,r),c=0;c<s.length;c++){var u=s[c];if(!Hr(l=this._interpolate(u,n[u],t,a,o,i,[t])))return l}return null},Tt.prototype._t=function(n,e,r,t){for(var a,o=[],i=arguments.length-4;i-- >0;)o[i]=arguments[i+4];if(!n)return"";var l=Gr.apply(void 0,o);this._escapeParameterHtml&&(l.params=nt(l.params));var s=l.locale||e,c=this._translate(r,s,this.fallbackLocale,n,t,"string",l.params);if(this._isFallbackRoot(c)){if(!this._root)throw Error("unexpected error");return(a=this._root).$t.apply(a,[n].concat(o))}return c=this._warnDefault(s,n,c,t,o,"string"),this._postTranslation&&null!=c&&(c=this._postTranslation(c,n)),c},Tt.prototype.t=function(n){for(var e,r=[],t=arguments.length-1;t-- >0;)r[t]=arguments[t+1];return(e=this)._t.apply(e,[n,this.locale,this._getMessages(),null].concat(r))},Tt.prototype._i=function(n,e,r,t,a){var o=this._translate(r,e,this.fallbackLocale,n,t,"raw",a);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(n,e,a)}return this._warnDefault(e,n,o,t,[a],"raw")},Tt.prototype.i=function(n,e,r){return n?(Ur(e)||(e=this.locale),this._i(n,e,this._getMessages(),null,r)):""},Tt.prototype._tc=function(n,e,r,t,a){for(var o,i=[],l=arguments.length-5;l-- >0;)i[l]=arguments[l+5];if(!n)return"";void 0===a&&(a=1);var s={count:a,n:a},c=Gr.apply(void 0,i);return c.params=Object.assign(s,c.params),i=null===c.locale?[c.params]:[c.locale,c.params],this.fetchChoice((o=this)._t.apply(o,[n,e,r,t].concat(i)),a)},Tt.prototype.fetchChoice=function(n,e){if(!n||!Ur(n))return null;var r=n.split("|");return r[e=this.getChoiceIndex(e,r.length)]?r[e].trim():n},Tt.prototype.tc=function(n,e){for(var r,t=[],a=arguments.length-2;a-- >0;)t[a]=arguments[a+2];return(r=this)._tc.apply(r,[n,this.locale,this._getMessages(),null,e].concat(t))},Tt.prototype._te=function(n,e,r){for(var t=[],a=arguments.length-3;a-- >0;)t[a]=arguments[a+3];var o=Gr.apply(void 0,t).locale||e;return this._exist(r[o],n)},Tt.prototype.te=function(n,e){return this._te(n,this.locale,this._getMessages(),e)},Tt.prototype.getLocaleMessage=function(n){return Qr(this._vm.messages[n]||{})},Tt.prototype.setLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,e)},Tt.prototype.mergeLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,Zr(void 0!==this._vm.messages[n]&&Object.keys(this._vm.messages[n]).length?Object.assign({},this._vm.messages[n]):{},e))},Tt.prototype.getDateTimeFormat=function(n){return Qr(this._vm.dateTimeFormats[n]||{})},Tt.prototype.setDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,e),this._clearDateTimeFormat(n,e)},Tt.prototype.mergeDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,Zr(this._vm.dateTimeFormats[n]||{},e)),this._clearDateTimeFormat(n,e)},Tt.prototype._clearDateTimeFormat=function(n,e){for(var r in e){var t=n+"__"+r;this._dateTimeFormatters.hasOwnProperty(t)&&delete this._dateTimeFormatters[t]}},Tt.prototype._localizeDateTime=function(n,e,r,t,a,o){for(var i=e,l=t[i],s=this._getLocaleChain(e,r),c=0;c<s.length;c++){var u=s[c];if(i=u,!Hr(l=t[u])&&!Hr(l[a]))break}if(Hr(l)||Hr(l[a]))return null;var d,p=l[a];if(o)d=new Intl.DateTimeFormat(i,Object.assign({},p,o));else{var m=i+"__"+a;(d=this._dateTimeFormatters[m])||(d=this._dateTimeFormatters[m]=new Intl.DateTimeFormat(i,p))}return d.format(n)},Tt.prototype._d=function(n,e,r,t){if(!r)return(t?new Intl.DateTimeFormat(e,t):new Intl.DateTimeFormat(e)).format(n);var a=this._localizeDateTime(n,e,this.fallbackLocale,this._getDateTimeFormats(),r,t);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(n,r,e)}return a||""},Tt.prototype.d=function(n){for(var e=[],r=arguments.length-1;r-- >0;)e[r]=arguments[r+1];var t=this.locale,a=null,o=null;return 1===e.length?(Ur(e[0])?a=e[0]:Nr(e[0])&&(e[0].locale&&(t=e[0].locale),e[0].key&&(a=e[0].key)),o=Object.keys(e[0]).reduce((function(n,r){var t;return Kr(Lr,r)?Object.assign({},n,((t={})[r]=e[0][r],t)):n}),null)):2===e.length&&(Ur(e[0])&&(a=e[0]),Ur(e[1])&&(t=e[1])),this._d(n,t,a,o)},Tt.prototype.getNumberFormat=function(n){return Qr(this._vm.numberFormats[n]||{})},Tt.prototype.setNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,e),this._clearNumberFormat(n,e)},Tt.prototype.mergeNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,Zr(this._vm.numberFormats[n]||{},e)),this._clearNumberFormat(n,e)},Tt.prototype._clearNumberFormat=function(n,e){for(var r in e){var t=n+"__"+r;this._numberFormatters.hasOwnProperty(t)&&delete this._numberFormatters[t]}},Tt.prototype._getNumberFormatter=function(n,e,r,t,a,o){for(var i=e,l=t[i],s=this._getLocaleChain(e,r),c=0;c<s.length;c++){var u=s[c];if(i=u,!Hr(l=t[u])&&!Hr(l[a]))break}if(Hr(l)||Hr(l[a]))return null;var d,p=l[a];if(o)d=new Intl.NumberFormat(i,Object.assign({},p,o));else{var m=i+"__"+a;(d=this._numberFormatters[m])||(d=this._numberFormatters[m]=new Intl.NumberFormat(i,p))}return d},Tt.prototype._n=function(n,e,r,t){if(!Tt.availabilities.numberFormat)return"";if(!r)return(t?new Intl.NumberFormat(e,t):new Intl.NumberFormat(e)).format(n);var a=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),r,t),o=a&&a.format(n);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(n,Object.assign({},{key:r,locale:e},t))}return o||""},Tt.prototype.n=function(n){for(var e=[],r=arguments.length-1;r-- >0;)e[r]=arguments[r+1];var t=this.locale,a=null,o=null;return 1===e.length?Ur(e[0])?a=e[0]:Nr(e[0])&&(e[0].locale&&(t=e[0].locale),e[0].key&&(a=e[0].key),o=Object.keys(e[0]).reduce((function(n,r){var t;return Kr(Mr,r)?Object.assign({},n,((t={})[r]=e[0][r],t)):n}),null)):2===e.length&&(Ur(e[0])&&(a=e[0]),Ur(e[1])&&(t=e[1])),this._n(n,t,a,o)},Tt.prototype._ntp=function(n,e,r,t){if(!Tt.availabilities.numberFormat)return[];if(!r)return(t?new Intl.NumberFormat(e,t):new Intl.NumberFormat(e)).formatToParts(n);var a=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),r,t),o=a&&a.formatToParts(n);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(n,e,r,t)}return o||[]},Object.defineProperties(Tt.prototype,jt),Object.defineProperty(Tt,"availabilities",{get:function(){if(!kt){var n="undefined"!=typeof Intl;kt={dateTimeFormat:n&&void 0!==Intl.DateTimeFormat,numberFormat:n&&void 0!==Intl.NumberFormat}}return kt}}),Tt.install=mt,Tt.version="8.28.2";var Et=Tt;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.8
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function zt(n,e,r,t){var a,o=arguments.length,i=o<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,r):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,r,t);else for(var l=n.length-1;l>=0;l--)(a=n[l])&&(i=(o<3?a(i):o>3?a(e,r,i):a(e,r))||i);return o>3&&i&&Object.defineProperty(e,r,i),i}var It=t.default.extend({name:"Iconfont"});function Ft(n,e,r,t,a,o,i,l,s,c){"boolean"!=typeof i&&(s=l,l=i,i=!1);const u="function"==typeof r?r.options:r;let d;if(n&&n.render&&(u.render=n.render,u.staticRenderFns=n.staticRenderFns,u._compiled=!0,a&&(u.functional=!0)),t&&(u._scopeId=t),o?(d=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),e&&e.call(this,s(n)),n&&n._registeredComponents&&n._registeredComponents.add(o)},u._ssrRegister=d):e&&(d=i?function(n){e.call(this,c(n,this.$root.$options.shadowRoot))}:function(n){e.call(this,l(n))}),d)if(u.functional){const n=u.render;u.render=function(e,r){return d.call(r),n(e,r)}}else{const n=u.beforeCreate;u.beforeCreate=n?[].concat(n,d):[d]}return r}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Ot=Ft({render:function(n,e){var r=e._c;return r("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[r("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),e._v(" "),r("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),e._v(" "),r("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[r("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),e._v(" "),r("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),e._v(" "),r("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,It,void 0,!0,void 0,!1,void 0,void 0,void 0);const Pt=Ft({},void 0,t.default.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(n,{props:e,children:r})=>n(e.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:e.tag}},r)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const Mt=Ft({},void 0,t.default.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(n,{props:e,data:r})=>n("svg",Object.assign(Object.assign({},r),{class:["vssue-icon","vssue-icon-"+e.name],attrs:{"aria-hidden":"true"}}),[n("title",e.title),n("use",{attrs:{"xlink:href":"#vssue-icon-"+e.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Lt=class extends t.default{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return Fr(this.comment.createdAt)}get updatedAt(){return Fr(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:n}){try{if(this.creatingReactions.includes(n))return;this.creatingReactions.push(n);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:n})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(n)})));const e=await this.vssue.getCommentReactions({commentId:this.comment.id});e&&(this.comment.reactions=e)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(e=>e===n),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const n=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});n&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1,n)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};zt([Sr({type:Object,required:!0})],Lt.prototype,"comment",void 0),zt([yr()],Lt.prototype,"vssue",void 0),Lt=zt([Object(br.b)({components:{VssueIcon:Mt}})],Lt);const Rt=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":n.editMode,"vssue-comment-disabled":n.isDeletingComment||n.isPutingComment}},[r("div",{staticClass:"vssue-comment-avatar"},[r("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:n.author.avatar,alt:n.author.username}})])]),n._v(" "),r("div",{staticClass:"vssue-comment-body"},[n._t("body",[r("div",{staticClass:"vssue-comment-header"},[r("span",{staticClass:"vssue-comment-author"},[r("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n            "+n._s(n.author.username)+"\n          ")])]),n._v(" "),r("span",{staticClass:"vssue-comment-created-at"},[n._v("\n          "+n._s(n.createdAt)+"\n        ")])]),n._v(" "),r("div",{staticClass:"vssue-comment-main"},[n.editMode?r("textarea",{directives:[{name:"model",rawName:"v-model",value:n.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:n.editInputRows},domProps:{value:n.editContent},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.putComment():null},input:function(e){e.target.composing||(n.editContent=e.target.value)}}}):r("article",{staticClass:"markdown-body",domProps:{innerHTML:n._s(n.content)}})]),n._v(" "),r("div",{staticClass:"vssue-comment-footer"},[n.editMode?r("span",{staticClass:"vssue-comment-hint"},[n._v("\n          "+n._s(n.vssue.$t("editMode"))+"\n        ")]):n._e(),n._v(" "),n.showReactions?r("span",{staticClass:"vssue-comment-reactions"},n._l(n.reactionKeys,(function(e){return r("span",{key:e,staticClass:"vssue-comment-reaction",attrs:{title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)},on:{click:function(r){return n.postReaction({reaction:e})}}},[r("VssueIcon",{attrs:{name:n.creatingReactions.includes(e)?"loading":e,title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)}}),n._v(" "),r("span",{staticClass:"vssue-comment-reaction-number"},[n._v("\n              "+n._s(n.comment.reactions[e])+"\n            ")])],1)})),0):n._e(),n._v(" "),r("span",{staticClass:"vssue-comment-operations"},[n.comment.author.username===n.currentUser&&n.editMode?r("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":n.isPutingComment},attrs:{title:n.vssue.$t(n.isPutingComment?"loading":"submit")},on:{click:function(e){return n.putComment()}}},[r("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:n.vssue.$t("loading")}}),n._v("\n\n            "+n._s(n.vssue.$t("submit"))+"\n          ")],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser&&n.editMode?r("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:n.vssue.$t("cancel")},on:{click:function(e){return n.resetEdit()}}},[n._v("\n            "+n._s(n.vssue.$t("cancel"))+"\n          ")]):n._e(),n._v(" "),n.comment.author.username===n.currentUser?r("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.enterEdit()}}},[r("VssueIcon",{attrs:{name:"edit",title:n.vssue.$t("edit")}})],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser||n.vssue.isAdmin?r("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.deleteComment()}}},[r("VssueIcon",{attrs:{name:n.isDeletingComment?"loading":"delete",title:n.vssue.$t(n.isDeletingComment?"loading":"delete")}})],1):n._e(),n._v(" "),r("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.vssue.$emit("reply-comment",n.comment)}}},[r("VssueIcon",{attrs:{name:"reply",title:n.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Lt,void 0,!1,void 0,!1,void 0,void 0,void 0);let Bt=class extends t.default{get disabled(){return this.vssue.isPending}get pageCount(){const n=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return n>1?n:1}get perPageOptions(){const n=[5,10,20,50];return!n.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&n.push(this.vssue.options.perPage),n.sort((n,e)=>n-e)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(n){n>0&&n<=this.pageCount&&(this.vssue.query.page=n)}get perPage(){return this.vssue.query.perPage}set perPage(n){this.perPageOptions.includes(n)&&(this.vssue.query.perPage=n)}};zt([yr()],Bt.prototype,"vssue",void 0),Bt=zt([Object(br.b)({components:{VssueIcon:Mt}})],Bt);const Nt=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"vssue-pagination"},[r("div",{staticClass:"vssue-pagination-per-page"},[r("label",[r("select",{directives:[{name:"model",rawName:"v-model",value:n.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var r=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.perPage=e.target.multiple?r:r[0]}}},n._l(n.perPageOptions,(function(e){return r("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),r("span",[n._v("\n        "+n._s(n.vssue.$t("perPage"))+"\n      ")])]),n._v(" "),n.vssue.API.platform.meta.sortable?r("span",{class:{"vssue-pagination-link":!0,disabled:n.disabled},attrs:{title:n.vssue.$t("sort")},on:{click:function(e){n.vssue.query.sort="asc"===n.vssue.query.sort?"desc":"asc"}}},[n._v("\n      "+n._s("asc"===n.vssue.query.sort?"↑":"↓")+"\n    ")]):n._e()]),n._v(" "),r("div",{staticClass:"vssue-pagination-page"},[r("span",{class:{"vssue-pagination-link":!0,disabled:1===n.page||n.disabled},attrs:{title:n.vssue.$t("prev")},domProps:{textContent:n._s("<")},on:{click:function(e){n.page-=1}}}),n._v(" "),r("label",[r("span",[n._v("\n        "+n._s(n.vssue.$t("page"))+"\n      ")]),n._v(" "),r("select",{directives:[{name:"show",rawName:"v-show",value:n.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:n.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var r=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.page=e.target.multiple?r:r[0]}}},n._l(n.pageCount,(function(e){return r("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),r("span",{directives:[{name:"show",rawName:"v-show",value:n.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:n._s(n.page)}}),n._v(" "),r("span",{domProps:{textContent:n._s(" / "+n.pageCount+" ")}})]),n._v(" "),r("span",{class:{"vssue-pagination-link":!0,disabled:n.page===n.pageCount||n.disabled},attrs:{title:n.vssue.$t("next")},domProps:{textContent:n._s(">")},on:{click:function(e){n.page+=1}}})])])},staticRenderFns:[]},void 0,Bt,void 0,!1,void 0,!1,void 0,void 0,void 0);let Ut=class extends t.default{};zt([yr()],Ut.prototype,"vssue",void 0),Ut=zt([Object(br.b)({components:{TransitionFade:Pt,VssueComment:Rt,VssuePagination:Nt}})],Ut);const qt=Ft({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue-comments"},[e("VssuePagination"),this._v(" "),e("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(n){return e("VssueComment",{key:n.id,attrs:{comment:n}})})),1),this._v(" "),e("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Ut,void 0,!1,void 0,!1,void 0,void 0,void 0);const Vt=Ft({},void 0,t.default.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(n,{props:e,data:r,children:t})=>n("button",Object.assign(Object.assign({},r),{class:["vssue-button","vssue-button-"+e.type]}),t)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Ht=class extends t.default{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",n=>{const e=n.contentRaw.replace(/\n/g,"\n> "),r=`@${n.author.username}\n\n> ${e}\n\n`;this.content=this.content.concat(r),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};zt([yr()],Ht.prototype,"vssue",void 0),Ht=zt([Object(br.b)({components:{VssueButton:Vt,VssueIcon:Mt}})],Ht);const Wt=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"vssue-new-comment"},[r("div",{staticClass:"vssue-comment-avatar"},[n.user?r("a",{attrs:{href:n.user.homepage,title:n.user.username,target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:n.user.avatar,alt:n.user.username}})]):r("VssueIcon",{attrs:{name:n.platform.toLowerCase(),title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}})],1),n._v(" "),r("div",{staticClass:"vssue-new-comment-body"},[r("textarea",{directives:[{name:"model",rawName:"v-model",value:n.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:n.inputRows,disabled:n.isInputDisabled,placeholder:n.vssue.$t(n.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:n.content},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.submit():null},input:function(e){e.target.composing||(n.content=e.target.value)}}})]),n._v(" "),r("div",{staticClass:"vssue-new-comment-footer"},[n.user?r("span",{staticClass:"vssue-current-user"},[r("span",[n._v(n._s(n.vssue.$t("currentUser"))+" - "+n._s(n.user.username)+" - ")]),n._v(" "),r("a",{staticClass:"vssue-logout",on:{click:function(e){return n.vssue.logout()}}},[n._v("\n        "+n._s(n.vssue.$t("logout"))+"\n      ")])]):r("span",{staticClass:"vssue-current-user"},[n._v("\n      "+n._s(n.vssue.$t("loginToComment",{platform:n.platform}))+"\n    ")]),n._v(" "),r("div",{staticClass:"vssue-new-comment-operations"},[n.user?r("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:n.isSubmitDisabled},on:{click:function(e){return n.submit()}}},[r("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.loading,expression:"loading"}],attrs:{name:"loading"}}),n._v("\n\n        "+n._s(n.vssue.$t(n.loading?"submitting":"submitComment"))+"\n      ")],1):r("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}},[n._v("\n        "+n._s(n.vssue.$t("login",{platform:n.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Ht,void 0,!1,void 0,!1,void 0,void 0,void 0);let Gt=class extends t.default{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(n){this.vssue.comments&&(n?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",n=>this.alertShow(n.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(n){this.alert.show=!0,this.alert.message=n,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};zt([yr()],Gt.prototype,"vssue",void 0),zt([$r("vssue.isLoadingComments")],Gt.prototype,"onLoadingCommentsChange",null),Gt=zt([Object(br.b)({components:{TransitionFade:Pt}})],Gt);const Qt=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"vssue-notice"},[r("div",{directives:[{name:"show",rawName:"v-show",value:n.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:n.progress.percent+"%",transition:"all "+n.progress.speed+"ms linear"}}),n._v(" "),r("TransitionFade",[r("div",{directives:[{name:"show",rawName:"v-show",value:n.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:n._s(n.alert.message)},on:{click:function(e){return n.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Gt,void 0,!1,void 0,!1,void 0,void 0,void 0);let Kt=class extends t.default{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};zt([yr()],Kt.prototype,"vssue",void 0),Kt=zt([Object(br.b)({components:{TransitionFade:Pt,VssueIcon:Mt}})],Kt);const Yt=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("TransitionFade",[n.status?r("div",{key:n.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(n.status)?r("VssueIcon",{attrs:{name:"failed"===n.status?"error":"loading"}}):n._e(),n._v(" "),r("p",{staticClass:"vssue-status-info"},[r(["issueNotCreated","loginRequired"].includes(n.status)?"a":"span",{tag:"Component",on:{click:n.handleClick}},[n._v("\n        "+n._s(n.vssue.$t(n.status))+"\n      ")])],1)],1):n._e()])},staticRenderFns:[]},void 0,Kt,void 0,!1,void 0,!1,void 0,void 0,void 0);let Jt=class extends t.default{};zt([yr()],Jt.prototype,"vssue",void 0),Jt=zt([Object(br.b)({components:{TransitionFade:Pt,VssueIcon:Mt,VssueComments:qt,VssueNewComment:Wt,VssueNotice:Qt,VssueStatus:Yt}})],Jt);const Zt=Ft({render:function(){var n=this.$createElement,e=this._self._c||n;return e("TransitionFade",[this.vssue.isInitializing?e("VssueStatus"):e("div",{staticClass:"vssue-body"},[this.vssue.API?e("VssueNewComment"):this._e(),this._v(" "),e("VssueNotice"),this._v(" "),e("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?e("VssueComments"):e("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,Jt,void 0,!1,void 0,!1,void 0,void 0,void 0);let Xt=class extends t.default{};zt([yr()],Xt.prototype,"vssue",void 0),Xt=zt([br.b],Xt);const na=Ft({render:function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"vssue-header"},[r("a",{staticClass:"vssue-header-comments-count",attrs:{href:n.vssue.issue?n.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[r("span",[n._v("\n      "+n._s(n.vssue.comments?n.vssue.$tc("comments",n.vssue.comments.count,{count:n.vssue.comments.count}):n.vssue.$tc("comments",0))+"\n    ")])]),n._v(" "),r("span",{staticClass:"vssue-header-powered-by"},[r("span",[n._v("Powered by")]),n._v(" "),n.vssue.API?r("span",[r("a",{attrs:{href:n.vssue.API.platform.link,title:n.vssue.API.platform.name+" API "+n.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n        "+n._s(n.vssue.API.platform.name)+"\n      ")]),n._v(" "),r("span",[n._v("&")])]):n._e(),n._v(" "),r("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+n.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,Xt,void 0,!1,void 0,!1,void 0,void 0,void 0),ea={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},ra={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},ta={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},aa={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},oa={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(t.default,"$i18n")||t.default.use(Et);const ia=new Et({locale:"en",fallbackLocale:"en",messages:{en:ea,"en-US":ea,zh:ra,"zh-CN":ra,pt:ta,"pt-BR":ta,ja:aa,"ja-JP":aa,he:oa,"he-IL":oa}});let la=class extends t.default{constructor(){super(...arguments),this.title=n=>`${n.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.8"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(n){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:n=>"https://cors-anywhere.azm.workers.dev/"+n,issueContent:({url:n})=>n,autoCreateIssue:!1},n);const e=["api","owner","repo","clientId"];for(const n of e)this.options[n]||console.warn(`[Vssue] the option '${n}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const n=Object.keys(this.$i18n.messages),e=window.navigator.languages;this.$i18n.locale=e.filter(e=>n.includes(e)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(n){n.response&&[401,403].includes(n.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(n)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const n=this.options.api;this.API=new n({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[n,e]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=n,this.comments=e}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const n=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:Or(window.location.href)}),accessToken:this.accessToken});this.issue=n,this.isIssueNotCreated=!1,await this.getComments()}catch(n){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const n=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=n,this.query.page!==n.page&&(this.query.page=n.page),this.query.perPage!==n.perPage&&(this.query.perPage=n.perPage),n}catch(n){if(!n.response||![401,403].includes(n.response.status)||this.isLogined)throw this.$emit("error",n),n;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:n}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:n,issueId:this.issue.id})}catch(n){throw this.$emit("error",n),n}finally{this.isCreatingComment=!1}}async putComment({commentId:n,content:e}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,content:e})}catch(n){throw this.$emit("error",n),n}}async deleteComment({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async getCommentReactions({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async postCommentReaction({commentId:n,reaction:e}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,reaction:e})}catch(n){throw this.$emit("error",n),n}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const n=await this.API.handleAuth();n?(this.setAccessToken(n),this.user=await this.API.getUser({accessToken:n})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(n){null===n?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,n),this.accessToken=n}};zt([$r("query.perPage")],la.prototype,"onQueryPerPageChange",null),zt([$r("query.page"),$r("query.sort")],la.prototype,"onQueryChange",null),la=zt([Object(br.b)({i18n:ia})],la);var sa=la;let ca=class extends t.default{constructor(){super(...arguments),this.vssue=new sa}onOptionsChange(n){this.vssue.setOptions(n)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var ua;zt([Sr({type:[String,Function],required:!1,default:null})],ca.prototype,"title",void 0),zt([Sr({type:[String,Number],required:!1,default:null})],ca.prototype,"issueId",void 0),zt([Sr({type:Object,required:!1,default:()=>({})})],ca.prototype,"options",void 0),zt([(ua="vssue",Object(br.a)((function(n,e){var r=n.provide;Cr(n),xr(r)&&(r=n.provide=wr(r)),r.managed[e]=ua||e})))],ca.prototype,"vssue",void 0),zt([$r("options",{deep:!0})],ca.prototype,"onOptionsChange",null),ca=zt([Object(br.b)({components:{Iconfont:Ot,VssueBody:Zt,VssueHeader:na}})],ca);const da=Ft({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue"},[e("Iconfont"),this._v(" "),e("VssueHeader"),this._v(" "),e("VssueBody")],1)},staticRenderFns:[]},void 0,ca,void 0,!1,void 0,!1,void 0,void 0,void 0);var pa=r(9),ma=r.n(pa);function ha(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function fa(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function ga(n){return{like:n["+1"],unlike:n[-1],heart:n.heart}}function va(n){return{id:n.id,content:n.body_html,contentRaw:n.body,author:ha(n.user),createdAt:n.created_at,updatedAt:n.updated_at,reactions:ga(n.reactions)}}function ba(n){return"like"===n?"+1":"unlike"===n?"-1":n}class ya{constructor({baseURL:n="https://github.com",owner:e,repo:r,labels:t,clientId:a,clientSecret:o,state:i,proxy:l}){if(void 0===o||void 0===l)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=n,this.owner=e,this.repo=r,this.labels=t,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=l,this.$http=ma.a.create({baseURL:"https://github.com"===n?"https://api.github.com":Er(n,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data&&n.data.error?Promise.reject(new Error(n.data.error_description)):n,n=>(void 0===n.response&&"Network Error"===n.message&&(n.response={status:403}),Promise.reject(n)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=jr(Er(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=Pr(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const r=jr(Or(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",r);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=Er(this.baseURL,"login/oauth/access_token"),r="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:t}=await this.$http.post(r,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return t.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"token "+n}});return ha(e)}async getIssue({accessToken:n,issueId:e,issueTitle:r}){const t={};if(n&&(t.headers={Authorization:"token "+n}),!e){t.params={q:[`"${r}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),timestamp:Date.now()};const{data:n}=await this.$http.get("search/issues",t);return n.items.map(fa).find(n=>n.title===r)||null}try{t.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,t);return fa(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:r}){const{data:t}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:r,labels:this.labels},{headers:{Authorization:"token "+n}});return fa(t)}async getComments({accessToken:n,issueId:e,query:{page:r=1,perPage:t=10}={}}){const a={params:{timestamp:Date.now()}},o={params:{page:r,per_page:t,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};n&&(a.headers={Authorization:"token "+n},o.headers.Authorization="token "+n);const[i,l]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,a),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,o)]),s=l.headers.link||null,c=/rel="next"/.test(s)?Number(s.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(s)?Number(s.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,u=s?Number(s.replace(/^.*per_page=(\d*).*$/,"$1")):t;return{count:Number(i.data.comments),page:c,perPage:u,data:l.data.map(va)}}async postComment({accessToken:n,issueId:e,content:r}){const{data:t}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:r},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return va(t)}async putComment({accessToken:n,commentId:e,content:r}){const{data:t}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:r},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return va(t)}async deleteComment({accessToken:n,commentId:e}){const{status:r}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{headers:{Authorization:"token "+n}});return 204===r}async getCommentReactions({accessToken:n,commentId:e}){const{data:r}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return ga(r.reactions)}async postCommentReaction({accessToken:n,commentId:e,reaction:r}){const t=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions`,{content:ba(r)},{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===t.status?this.deleteCommentReaction({accessToken:n,commentId:e,reactionId:t.data.id}):201===t.status}async deleteCommentReaction({accessToken:n,commentId:e,reactionId:r}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions/${r}`,{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function xa(n){return null===n?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:n.login,avatar:n.avatarUrl,homepage:n.url}}function wa(n){return{id:n.number,title:n.title,content:n.body,link:n.url}}function ka(n){return{like:n.find(n=>"THUMBS_UP"===n.content).users.totalCount,unlike:n.find(n=>"THUMBS_DOWN"===n.content).users.totalCount,heart:n.find(n=>"HEART"===n.content).users.totalCount}}function Ca(n){return{id:n.id,content:n.bodyHTML,contentRaw:n.body,author:xa(n.author),createdAt:n.createdAt,updatedAt:n.updatedAt,reactions:ka(n.reactionGroups)}}function _a(n){return"like"===n?"THUMBS_UP":"unlike"===n?"THUMBS_DOWN":"heart"===n?"HEART":n}class Da{constructor({baseURL:n="https://github.com",owner:e,repo:r,labels:t,clientId:a,clientSecret:o,state:i,proxy:l}){if(void 0===o||void 0===l)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=n,this.owner=e,this.repo=r,this.labels=t,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=l,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=ma.a.create({baseURL:"https://github.com"===n?"https://api.github.com":Er(n,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data.error?Promise.reject(n.data.error_description):n.data.errors?Promise.reject(n.data.errors[0].message):n)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=jr(Er(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=Pr(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const r=jr(Or(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",r);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=Er(this.baseURL,"login/oauth/access_token"),r="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:t}=await this.$http.post(r,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return t.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+n}});return xa(e.data.viewer)}async getIssue({accessToken:n,issueId:e,issueTitle:r}){const t={};if(n&&(t.headers={Authorization:"token "+n}),!e){const n=[`"${r}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),{data:e}=await this.$http.post("graphql",{variables:{query:n},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},t),a=e.data.search.nodes.find(n=>n.title===r);return a?(this._issueNodeId=a.id,wa(a)):null}try{const{data:n}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${e}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},t);return this._issueNodeId=n.data.repository.issue.id,wa(n.data.repository.issue)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:r}){const{data:t}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:r,labels:this.labels},{headers:{Authorization:"token "+n}});return t.url=t.html_url,this._issueNodeId=t.node_id,wa(t)}async getComments({accessToken:n,issueId:e,query:{page:r=1,perPage:t=10,sort:a="desc"}={}}){const o={};n&&(o.headers={Authorization:"token "+n}),null!==this._pageInfo.sort&&a!==this._pageInfo.sort&&(r=1);const{firstOrLast:i,afterOrBefore:l,cursor:s}=this._getQueryParams({page:r,sort:a}),{data:c}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:t},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${i}: $perPage\n        ${null===l?"":`${l}: "${s}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},o),u=c.data.repository.issue.comments;return"desc"===a&&u.nodes.reverse(),this._pageInfo={page:r,startCursor:u.pageInfo.startCursor,endCursor:u.pageInfo.endCursor,sort:a,perPage:t},{count:u.totalCount,page:r,perPage:t,data:u.nodes.map(Ca)}}async postComment({accessToken:n,content:e}){const{data:r}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:e},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return Ca(r.data.addComment.commentEdge.node)}async putComment({accessToken:n,commentId:e,content:r}){const{data:t}=await this.$http.post("graphql",{variables:{commentId:e,content:r},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return Ca(t.data.updateIssueComment.issueComment)}async deleteComment({accessToken:n,commentId:e}){return await this.$http.post("graphql",{variables:{commentId:e},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}async getCommentReactions({accessToken:n,issueId:e,commentId:r}){const{firstOrLast:t,afterOrBefore:a,cursor:o}=this._getQueryParams(),{data:i}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${t}: $perPage\n        ${null===a?"":`${a}: "${o}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+n}});return ka(i.data.repository.issue.comments.nodes.find(n=>n.id===r).reactionGroups)}async postCommentReaction({accessToken:n,commentId:e,reaction:r}){return await this.$http.post("graphql",{variables:{commentId:e,content:_a(r)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}_getQueryParams({page:n=this._pageInfo.page,sort:e=this._pageInfo.sort}={}){let r,t,a;return 1===n?(r="asc"===e?"first":"last",t=null,a=null):"asc"===e?n>this._pageInfo.page?(r="first",t="after",a=this._pageInfo.endCursor):(r="last",t="before",a=this._pageInfo.startCursor):n>this._pageInfo.page?(r="last",t="before",a=this._pageInfo.startCursor):(r="first",t="after",a=this._pageInfo.endCursor),{firstOrLast:r,afterOrBefore:t,cursor:a}}}function Sa(n){return{username:n.username,avatar:n.avatar_url,homepage:n.web_url}}function $a(n){return{id:n.iid,title:n.title,content:n.description,link:n.web_url}}function Aa(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:Sa(n.author),createdAt:n.created_at,updatedAt:n.updated_at,reactions:n.reactions}}function Ta(n){return{like:n.filter(n=>"thumbsup"===n.name).length,unlike:n.filter(n=>"thumbsdown"===n.name).length,heart:n.filter(n=>"heart"===n.name).length}}function ja(n){return"like"===n?"thumbsup":"unlike"===n?"thumbsdown":n}class Ea{constructor({baseURL:n="https://gitlab.com",owner:e,repo:r,labels:t,clientId:a,state:o}){this.baseURL=n,this.owner=e,this.repo=r,this.labels=t,this.clientId=a,this.state=o,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=ma.a.create({baseURL:Er(n,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=jr(Er(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=Pr(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state;const r=Tr(n),t=r?"#"+r:"",a=`${Or(window.location.href)}${window.location.search}${t}`;return window.history.replaceState(null,"",a),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return Sa(e)}async getIssue({accessToken:n,issueId:e,issueTitle:r}){const t={};if(n&&(t.headers={Authorization:"Bearer "+n}),!e){t.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:r};const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues`,t);return n.map($a).find(n=>n.title===r)||null}try{const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}`,t);return $a(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:r}){const{data:t}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:e,description:r,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+n}});return $a(t)}async getComments({accessToken:n,issueId:e,query:{page:r=1,perPage:t=10,sort:a="desc"}={}}){const o={params:{page:r,per_page:t,order_by:"created_at",sort:a}};n&&(o.headers={Authorization:"Bearer "+n});const i=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes`,o),l=i.data,s=[];for(const r of l)s.push((async()=>{r.body_html=await this.getMarkdownContent({accessToken:n,contentRaw:r.body})})()),s.push((async()=>{r.reactions=await this.getCommentReactions({accessToken:n,issueId:e,commentId:r.id})})());return await Promise.all(s),{count:Number(i.headers["x-total"]),page:Number(i.headers["x-page"]),perPage:Number(i.headers["x-per-page"]),data:l.map(Aa)}}async postComment({accessToken:n,issueId:e,content:r}){const{data:t}=await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes`,{body:r},{headers:{Authorization:"Bearer "+n}});return Aa(t)}async putComment({accessToken:n,issueId:e,commentId:r,content:t}){const{data:a}=await this.$http.put(`projects/${this._encodedRepo}/issues/${e}/notes/${r}`,{body:t},{headers:{Authorization:"Bearer "+n}}),[o,i]=await Promise.all([this.getMarkdownContent({accessToken:n,contentRaw:a.body}),this.getCommentReactions({accessToken:n,issueId:e,commentId:a.id})]);return a.body_html=o,a.reactions=i,Aa(a)}async deleteComment({accessToken:n,issueId:e,commentId:r}){const{status:t}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${e}/notes/${r}`,{headers:{Authorization:"Bearer "+n}});return 204===t}async getCommentReactions({accessToken:n,issueId:e,commentId:r}){const{data:t}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes/${r}/award_emoji`,{headers:{Authorization:"Bearer "+n}});return Ta(t)}async postCommentReaction({issueId:n,commentId:e,reaction:r,accessToken:t}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${n}/notes/${e}/award_emoji`,{name:ja(r)},{headers:{Authorization:"Bearer "+t}})).status}catch(n){if(n.response&&404===n.response.status)return!1;throw n}}async getMarkdownContent({accessToken:n,contentRaw:e}){const r={};n&&(r.headers={Authorization:"Bearer "+n});const{data:t}=await this.$http.post("markdown",{text:e,gfm:!0},r);return t.html}}function za(n){return{username:n.nickname,avatar:n.links.avatar.href,homepage:n.links.html.href}}function Ia(n){return{id:n.id,title:n.title,content:n.content.raw,link:n.links.html.href}}function Fa(n){return{id:n.id,content:n.content.html,contentRaw:n.content.raw,author:za(n.user),createdAt:n.created_on,updatedAt:n.updated_on,reactions:null}}class Oa{constructor({baseURL:n="https://bitbucket.org",owner:e,repo:r,clientId:t,state:a}){this.baseURL=n,this.owner=e,this.repo=r,this.clientId=t,this.state=a,this.$http=ma.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=jr(Er(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=Pr(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state,delete n.scopes;const r=Tr(n),t=r?"#"+r:"",a=`${Or(window.location.href)}${window.location.search}${t}`;return window.history.replaceState(null,"",a),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return za(e)}async getIssue({accessToken:n,issueId:e,issueTitle:r}){const t={};if(n&&(t.headers={Authorization:"Bearer "+n}),!e){t.params={sort:"created_on",q:`title="${r}"`,timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,t);return n.size>0?Ia(n.values[0]):null}try{t.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}`,t);return Ia(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:r}){const{data:t}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:e,content:{raw:r},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+n}});return t.links.html={href:Er(this.baseURL,`${this.owner}/${this.repo}/issues/${t.id}`)},Ia(t)}async getComments({accessToken:n,issueId:e,query:{page:r=1,perPage:t=10,sort:a="desc"}={}}){const o={params:{page:r,pagelen:t,sort:"desc"===a?"-created_on":"created_on",timestamp:Date.now()}};n&&(o.headers={Authorization:"Bearer "+n});const{data:i}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,o);return{count:i.size,page:i.page,perPage:i.pagelen,data:i.values.filter(n=>null!==n.content.raw).map(Fa)}}async postComment({accessToken:n,issueId:e,content:r}){const{data:t}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,{content:{raw:r}},{headers:{Authorization:"Bearer "+n}});return Fa(t)}async putComment({accessToken:n,issueId:e,commentId:r,content:t}){const{data:a}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${r}`,{content:{raw:t}},{headers:{Authorization:"Bearer "+n}});return Fa(a)}async deleteComment({accessToken:n,issueId:e,commentId:r}){const{status:t}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${r}`,{headers:{Authorization:"Bearer "+n}});return 204===t}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}function Pa(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function Ma(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function La(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:Pa(n.user),createdAt:n.created_at,updatedAt:n.updated_at||"",reactions:null}}class Ra{constructor({baseURL:n="https://gitee.com",owner:e,repo:r,labels:t,clientId:a,clientSecret:o,state:i,proxy:l}){if(void 0===o||void 0===l)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=n,this.owner=e,this.repo=r,this.labels=t,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=l,this.$http=ma.a.create({baseURL:Er(n,"api/v5")}),this.$http.interceptors.response.use(n=>n,n=>(n.response.data&&n.response.data.message&&(n.message=n.response.data.message),Promise.reject(n)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=jr(Er(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const n=Pr(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const r=jr(Or(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",r);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=Er(this.baseURL,"oauth/token"),r="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:t}=await this.$http.post(r,{client_id:this.clientId,client_secret:this.clientSecret,code:n,grant_type:"authorization_code",redirect_uri:window.location.href});return t.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{params:{access_token:n}});return Pa(e)}async getIssue({accessToken:n,issueId:e,issueTitle:r}){const t={params:{timestamp:Date.now()}};if(n&&(t.params.access_token=n),!e){Object.assign(t.params,{q:r,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:n}=await this.$http.get("search/issues",t);return n.map(Ma).find(n=>n.title===r)||null}try{const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,t);return Ma(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:r}){const{data:t}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:n,repo:this.repo,title:e,body:r,labels:this.labels.join(",")});return Ma(t)}async getComments({accessToken:n,issueId:e,query:{page:r=1,perPage:t=10}={}}){const a={params:{page:r,per_page:t,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};n&&(a.params.access_token=n);const o=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,a);return{count:Number(o.headers.total_count),page:r,perPage:t,data:o.data.map(La)}}async postComment({accessToken:n,issueId:e,content:r}){const{data:t}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:r,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return La(t)}async putComment({accessToken:n,commentId:e,content:r}){const{data:t}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:r,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return La(t)}async deleteComment({accessToken:n,commentId:e}){const{status:r}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{access_token:n}});return 204===r}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}r(316);var Ba={name:"Vssue",components:{VssueComponent:da},props:{options:{type:Object,default:()=>({})}},data:()=>({key:"key",platformOptions:{github:ya,"github-v4":Da,gitlab:Ea,bitbucket:Oa,gitee:Ra}}),computed:{vssueOptions(){const{platformOptions:n,options:e}=this,r=n[e.platform];return{...e,api:r}}},watch:{$route(n,e){n.path!==e.path&&setTimeout(()=>{this.key="reco-"+(new Date).getTime()},300)}}},Na=(r(317),{components:{Valine:vr,Vssue:Object(qe.a)(Ba,(function(){return(0,this._self._c)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:()=>({commentsOptions:{}}),computed:{solution(){const{commentsOptions:{solution:n},$themeConfig:{valineConfig:e,vssueConfig:r},$themeLocaleConfig:{valineConfig:t,vssueConfig:a}}=this;let o="";return void 0!==n?o=n:void 0!==t||void 0!==e?o="valine":void 0===a&&void 0===r||(o="vssue"),o},options(){const{commentsOptions:{options:n},$themeConfig:{valineConfig:e,vssueConfig:r},$themeLocaleConfig:{valineConfig:t,vssueConfig:a}}=this;return void 0!==n?n:void 0!==t||void 0!==e?t||e:void 0!==a||void 0!==r?a||r:null},componentName(){const n=this.solution;return"valine"===n?"Valine":"vssue"===n?"Vssue":""}},mounted(){this.$themeConfig.commentsSolution=this.solution}}),Ua=Object(qe.a)(Na,(function(){var n=this._self._c;return n("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[n("ClientOnly",[n(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,qa={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal(n){const e=this.$site.base;return e.slice(0,e.length-1)+n}}},Va=Object(qe.a)(qa,(function(){var n=this._self._c;return n("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[n("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,Ha=(r(318),{tags:{},categories:{},timeline:{}});class Wa{constructor(n,e){this._metaMap=Object.assign({},n),Object.keys(this._metaMap).forEach(n=>{const{pageKeys:r}=this._metaMap[n];this._metaMap[n].pages=r.map(n=>function(n,e){for(let r=0;r<n.length;r++){const t=n[r];if(t.key===e)return t}return{path:"",frontmatter:{}}}(e,n))})}get length(){return Object.keys(this._metaMap).length}get map(){return this._metaMap}get pages(){return this.list}get list(){return this.toArray()}toArray(){const n=[];return Object.keys(this._metaMap).forEach(e=>{const{pages:r,path:t}=this._metaMap[e];n.push({name:e,pages:r,path:t})}),n}getItemByName(n){return this._metaMap[n]}}var Ga=r(127);const Qa=r.n(Ga)()("plugin-blog:pagination");class Ka{constructor(n,e,r){Qa("pagination",n);const{pages:t,prevText:a,nextText:o}=n,{path:i}=r;this._prevText=a,this._nextText=o;for(let n=0,e=t.length;n<e;n++){if(t[n].path===i){this.paginationIndex=n;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=t,this._currentPage=t[this.paginationIndex],this._matchedPages=e.filter(e=>n.filter(e,n.id,n.pid)).sort(n.sorter)}setIndexPage(n){this._indexPage=n}get length(){return this._paginationPages.length}get pages(){const[n,e]=this._currentPage.interval;return this._matchedPages.slice(n,e+1)}get hasPrev(){return 0!==this.paginationIndex}get prevLink(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}get hasNext(){return this.paginationIndex!==this.length-1}get nextLink(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}get prevText(){return this._prevText}get nextText(){return this._nextText}getSpecificPageLink(n){return this._paginationPages[n].path}}const Ya=new class{constructor(n){this.paginations=n}get pages(){return t.default.$vuepress.$get("siteData").pages}getPagination(n,e,r){Qa("id",e),Qa("pid",n);const t=this.paginations.filter(r=>r.id===e&&r.pid===n)[0];return new Ka(t,this.pages,r)}}([]);var Ja={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};r(321);function Za(n){const e=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-e.left,y:r.top-e.top}}var Xa=[async({Vue:n})=>{if("undefined"!=typeof window){const[{default:e},{default:t},{default:a},{default:o}]=await Promise.all([r.e(35).then(r.bind(null,976)),r.e(4).then(r.t.bind(null,504,7)),Promise.all([r.e(4),r.e(5),r.e(16),r.e(204)]).then(r.bind(null,799)),Promise.all([r.e(0),r.e(39)]).then(r.bind(null,803))]);n.use(e),n.use(t,{size:"small"}),n.use(a,{crudOptions:{gap:0,border:!0},dict:{request:n=>Promise.resolve({data:{cascade:[{label:"选项1",value:"1",children:[{label:"选项1-1",value:"1-1"},{label:"选项1-2",value:"1-2"}]},{label:"选项2",value:"2"}],gender:[{label:"男",value:"1"},{label:"女",value:"2"}],gender1:[{label:"男",value:"1"},{label:"女",value:"2"}]}[n]})},template:{crud:{uniqueId:!0,handleRow:{tempGlobalButton:{label:"自定义temp按钮",icon:"el-icon-eleme",onClick:()=>{console.log("自定义temp按钮")}}}},dicts:{getList:n=>({request:(n,e)=>{const r=[{label:"男",value:"1"},{label:"女",value:"2"}];setTimeout(()=>{e(r)},500)}})},render:{testCodeTemplate:n=>({search:{comp:{name:n.searchCompName,type:n.SearchCompType}},form:{comp:{name:n.formCompName}},formatter:e=>e[n.prop]+"自定义格式化"})}}}),n.use(o)}},({Vue:n,siteData:e,isServer:r,router:t})=>{n.mixin(Je),n.mixin(or),Object(ir.c)(t),Object(ir.a)(t)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},({Vue:n})=>{n.component("BackToTop",sr)},({Vue:n})=>{n.component("Pagation",fr)},({Vue:n})=>{n.mixin({computed:{$perPage:()=>10}})},({Vue:n})=>{n.component("Comments",Ua),n.component("AccessNumber",Va)},{},({Vue:n})=>{const e=Object.keys(Ha).map(n=>{const e=Ha[n],r="$"+n;return{[r](){const{pages:n}=this.$site;return new Wa(e,n)},["$current"+(n.charAt(0).toUpperCase()+n.slice(1))](){const n=this.$route.meta.id;return this[r].getItemByName(n)}}}).reduce((n,e)=>(Object.assign(n,e),n),{});e.$frontmatterKey=function(){const n=this["$"+this.$route.meta.id];return n||null},n.mixin({computed:e})},({Vue:n})=>{n.mixin({computed:{$pagination(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination(n,e){return e=e||n,Ya.getPagination(n,e,this.$route)}}})},({Vue:n})=>{const e={$service:()=>Ja};n.mixin({computed:e})},({Vue:n,router:e})=>{e.options.scrollBehavior=(e,r,t)=>{if(t)return window.scrollTo({top:t.y,behavior:"smooth"});if(e.hash){if(n.$vuepress.$get("disableScrollBehavior"))return!1;const r=document.querySelector(e.hash);return!!r&&window.scrollTo({top:Za(r).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}},({Vue:n})=>{n.component("CodeCopy",Ve)}],no=["BackToTop"];class eo extends class{constructor(){this.store=new t.default({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){t.default.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(eo.prototype,{getPageAsyncComponent:ce,getLayoutAsyncComponent:ue,getAsyncComponent:de,getVueComponent:pe});var ro={install(n){const e=new eo;n.$vuepress=e,n.prototype.$vuepress=e}};function to(n,e){const r=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===r)}var ao={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return he("pageKey",e),t.default.component(e)||t.default.component(e,ce(e)),t.default.component(e)?n(e):n("")}},oo={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:r})=>n("div",{class:["content__"+e.slotKey]},r()[e.slotKey])},io={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},lo=(r(322),r(323),Object(qe.a)(io,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),so={functional:!0,render(n,{parent:e,children:r}){if(e._isMounted)return r;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};t.default.config.productionTip=!1,t.default.use(Gn),t.default.use(ro),t.default.mixin(function(n,e,r=t.default){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),r.$vuepress.$set("siteData",e);const a=new(n(r.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),i={};return Object.keys(o).reduce((n,e)=>(e.startsWith("$")&&(n[e]=o[e].get),n),i),{computed:i}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,r;for(const t in n)"/"===t?r=n[t]:0===this.$page.path.indexOf(t)&&(e=n[t]);return e||r||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const r=this.$siteTitle,t=n.frontmatter.home?null:n.frontmatter.title||n.title;return r?t?t+" | "+r:r:t||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let r=0;r<n.length;r++){const t=n[r];if(t.path.toLowerCase()===e.toLowerCase())return t}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Ke)),t.default.component("Content",ao),t.default.component("ContentSlotsDistributor",oo),t.default.component("OutboundLink",lo),t.default.component("ClientOnly",so),t.default.component("Layout",ue("Layout")),t.default.component("NotFound",ue("NotFound")),t.default.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.10",hash:"4dbae0a"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ke.routerBase||Ke.base,r=new Gn({base:e,mode:"history",fallback:!1,routes:Qe,scrollBehavior:(n,e,r)=>r||(n.hash?!t.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,r,t)=>{if(to(n,e.path))t();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const r=e.path.replace(/\/$/,"")+".html";to(n,r)?t(r):t()}else t();else{const r=e.path+"/",a=e.path+".html";to(n,a)?t(a):to(n,r)?t(r):t()}})}(r);const a={};try{await Promise.all(Xa.filter(n=>"function"==typeof n).map(e=>e({Vue:t.default,options:a,router:r,siteData:Ke,isServer:n})))}catch(n){console.error(n)}return{app:new t.default(Object.assign(a,{router:r,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},no.map(e=>n(e)))])})),router:r}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);