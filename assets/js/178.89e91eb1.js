(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{950:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"扩展功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展功能"}},[t._v("#")]),t._v(" 扩展功能")]),t._v(" "),s("h2",{attrs:{id:"持久化拖动列宽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久化拖动列宽"}},[t._v("#")]),t._v(" 持久化拖动列宽")]),t._v(" "),s("p",[s("code",[t._v("persistWidth:true")]),t._v(" 开启后，用户拖动表格列宽的设置会自动保存到本地缓存，下次进入页面时自动恢复，无需重复调整。")]),t._v(" "),s("h2",{attrs:{id:"持久化每页条数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久化每页条数"}},[t._v("#")]),t._v(" 持久化每页条数")]),t._v(" "),s("p",[s("code",[t._v("persistPageSize:true")]),t._v(" 开启后，分页组件支持将用户选择的每页条数自动保存，下次进入页面时自动恢复。")]),t._v(" "),s("h2",{attrs:{id:"分页滚动位置记忆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页滚动位置记忆"}},[t._v("#")]),t._v(" 分页滚动位置记忆")]),t._v(" "),s("p",[t._v("切换分页时自动记忆并恢复每页的滚动位置(临时储存)，提升用户体验。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crudOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pagination")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("memorizeScroll")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启分页滚动位置记忆")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"设置组件级存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置组件级存储"}},[t._v("#")]),t._v(" 设置组件级存储")]),t._v(" "),s("p",[s("code",[t._v("stateKey")]),t._v(" 配置项用于设置组件级存储的键名，默认为路由级存储。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("组件级存储: 每个组件都有自己的存储，互不干扰。"),s("br"),t._v("\n路由级存储: 多个组件共享同一个配置对象，会相互干扰。")])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crudOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("stateKey")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myCrudState'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);